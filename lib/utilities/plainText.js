"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "contentFromPlainTextHTMLNodes", {
    enumerable: true,
    get: function() {
        return contentFromPlainTextHTMLNodes;
    }
});
var _necessary = require("necessary");
var _content = require("../utilities/content");
var first = _necessary.arrayUtilities.first, last = _necessary.arrayUtilities.last;
function contentFromPlainTextHTMLNodes(plainTextHTMLNodes, htmlNode, context) {
    var content = null;
    var plainTextHTMLNodesLength = plainTextHTMLNodes.length;
    if (plainTextHTMLNodesLength > 0) {
        var markdownNodes = markdownNodesFromPlainTextHTMLNodes(plainTextHTMLNodes), markdownNode = htmlNode.getMarkdownNode(), parentNode = markdownNode, childNodes = markdownNodes, endChildNode = last(childNodes), startChildNode = first(childNodes), startChildNodeIndex = parentNode.indexOfChildNode(startChildNode), endChildNodeIndex = parentNode.indexOfChildNode(endChildNode), multiplicity = parentNode.getMultiplicity(), firstChildNodeIndex = 0, lastChildNodeIndex = multiplicity - 1, augmentLeft = endChildNodeIndex !== firstChildNodeIndex, augmentRight = startChildNodeIndex !== lastChildNodeIndex, nodes = childNodes; ///
        content = (0, _content.contentFromNodes)(nodes, augmentLeft, augmentRight, context);
    }
    return content;
}
function markdownNodesFromPlainTextHTMLNodes(plainTextHTMLNodes) {
    var markdownNodes = plainTextHTMLNodes.map(function(plainTextHTMLNode) {
        var markdownNode = plainTextHTMLNode.getMarkdownNode();
        return markdownNode;
    });
    return markdownNodes;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcGxhaW5UZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBhcnJheVV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgY29udGVudEZyb21Ob2RlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvY29udGVudFwiO1xuXG5jb25zdCB7IGZpcnN0LCBsYXN0IH0gPSBhcnJheVV0aWxpdGllcztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnRlbnRGcm9tUGxhaW5UZXh0SFRNTE5vZGVzKHBsYWluVGV4dEhUTUxOb2RlcywgaHRtbE5vZGUsIGNvbnRleHQpIHtcbiAgbGV0IGNvbnRlbnQgPSBudWxsO1xuXG4gIGNvbnN0IHBsYWluVGV4dEhUTUxOb2Rlc0xlbmd0aCA9IHBsYWluVGV4dEhUTUxOb2Rlcy5sZW5ndGg7XG5cbiAgaWYgKHBsYWluVGV4dEhUTUxOb2Rlc0xlbmd0aCA+IDApIHtcbiAgICBjb25zdCBtYXJrZG93bk5vZGVzID0gbWFya2Rvd25Ob2Rlc0Zyb21QbGFpblRleHRIVE1MTm9kZXMocGxhaW5UZXh0SFRNTE5vZGVzKSxcbiAgICAgICAgICBtYXJrZG93bk5vZGUgPSBodG1sTm9kZS5nZXRNYXJrZG93bk5vZGUoKSxcbiAgICAgICAgICBwYXJlbnROb2RlID0gbWFya2Rvd25Ob2RlLCAgLy8vXG4gICAgICAgICAgY2hpbGROb2RlcyA9IG1hcmtkb3duTm9kZXMsIC8vL1xuICAgICAgICAgIGVuZENoaWxkTm9kZSA9IGxhc3QoY2hpbGROb2RlcyksXG4gICAgICAgICAgc3RhcnRDaGlsZE5vZGUgPSBmaXJzdChjaGlsZE5vZGVzKSxcbiAgICAgICAgICBzdGFydENoaWxkTm9kZUluZGV4ID0gcGFyZW50Tm9kZS5pbmRleE9mQ2hpbGROb2RlKHN0YXJ0Q2hpbGROb2RlKSxcbiAgICAgICAgICBlbmRDaGlsZE5vZGVJbmRleCA9IHBhcmVudE5vZGUuaW5kZXhPZkNoaWxkTm9kZShlbmRDaGlsZE5vZGUpLFxuICAgICAgICAgIG11bHRpcGxpY2l0eSA9IHBhcmVudE5vZGUuZ2V0TXVsdGlwbGljaXR5KCksXG4gICAgICAgICAgZmlyc3RDaGlsZE5vZGVJbmRleCA9IDAsXG4gICAgICAgICAgbGFzdENoaWxkTm9kZUluZGV4ID0gbXVsdGlwbGljaXR5IC0gMSxcbiAgICAgICAgICBhdWdtZW50TGVmdCA9IChlbmRDaGlsZE5vZGVJbmRleCAhPT0gZmlyc3RDaGlsZE5vZGVJbmRleCksXG4gICAgICAgICAgYXVnbWVudFJpZ2h0ID0gKHN0YXJ0Q2hpbGROb2RlSW5kZXggIT09IGxhc3RDaGlsZE5vZGVJbmRleCksICAvLy9cbiAgICAgICAgICBub2RlcyA9IGNoaWxkTm9kZXM7IC8vL1xuXG4gICAgY29udGVudCA9IGNvbnRlbnRGcm9tTm9kZXMobm9kZXMsIGF1Z21lbnRMZWZ0LCBhdWdtZW50UmlnaHQsIGNvbnRleHQpO1xuICB9XG5cbiAgcmV0dXJuIGNvbnRlbnQ7XG59XG5cbmZ1bmN0aW9uIG1hcmtkb3duTm9kZXNGcm9tUGxhaW5UZXh0SFRNTE5vZGVzKHBsYWluVGV4dEhUTUxOb2Rlcykge1xuICBjb25zdCBtYXJrZG93bk5vZGVzID0gcGxhaW5UZXh0SFRNTE5vZGVzLm1hcCgocGxhaW5UZXh0SFRNTE5vZGUpID0+IHtcbiAgICBjb25zdCBtYXJrZG93bk5vZGUgPSBwbGFpblRleHRIVE1MTm9kZS5nZXRNYXJrZG93bk5vZGUoKTtcblxuICAgIHJldHVybiBtYXJrZG93bk5vZGU7XG4gIH0pO1xuXG4gIHJldHVybiBtYXJrZG93bk5vZGVzO1xufVxuIl0sIm5hbWVzIjpbImNvbnRlbnRGcm9tUGxhaW5UZXh0SFRNTE5vZGVzIiwiZmlyc3QiLCJhcnJheVV0aWxpdGllcyIsImxhc3QiLCJwbGFpblRleHRIVE1MTm9kZXMiLCJodG1sTm9kZSIsImNvbnRleHQiLCJjb250ZW50IiwicGxhaW5UZXh0SFRNTE5vZGVzTGVuZ3RoIiwibGVuZ3RoIiwibWFya2Rvd25Ob2RlcyIsIm1hcmtkb3duTm9kZXNGcm9tUGxhaW5UZXh0SFRNTE5vZGVzIiwibWFya2Rvd25Ob2RlIiwiZ2V0TWFya2Rvd25Ob2RlIiwicGFyZW50Tm9kZSIsImNoaWxkTm9kZXMiLCJlbmRDaGlsZE5vZGUiLCJzdGFydENoaWxkTm9kZSIsInN0YXJ0Q2hpbGROb2RlSW5kZXgiLCJpbmRleE9mQ2hpbGROb2RlIiwiZW5kQ2hpbGROb2RlSW5kZXgiLCJtdWx0aXBsaWNpdHkiLCJnZXRNdWx0aXBsaWNpdHkiLCJmaXJzdENoaWxkTm9kZUluZGV4IiwibGFzdENoaWxkTm9kZUluZGV4IiwiYXVnbWVudExlZnQiLCJhdWdtZW50UmlnaHQiLCJub2RlcyIsImNvbnRlbnRGcm9tTm9kZXMiLCJtYXAiLCJwbGFpblRleHRIVE1MTm9kZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBUWdCQTs7O2VBQUFBOzs7eUJBTmU7dUJBRUU7QUFFakMsSUFBUUMsUUFBZ0JDLHlCQUFjLENBQTlCRCxPQUFPRSxPQUFTRCx5QkFBYyxDQUF2QkM7QUFFUixTQUFTSCw4QkFBOEJJLGtCQUFrQixFQUFFQyxRQUFRLEVBQUVDLE9BQU87SUFDakYsSUFBSUMsVUFBVTtJQUVkLElBQU1DLDJCQUEyQkosbUJBQW1CSyxNQUFNO0lBRTFELElBQUlELDJCQUEyQixHQUFHO1FBQ2hDLElBQU1FLGdCQUFnQkMsb0NBQW9DUCxxQkFDcERRLGVBQWVQLFNBQVNRLGVBQWUsSUFDdkNDLGFBQWFGLGNBQ2JHLGFBQWFMLGVBQ2JNLGVBQWViLEtBQUtZLGFBQ3BCRSxpQkFBaUJoQixNQUFNYyxhQUN2Qkcsc0JBQXNCSixXQUFXSyxnQkFBZ0IsQ0FBQ0YsaUJBQ2xERyxvQkFBb0JOLFdBQVdLLGdCQUFnQixDQUFDSCxlQUNoREssZUFBZVAsV0FBV1EsZUFBZSxJQUN6Q0Msc0JBQXNCLEdBQ3RCQyxxQkFBcUJILGVBQWUsR0FDcENJLGNBQWVMLHNCQUFzQkcscUJBQ3JDRyxlQUFnQlIsd0JBQXdCTSxvQkFDeENHLFFBQVFaLFlBQVksR0FBRztRQUU3QlIsVUFBVXFCLElBQUFBLHlCQUFnQixFQUFDRCxPQUFPRixhQUFhQyxjQUFjcEI7SUFDL0Q7SUFFQSxPQUFPQztBQUNUO0FBRUEsU0FBU0ksb0NBQW9DUCxrQkFBa0I7SUFDN0QsSUFBTU0sZ0JBQWdCTixtQkFBbUJ5QixHQUFHLENBQUMsU0FBQ0M7UUFDNUMsSUFBTWxCLGVBQWVrQixrQkFBa0JqQixlQUFlO1FBRXRELE9BQU9EO0lBQ1Q7SUFFQSxPQUFPRjtBQUNUIn0=