"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "postprocess", {
    enumerable: true,
    get: function() {
        return postprocess;
    }
});
var _necessary = require("necessary");
var clear = _necessary.arrayUtilities.clear, first = _necessary.arrayUtilities.first, push = _necessary.arrayUtilities.push;
function postprocess(divisionMarkdownNode, context) {
    var divisionMarkdownNodes = [
        divisionMarkdownNode
    ];
    resolveIncludes(divisionMarkdownNodes, context);
    resolveEmbeddings(divisionMarkdownNodes, context);
    paginate(divisionMarkdownNodes, context);
    createContents(divisionMarkdownNodes, context);
    return divisionMarkdownNodes;
}
function paginate(divisionMarkdownNodes, context) {
    var _context_linesPerPage = context.linesPerPage, linesPerPage = _context_linesPerPage === void 0 ? null : _context_linesPerPage;
    if (linesPerPage === null) {
        divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
            var footnoteReplacements = divisionMarkdownNode.prepareFootnotes(context);
            divisionMarkdownNode.createFootnotes(footnoteReplacements, context);
        });
        return;
    }
    if (linesPerPage !== null) {
        var paginatedDivisionMarkdownNodes = [];
        divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
            var footnoteReplacements = divisionMarkdownNode.prepareFootnotes(context), _$divisionMarkdownNodes = divisionMarkdownNode.paginate(context);
            _$divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
                divisionMarkdownNode.createFootnotes(footnoteReplacements, context);
            });
            push(paginatedDivisionMarkdownNodes, _$divisionMarkdownNodes);
        });
        clear(divisionMarkdownNodes);
        push(divisionMarkdownNodes, paginatedDivisionMarkdownNodes);
    }
}
function createContents(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var contentsCreated = divisionMarkdownNode.createContents(context);
        if (contentsCreated) {
            return true;
        }
    });
}
function resolveIncludes(divisionMarkdownNodes, context) {
    var firstDivisionMarkdownNode = first(divisionMarkdownNodes), divisionMarkdownNode = firstDivisionMarkdownNode; ///
    Object.assign(context, {
        divisionMarkdownNodes: divisionMarkdownNodes
    });
    divisionMarkdownNode.resolveIncludes(context);
    delete context.divisionMarkdownNodes;
    return divisionMarkdownNodes;
}
function resolveEmbeddings(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.resolveEmbeddings(context);
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvbWFya2Rvd24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5jb25zdCB7IGNsZWFyLCBmaXJzdCwgcHVzaCB9ID0gYXJyYXlVdGlsaXRpZXM7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgY29udGV4dCkge1xuICBjb25zdCBkaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBbXG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGVcbiAgXTtcblxuICByZXNvbHZlSW5jbHVkZXMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICByZXNvbHZlRW1iZWRkaW5ncyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIHBhZ2luYXRlKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG5cbiAgY3JlYXRlQ29udGVudHMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICByZXR1cm4gZGl2aXNpb25NYXJrZG93bk5vZGVzO1xufVxuXG5mdW5jdGlvbiBwYWdpbmF0ZShkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpIHtcbiAgY29uc3QgeyBsaW5lc1BlclBhZ2UgPSBudWxsIH0gPSBjb250ZXh0O1xuXG4gIGlmIChsaW5lc1BlclBhZ2UgPT09IG51bGwpIHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICAgIGNvbnN0IGZvb3Rub3RlUmVwbGFjZW1lbnRzID0gZGl2aXNpb25NYXJrZG93bk5vZGUucHJlcGFyZUZvb3Rub3Rlcyhjb250ZXh0KTtcblxuICAgICAgZGl2aXNpb25NYXJrZG93bk5vZGUuY3JlYXRlRm9vdG5vdGVzKGZvb3Rub3RlUmVwbGFjZW1lbnRzLCBjb250ZXh0KTtcbiAgICB9KTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChsaW5lc1BlclBhZ2UgIT09IG51bGwpIHtcbiAgICBjb25zdCBwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBbXTtcblxuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgICAgY29uc3QgZm9vdG5vdGVSZXBsYWNlbWVudHMgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5wcmVwYXJlRm9vdG5vdGVzKGNvbnRleHQpLFxuICAgICAgICAgICAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gZGl2aXNpb25NYXJrZG93bk5vZGUucGFnaW5hdGUoY29udGV4dCk7XG5cbiAgICAgIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgICAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVGb290bm90ZXMoZm9vdG5vdGVSZXBsYWNlbWVudHMsIGNvbnRleHQpO1xuICAgICAgfSk7XG5cbiAgICAgIHB1c2gocGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzLCBkaXZpc2lvbk1hcmtkb3duTm9kZXMpO1xuICAgIH0pO1xuXG4gICAgY2xlYXIoZGl2aXNpb25NYXJrZG93bk5vZGVzKTtcblxuICAgIHB1c2goZGl2aXNpb25NYXJrZG93bk5vZGVzLCBwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZXMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuc29tZSgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBjb25zdCBjb250ZW50c0NyZWF0ZWQgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVDb250ZW50cyhjb250ZXh0KTtcblxuICAgIGlmIChjb250ZW50c0NyZWF0ZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVJbmNsdWRlcyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpIHtcbiAgY29uc3QgZmlyc3REaXZpc2lvbk1hcmtkb3duTm9kZSA9IGZpcnN0KGRpdmlzaW9uTWFya2Rvd25Ob2RlcyksXG4gICAgICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlID0gZmlyc3REaXZpc2lvbk1hcmtkb3duTm9kZTsgLy8vXG5cbiAgT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGVzXG4gIH0pO1xuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnJlc29sdmVJbmNsdWRlcyhjb250ZXh0KTtcblxuICBkZWxldGUgY29udGV4dC5kaXZpc2lvbk1hcmtkb3duTm9kZXM7XG5cbiAgcmV0dXJuIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcztcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUVtYmVkZGluZ3MoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4gIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnJlc29sdmVFbWJlZGRpbmdzKGNvbnRleHQpO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJwb3N0cHJvY2VzcyIsImNsZWFyIiwiYXJyYXlVdGlsaXRpZXMiLCJmaXJzdCIsInB1c2giLCJkaXZpc2lvbk1hcmtkb3duTm9kZSIsImNvbnRleHQiLCJkaXZpc2lvbk1hcmtkb3duTm9kZXMiLCJyZXNvbHZlSW5jbHVkZXMiLCJyZXNvbHZlRW1iZWRkaW5ncyIsInBhZ2luYXRlIiwiY3JlYXRlQ29udGVudHMiLCJsaW5lc1BlclBhZ2UiLCJmb3JFYWNoIiwiZm9vdG5vdGVSZXBsYWNlbWVudHMiLCJwcmVwYXJlRm9vdG5vdGVzIiwiY3JlYXRlRm9vdG5vdGVzIiwicGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzIiwic29tZSIsImNvbnRlbnRzQ3JlYXRlZCIsImZpcnN0RGl2aXNpb25NYXJrZG93bk5vZGUiLCJPYmplY3QiLCJhc3NpZ24iXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBOzs7OytCQU1nQkE7OztlQUFBQTs7O3lCQUplO0FBRS9CLElBQVFDLFFBQXVCQyx5QkFBYyxDQUFyQ0QsT0FBT0UsUUFBZ0JELHlCQUFjLENBQTlCQyxPQUFPQyxPQUFTRix5QkFBYyxDQUF2QkU7QUFFZixTQUFTSixZQUFZSyxvQkFBb0IsRUFBRUMsT0FBTztJQUN2RCxJQUFNQyx3QkFBd0I7UUFDNUJGO0tBQ0Q7SUFFREcsZ0JBQWdCRCx1QkFBdUJEO0lBRXZDRyxrQkFBa0JGLHVCQUF1QkQ7SUFFekNJLFNBQVNILHVCQUF1QkQ7SUFFaENLLGVBQWVKLHVCQUF1QkQ7SUFFdEMsT0FBT0M7QUFDVDtBQUVBLFNBQVNHLFNBQVNILHFCQUFxQixFQUFFRCxPQUFPO0lBQzlDLDRCQUFnQ0EsUUFBeEJNLGNBQUFBLGtEQUFlO0lBRXZCLElBQUlBLGlCQUFpQixNQUFNO1FBQ3pCTCxzQkFBc0JNLE9BQU8sQ0FBQyxTQUFDUjtZQUM3QixJQUFNUyx1QkFBdUJULHFCQUFxQlUsZ0JBQWdCLENBQUNUO1lBRW5FRCxxQkFBcUJXLGVBQWUsQ0FBQ0Ysc0JBQXNCUjtRQUM3RDtRQUVBO0lBQ0Y7SUFFQSxJQUFJTSxpQkFBaUIsTUFBTTtRQUN6QixJQUFNSyxpQ0FBaUMsRUFBRTtRQUV6Q1Ysc0JBQXNCTSxPQUFPLENBQUMsU0FBQ1I7WUFDN0IsSUFBTVMsdUJBQXVCVCxxQkFBcUJVLGdCQUFnQixDQUFDVCxVQUM3REMsMEJBQXdCRixxQkFBcUJLLFFBQVEsQ0FBQ0o7WUFFNURDLHdCQUFzQk0sT0FBTyxDQUFDLFNBQUNSO2dCQUM3QkEscUJBQXFCVyxlQUFlLENBQUNGLHNCQUFzQlI7WUFDN0Q7WUFFQUYsS0FBS2EsZ0NBQWdDVjtRQUN2QztRQUVBTixNQUFNTTtRQUVOSCxLQUFLRyx1QkFBdUJVO0lBQzlCO0FBQ0Y7QUFFQSxTQUFTTixlQUFlSixxQkFBcUIsRUFBRUQsT0FBTztJQUNwREMsc0JBQXNCVyxJQUFJLENBQUMsU0FBQ2I7UUFDMUIsSUFBTWMsa0JBQWtCZCxxQkFBcUJNLGNBQWMsQ0FBQ0w7UUFFNUQsSUFBSWEsaUJBQWlCO1lBQ25CLE9BQU87UUFDVDtJQUNGO0FBQ0Y7QUFFQSxTQUFTWCxnQkFBZ0JELHFCQUFxQixFQUFFRCxPQUFPO0lBQ3JELElBQU1jLDRCQUE0QmpCLE1BQU1JLHdCQUNsQ0YsdUJBQXVCZSwyQkFBMkIsR0FBRztJQUUzREMsT0FBT0MsTUFBTSxDQUFDaEIsU0FBUztRQUNyQkMsdUJBQUFBO0lBQ0Y7SUFFQUYscUJBQXFCRyxlQUFlLENBQUNGO0lBRXJDLE9BQU9BLFFBQVFDLHFCQUFxQjtJQUVwQyxPQUFPQTtBQUNUO0FBRUEsU0FBU0Usa0JBQWtCRixxQkFBcUIsRUFBRUQsT0FBTztJQUN2REMsc0JBQXNCTSxPQUFPLENBQUMsU0FBQ1I7UUFDN0JBLHFCQUFxQkksaUJBQWlCLENBQUNIO0lBQ3pDO0FBQ0YifQ==