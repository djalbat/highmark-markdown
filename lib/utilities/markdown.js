"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    postprocess: function() {
        return postprocess;
    }
});
function postprocess(divisionMarkdownNode, context) {
    var divisionMarkdownNodes;
    divisionMarkdownNodes = resolveIncludes(divisionMarkdownNode, context);
    resolveEmbeddings(divisionMarkdownNodes, context);
    // divisionMarkdownNodes = paginate(divisionMarkdownNodes, context);
    // createFootnotes(divisionMarkdownNodes, context);
    // createContents(divisionMarkdownNodes, context);
    return divisionMarkdownNodes;
}
function paginate(divisionMarkdownNodes, context) {
    var paginatedDivisionMarkdownNodes = [];
    Object.assign(context, {
        paginatedDivisionMarkdownNodes: paginatedDivisionMarkdownNodes
    });
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.paginate(context);
    });
    paginatedDivisionMarkdownNodes.forEach(function(paginatedDivisionMarkdownNode, index) {
        var pageNumber = index + 1;
        paginatedDivisionMarkdownNode.setPageNumber(pageNumber);
    });
    divisionMarkdownNodes = paginatedDivisionMarkdownNodes; ///
    delete context.paginatedDivisionMarkdownNodes;
    return divisionMarkdownNodes;
}
function createContents(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var contentsCreated = divisionMarkdownNode.createContents(divisionMarkdownNodes, context);
        if (contentsCreated) {
            return true;
        }
    });
}
function createFootnotes(divisionMarkdownNodes, context) {
    var footnoteNumberMap = {};
    Object.assign(context, {
        footnoteNumberMap: footnoteNumberMap
    });
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.createFootnotes(context);
    });
    delete context.footnoteNumberMap;
}
function resolveIncludes(divisionMarkdownNode, context) {
    var divisionMarkdownNodes = [];
    Object.assign(context, {
        divisionMarkdownNodes: divisionMarkdownNodes
    });
    var divisionMarkdownNodeIgnored = divisionMarkdownNode.isIgnored();
    if (!divisionMarkdownNodeIgnored) {
        divisionMarkdownNodes.push(divisionMarkdownNode);
    }
    divisionMarkdownNode.resolveIncludes(context);
    delete context.divisionMarkdownNodes;
    return divisionMarkdownNodes;
}
function resolveEmbeddings(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.resolveEmbeddings(context);
    });
}
var _default = {
    postprocess: postprocess
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvbWFya2Rvd24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3N0cHJvY2VzcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgY29udGV4dCkge1xuICBsZXQgZGl2aXNpb25NYXJrZG93bk5vZGVzO1xuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IHJlc29sdmVJbmNsdWRlcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgY29udGV4dCk7XG5cbiAgcmVzb2x2ZUVtYmVkZGluZ3MoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICAvLyBkaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBwYWdpbmF0ZShkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIC8vIGNyZWF0ZUZvb3Rub3RlcyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIC8vIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG5cbiAgcmV0dXJuIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcztcbn1cblxuZnVuY3Rpb24gcGFnaW5hdGUoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4gIGNvbnN0IHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IFtdO1xuXG4gIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgIHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2Rlc1xuICB9KTtcblxuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5wYWdpbmF0ZShjb250ZXh0KTtcbiAgfSk7XG5cbiAgcGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzLmZvckVhY2goKHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlLCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IHBhZ2VOdW1iZXIgPSBpbmRleCArIDE7XG5cbiAgICBwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZS5zZXRQYWdlTnVtYmVyKHBhZ2VOdW1iZXIpO1xuICB9KVxuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlczsgLy8vXG5cbiAgZGVsZXRlIGNvbnRleHQucGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzO1xuXG4gIHJldHVybiBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuc29tZSgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBjb25zdCBjb250ZW50c0NyZWF0ZWQgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gICAgaWYgKGNvbnRlbnRzQ3JlYXRlZCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBjb25zdCBmb290bm90ZU51bWJlck1hcCA9IHt9O1xuXG4gIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgIGZvb3Rub3RlTnVtYmVyTWFwXG4gIH0pO1xuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLmNyZWF0ZUZvb3Rub3Rlcyhjb250ZXh0KTtcbiAgfSk7XG5cbiAgZGVsZXRlIGNvbnRleHQuZm9vdG5vdGVOdW1iZXJNYXA7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVJbmNsdWRlcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgY29udGV4dCkge1xuICBjb25zdCBkaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBbXTtcblxuICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZXNcbiAgfSk7XG5cbiAgY29uc3QgZGl2aXNpb25NYXJrZG93bk5vZGVJZ25vcmVkID0gZGl2aXNpb25NYXJrZG93bk5vZGUuaXNJZ25vcmVkKCk7XG5cbiAgaWYgKCFkaXZpc2lvbk1hcmtkb3duTm9kZUlnbm9yZWQpIHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZXMucHVzaChkaXZpc2lvbk1hcmtkb3duTm9kZSk7XG4gIH1cblxuICBkaXZpc2lvbk1hcmtkb3duTm9kZS5yZXNvbHZlSW5jbHVkZXMoY29udGV4dCk7XG5cbiAgZGVsZXRlIGNvbnRleHQuZGl2aXNpb25NYXJrZG93bk5vZGVzO1xuXG4gIHJldHVybiBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVFbWJlZGRpbmdzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5yZXNvbHZlRW1iZWRkaW5ncyhjb250ZXh0KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcG9zdHByb2Nlc3Ncbn07XG4iXSwibmFtZXMiOlsicG9zdHByb2Nlc3MiLCJkaXZpc2lvbk1hcmtkb3duTm9kZSIsImNvbnRleHQiLCJkaXZpc2lvbk1hcmtkb3duTm9kZXMiLCJyZXNvbHZlSW5jbHVkZXMiLCJyZXNvbHZlRW1iZWRkaW5ncyIsInBhZ2luYXRlIiwicGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZm9yRWFjaCIsInBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlIiwiaW5kZXgiLCJwYWdlTnVtYmVyIiwic2V0UGFnZU51bWJlciIsImNyZWF0ZUNvbnRlbnRzIiwic29tZSIsImNvbnRlbnRzQ3JlYXRlZCIsImNyZWF0ZUZvb3Rub3RlcyIsImZvb3Rub3RlTnVtYmVyTWFwIiwiZGl2aXNpb25NYXJrZG93bk5vZGVJZ25vcmVkIiwiaXNJZ25vcmVkIiwicHVzaCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQTRGQSxPQUVFO2VBRkY7O0lBMUZnQkEsV0FBVztlQUFYQTs7O0FBQVQsU0FBU0EsWUFBWUMsb0JBQW9CLEVBQUVDLE9BQU87SUFDdkQsSUFBSUM7SUFFSkEsd0JBQXdCQyxnQkFBZ0JILHNCQUFzQkM7SUFFOURHLGtCQUFrQkYsdUJBQXVCRDtJQUV6QyxvRUFBb0U7SUFFcEUsbURBQW1EO0lBRW5ELGtEQUFrRDtJQUVsRCxPQUFPQztBQUNUO0FBRUEsU0FBU0csU0FBU0gscUJBQXFCLEVBQUVELE9BQU87SUFDOUMsSUFBTUssaUNBQWlDLEVBQUU7SUFFekNDLE9BQU9DLE1BQU0sQ0FBQ1AsU0FBUztRQUNyQkssZ0NBQUFBO0lBQ0Y7SUFFQUosc0JBQXNCTyxPQUFPLENBQUMsU0FBQ1Q7UUFDN0JBLHFCQUFxQkssUUFBUSxDQUFDSjtJQUNoQztJQUVBSywrQkFBK0JHLE9BQU8sQ0FBQyxTQUFDQywrQkFBK0JDO1FBQ3JFLElBQU1DLGFBQWFELFFBQVE7UUFFM0JELDhCQUE4QkcsYUFBYSxDQUFDRDtJQUM5QztJQUVBVix3QkFBd0JJLGdDQUFnQyxHQUFHO0lBRTNELE9BQU9MLFFBQVFLLDhCQUE4QjtJQUU3QyxPQUFPSjtBQUNUO0FBRUEsU0FBU1ksZUFBZVoscUJBQXFCLEVBQUVELE9BQU87SUFDcERDLHNCQUFzQmEsSUFBSSxDQUFDLFNBQUNmO1FBQzFCLElBQU1nQixrQkFBa0JoQixxQkFBcUJjLGNBQWMsQ0FBQ1osdUJBQXVCRDtRQUVuRixJQUFJZSxpQkFBaUI7WUFDbkIsT0FBTztRQUNUO0lBQ0Y7QUFDRjtBQUVBLFNBQVNDLGdCQUFnQmYscUJBQXFCLEVBQUVELE9BQU87SUFDckQsSUFBTWlCLG9CQUFvQixDQUFDO0lBRTNCWCxPQUFPQyxNQUFNLENBQUNQLFNBQVM7UUFDckJpQixtQkFBQUE7SUFDRjtJQUVBaEIsc0JBQXNCTyxPQUFPLENBQUMsU0FBQ1Q7UUFDN0JBLHFCQUFxQmlCLGVBQWUsQ0FBQ2hCO0lBQ3ZDO0lBRUEsT0FBT0EsUUFBUWlCLGlCQUFpQjtBQUNsQztBQUVBLFNBQVNmLGdCQUFnQkgsb0JBQW9CLEVBQUVDLE9BQU87SUFDcEQsSUFBTUMsd0JBQXdCLEVBQUU7SUFFaENLLE9BQU9DLE1BQU0sQ0FBQ1AsU0FBUztRQUNyQkMsdUJBQUFBO0lBQ0Y7SUFFQSxJQUFNaUIsOEJBQThCbkIscUJBQXFCb0IsU0FBUztJQUVsRSxJQUFJLENBQUNELDZCQUE2QjtRQUNoQ2pCLHNCQUFzQm1CLElBQUksQ0FBQ3JCO0lBQzdCO0lBRUFBLHFCQUFxQkcsZUFBZSxDQUFDRjtJQUVyQyxPQUFPQSxRQUFRQyxxQkFBcUI7SUFFcEMsT0FBT0E7QUFDVDtBQUVBLFNBQVNFLGtCQUFrQkYscUJBQXFCLEVBQUVELE9BQU87SUFDdkRDLHNCQUFzQk8sT0FBTyxDQUFDLFNBQUNUO1FBQzdCQSxxQkFBcUJJLGlCQUFpQixDQUFDSDtJQUN6QztBQUNGO0lBRUEsV0FBZTtJQUNiRixhQUFBQTtBQUNGIn0=