"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    footnotesListMarkdownNodeFromFootnotesListDOMElement: function() {
        return footnotesListMarkdownNodeFromFootnotesListDOMElement;
    },
    renumberFootnoteLinkMarkdownNodes: function() {
        return renumberFootnoteLinkMarkdownNodes;
    }
});
var _footnotesList = /*#__PURE__*/ _interop_require_default(require("../node/markdown/footnotesList"));
var _query = require("../utilities/query");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function renumberFootnoteLinkMarkdownNodes(divisionMarkdownNode, footnoteReplacementMap, context) {
    var node = divisionMarkdownNode, footnoteLinkMarkdownNodes = (0, _query.footnoteLinkMarkdownNodesFromNode)(node);
    footnoteLinkMarkdownNodes.forEach(function(footnoteLinkMarkdownNode) {
        var identifier = footnoteLinkMarkdownNode.identifier(context), footnoteReplacement = footnoteReplacementMap[identifier] || null, number = footnoteReplacement !== null ? footnoteReplacement.getNumber() : null;
        footnoteLinkMarkdownNode.setNumber(number);
    });
}
function footnotesListMarkdownNodeFromFootnotesListDOMElement(footnotesListDOMElement) {
    var domElement = footnotesListDOMElement, footnotesListMarkdownNode = _footnotesList.default.fromDOMElement(domElement);
    return footnotesListMarkdownNode;
}
var _default = {
    renumberFootnoteLinkMarkdownNodes: renumberFootnoteLinkMarkdownNodes,
    footnotesListMarkdownNodeFromFootnotesListDOMElement: footnotesListMarkdownNodeFromFootnotesListDOMElement
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZm9vdG5vdGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZSBmcm9tIFwiLi4vbm9kZS9tYXJrZG93bi9mb290bm90ZXNMaXN0XCI7XG5cbmltcG9ydCB7IGZvb3Rub3RlTGlua01hcmtkb3duTm9kZXNGcm9tTm9kZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcXVlcnlcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbnVtYmVyRm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCkge1xuICBjb25zdCBub2RlID0gZGl2aXNpb25NYXJrZG93bk5vZGUsICAvLy9cbiAgICAgICAgZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyA9IGZvb3Rub3RlTGlua01hcmtkb3duTm9kZXNGcm9tTm9kZShub2RlKTtcblxuICBmb290bm90ZUxpbmtNYXJrZG93bk5vZGVzLmZvckVhY2goKGZvb3Rub3RlTGlua01hcmtkb3duTm9kZSkgPT4ge1xuICAgIGNvbnN0IGlkZW50aWZpZXIgPSBmb290bm90ZUxpbmtNYXJrZG93bk5vZGUuaWRlbnRpZmllcihjb250ZXh0KSxcbiAgICAgICAgICBmb290bm90ZVJlcGxhY2VtZW50ID0gZm9vdG5vdGVSZXBsYWNlbWVudE1hcFtpZGVudGlmaWVyXSB8fCBudWxsLFxuICAgICAgICAgIG51bWJlciA9IChmb290bm90ZVJlcGxhY2VtZW50ICE9PSBudWxsKSA/XG4gICAgICAgICAgICAgICAgICAgICBmb290bm90ZVJlcGxhY2VtZW50LmdldE51bWJlcigpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bGw7XG5cbiAgICBmb290bm90ZUxpbmtNYXJrZG93bk5vZGUuc2V0TnVtYmVyKG51bWJlcik7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZUZyb21Gb290bm90ZXNMaXN0RE9NRWxlbWVudChmb290bm90ZXNMaXN0RE9NRWxlbWVudCkge1xuICBjb25zdCBkb21FbGVtZW50ID0gZm9vdG5vdGVzTGlzdERPTUVsZW1lbnQsIC8vL1xuICAgICAgICBmb290bm90ZXNMaXN0TWFya2Rvd25Ob2RlID0gRm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZS5mcm9tRE9NRWxlbWVudChkb21FbGVtZW50KTtcblxuICByZXR1cm4gZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICByZW51bWJlckZvb3Rub3RlTGlua01hcmtkb3duTm9kZXMsXG4gIGZvb3Rub3Rlc0xpc3RNYXJrZG93bk5vZGVGcm9tRm9vdG5vdGVzTGlzdERPTUVsZW1lbnRcbn07XG4iXSwibmFtZXMiOlsiZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZUZyb21Gb290bm90ZXNMaXN0RE9NRWxlbWVudCIsInJlbnVtYmVyRm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyIsImRpdmlzaW9uTWFya2Rvd25Ob2RlIiwiZm9vdG5vdGVSZXBsYWNlbWVudE1hcCIsImNvbnRleHQiLCJub2RlIiwiZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyIsImZvb3Rub3RlTGlua01hcmtkb3duTm9kZXNGcm9tTm9kZSIsImZvckVhY2giLCJmb290bm90ZUxpbmtNYXJrZG93bk5vZGUiLCJpZGVudGlmaWVyIiwiZm9vdG5vdGVSZXBsYWNlbWVudCIsIm51bWJlciIsImdldE51bWJlciIsInNldE51bWJlciIsImZvb3Rub3Rlc0xpc3RET01FbGVtZW50IiwiZG9tRWxlbWVudCIsImZvb3Rub3Rlc0xpc3RNYXJrZG93bk5vZGUiLCJGb290bm90ZXNMaXN0TWFya2Rvd25Ob2RlIiwiZnJvbURPTUVsZW1lbnQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQTRCQSxPQUdFO2VBSEY7O0lBUGdCQSxvREFBb0Q7ZUFBcERBOztJQWZBQyxpQ0FBaUM7ZUFBakNBOzs7b0VBSnNCO3FCQUVZOzs7Ozs7QUFFM0MsU0FBU0Esa0NBQWtDQyxvQkFBb0IsRUFBRUMsc0JBQXNCLEVBQUVDLE9BQU87SUFDckcsSUFBTUMsT0FBT0gsc0JBQ1BJLDRCQUE0QkMsSUFBQUEsd0NBQWlDLEVBQUNGO0lBRXBFQywwQkFBMEJFLE9BQU8sQ0FBQyxTQUFDQztRQUNqQyxJQUFNQyxhQUFhRCx5QkFBeUJDLFVBQVUsQ0FBQ04sVUFDakRPLHNCQUFzQlIsc0JBQXNCLENBQUNPLFdBQVcsSUFBSSxNQUM1REUsU0FBUyxBQUFDRCx3QkFBd0IsT0FDdkJBLG9CQUFvQkUsU0FBUyxLQUMxQjtRQUVwQkoseUJBQXlCSyxTQUFTLENBQUNGO0lBQ3JDO0FBQ0Y7QUFFTyxTQUFTWixxREFBcURlLHVCQUF1QjtJQUMxRixJQUFNQyxhQUFhRCx5QkFDYkUsNEJBQTRCQyxzQkFBeUIsQ0FBQ0MsY0FBYyxDQUFDSDtJQUUzRSxPQUFPQztBQUNUO0lBRUEsV0FBZTtJQUNiaEIsbUNBQUFBO0lBQ0FELHNEQUFBQTtBQUNGIn0=