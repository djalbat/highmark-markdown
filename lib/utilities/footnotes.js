"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    footnotesListMarkdownNodeFromFootnotesListDOMElement: function() {
        return footnotesListMarkdownNodeFromFootnotesListDOMElement;
    },
    renumberFootnoteLinkMarkdownNodes: function() {
        return renumberFootnoteLinkMarkdownNodes;
    }
});
var _footnotes = /*#__PURE__*/ _interop_require_default(require("../node/markdown/list/footnotes"));
var _query = require("../utilities/query");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function renumberFootnoteLinkMarkdownNodes(divisionMarkdownNode, footnoteReplacementMap, context) {
    var node = divisionMarkdownNode, footnoteLinkMarkdownNodes = (0, _query.footnoteLinkMarkdownNodesFromNode)(node);
    footnoteLinkMarkdownNodes.forEach(function(footnoteLinkMarkdownNode) {
        var identifier = footnoteLinkMarkdownNode.identifier(context), footnoteReplacement = footnoteReplacementMap[identifier] || null, number = footnoteReplacement !== null ? footnoteReplacement.getNumber() : null;
        footnoteLinkMarkdownNode.renumber(number);
    });
}
function footnotesListMarkdownNodeFromFootnotesListDOMElement(footnotesListDOMElement) {
    var domElement = footnotesListDOMElement, footnotesListMarkdownNode = _footnotes.default.fromDOMElement(domElement);
    return footnotesListMarkdownNode;
}
var _default = {
    renumberFootnoteLinkMarkdownNodes: renumberFootnoteLinkMarkdownNodes,
    footnotesListMarkdownNodeFromFootnotesListDOMElement: footnotesListMarkdownNodeFromFootnotesListDOMElement
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZm9vdG5vdGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZSBmcm9tIFwiLi4vbm9kZS9tYXJrZG93bi9saXN0L2Zvb3Rub3Rlc1wiO1xuXG5pbXBvcnQgeyBmb290bm90ZUxpbmtNYXJrZG93bk5vZGVzRnJvbU5vZGUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3F1ZXJ5XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiByZW51bWJlckZvb3Rub3RlTGlua01hcmtkb3duTm9kZXMoZGl2aXNpb25NYXJrZG93bk5vZGUsIGZvb3Rub3RlUmVwbGFjZW1lbnRNYXAsIGNvbnRleHQpIHtcbiAgY29uc3Qgbm9kZSA9IGRpdmlzaW9uTWFya2Rvd25Ob2RlLCAgLy8vXG4gICAgICAgIGZvb3Rub3RlTGlua01hcmtkb3duTm9kZXMgPSBmb290bm90ZUxpbmtNYXJrZG93bk5vZGVzRnJvbU5vZGUobm9kZSk7XG5cbiAgZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChmb290bm90ZUxpbmtNYXJrZG93bk5vZGUpID0+IHtcbiAgICBjb25zdCBpZGVudGlmaWVyID0gZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlLmlkZW50aWZpZXIoY29udGV4dCksXG4gICAgICAgICAgZm9vdG5vdGVSZXBsYWNlbWVudCA9IGZvb3Rub3RlUmVwbGFjZW1lbnRNYXBbaWRlbnRpZmllcl0gfHwgbnVsbCxcbiAgICAgICAgICBudW1iZXIgPSAoZm9vdG5vdGVSZXBsYWNlbWVudCAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgICAgICAgZm9vdG5vdGVSZXBsYWNlbWVudC5nZXROdW1iZXIoKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICBudWxsO1xuXG4gICAgZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlLnJlbnVtYmVyKG51bWJlcik7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZUZyb21Gb290bm90ZXNMaXN0RE9NRWxlbWVudChmb290bm90ZXNMaXN0RE9NRWxlbWVudCkge1xuICBjb25zdCBkb21FbGVtZW50ID0gZm9vdG5vdGVzTGlzdERPTUVsZW1lbnQsIC8vL1xuICAgICAgICBmb290bm90ZXNMaXN0TWFya2Rvd25Ob2RlID0gRm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZS5mcm9tRE9NRWxlbWVudChkb21FbGVtZW50KTtcblxuICByZXR1cm4gZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICByZW51bWJlckZvb3Rub3RlTGlua01hcmtkb3duTm9kZXMsXG4gIGZvb3Rub3Rlc0xpc3RNYXJrZG93bk5vZGVGcm9tRm9vdG5vdGVzTGlzdERPTUVsZW1lbnRcbn07XG4iXSwibmFtZXMiOlsiZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZUZyb21Gb290bm90ZXNMaXN0RE9NRWxlbWVudCIsInJlbnVtYmVyRm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyIsImRpdmlzaW9uTWFya2Rvd25Ob2RlIiwiZm9vdG5vdGVSZXBsYWNlbWVudE1hcCIsImNvbnRleHQiLCJub2RlIiwiZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyIsImZvb3Rub3RlTGlua01hcmtkb3duTm9kZXNGcm9tTm9kZSIsImZvckVhY2giLCJmb290bm90ZUxpbmtNYXJrZG93bk5vZGUiLCJpZGVudGlmaWVyIiwiZm9vdG5vdGVSZXBsYWNlbWVudCIsIm51bWJlciIsImdldE51bWJlciIsInJlbnVtYmVyIiwiZm9vdG5vdGVzTGlzdERPTUVsZW1lbnQiLCJkb21FbGVtZW50IiwiZm9vdG5vdGVzTGlzdE1hcmtkb3duTm9kZSIsIkZvb3Rub3Rlc0xpc3RNYXJrZG93bk5vZGUiLCJmcm9tRE9NRWxlbWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBNEJBLE9BR0U7ZUFIRjs7SUFQZ0JBLG9EQUFvRDtlQUFwREE7O0lBZkFDLGlDQUFpQztlQUFqQ0E7OztnRUFKc0I7cUJBRVk7Ozs7OztBQUUzQyxTQUFTQSxrQ0FBa0NDLG9CQUFvQixFQUFFQyxzQkFBc0IsRUFBRUMsT0FBTztJQUNyRyxJQUFNQyxPQUFPSCxzQkFDUEksNEJBQTRCQyxJQUFBQSx3Q0FBaUMsRUFBQ0Y7SUFFcEVDLDBCQUEwQkUsT0FBTyxDQUFDLFNBQUNDO1FBQ2pDLElBQU1DLGFBQWFELHlCQUF5QkMsVUFBVSxDQUFDTixVQUNqRE8sc0JBQXNCUixzQkFBc0IsQ0FBQ08sV0FBVyxJQUFJLE1BQzVERSxTQUFTLEFBQUNELHdCQUF3QixPQUN2QkEsb0JBQW9CRSxTQUFTLEtBQzFCO1FBRXBCSix5QkFBeUJLLFFBQVEsQ0FBQ0Y7SUFDcEM7QUFDRjtBQUVPLFNBQVNaLHFEQUFxRGUsdUJBQXVCO0lBQzFGLElBQU1DLGFBQWFELHlCQUNiRSw0QkFBNEJDLGtCQUF5QixDQUFDQyxjQUFjLENBQUNIO0lBRTNFLE9BQU9DO0FBQ1Q7SUFFQSxXQUFlO0lBQ2JoQixtQ0FBQUE7SUFDQUQsc0RBQUFBO0FBQ0YifQ==