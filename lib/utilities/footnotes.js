"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    footnotesListHTMLNodeFromFootnotesListDOMElement: function() {
        return footnotesListHTMLNodeFromFootnotesListDOMElement;
    },
    renumberFootnoteLinkMarkdownNodes: function() {
        return renumberFootnoteLinkMarkdownNodes;
    }
});
var _footnotes = /*#__PURE__*/ _interop_require_default(require("../node/html/list/footnotes"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function renumberFootnoteLinkMarkdownNodes(divisionMarkdownNode, footnoteReplacementMap, context) {
    var node = divisionMarkdownNode, footnoteLinkMarkdownNodes = footnoteLinkMarkdownNodesFromNode(node);
    footnoteLinkMarkdownNodes.forEach(function(footnoteLinkMarkdownNode) {
        var identifier = footnoteLinkMarkdownNode.identifier(context), footnoteReplacement = footnoteReplacementMap[identifier] || null, number = footnoteReplacement !== null ? footnoteReplacement.getNumber() : null;
        footnoteLinkMarkdownNode.renumber(number);
    });
}
function footnotesListHTMLNodeFromFootnotesListDOMElement(footnotesListDOMElement) {
    var domElement = footnotesListDOMElement, footnotesListHTMLNode = _footnotes.default.fromDOMElement(domElement);
    return footnotesListHTMLNode;
}
var _default = {
    renumberFootnoteLinkMarkdownNodes: renumberFootnoteLinkMarkdownNodes,
    footnotesListHTMLNodeFromFootnotesListDOMElement: footnotesListHTMLNodeFromFootnotesListDOMElement
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZm9vdG5vdGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgRm9vdG5vdGVzTGlzdEhUTUxOb2RlIGZyb20gXCIuLi9ub2RlL2h0bWwvbGlzdC9mb290bm90ZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbnVtYmVyRm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCkge1xuICBjb25zdCBub2RlID0gZGl2aXNpb25NYXJrZG93bk5vZGUsICAvLy9cbiAgICAgICAgZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2RlcyA9IGZvb3Rub3RlTGlua01hcmtkb3duTm9kZXNGcm9tTm9kZShub2RlKTtcblxuICBmb290bm90ZUxpbmtNYXJrZG93bk5vZGVzLmZvckVhY2goKGZvb3Rub3RlTGlua01hcmtkb3duTm9kZSkgPT4ge1xuICAgIGNvbnN0IGlkZW50aWZpZXIgPSBmb290bm90ZUxpbmtNYXJrZG93bk5vZGUuaWRlbnRpZmllcihjb250ZXh0KSxcbiAgICAgICAgICBmb290bm90ZVJlcGxhY2VtZW50ID0gZm9vdG5vdGVSZXBsYWNlbWVudE1hcFtpZGVudGlmaWVyXSB8fCBudWxsLFxuICAgICAgICAgIG51bWJlciA9IChmb290bm90ZVJlcGxhY2VtZW50ICE9PSBudWxsKSA/XG4gICAgICAgICAgICAgICAgICAgICBmb290bm90ZVJlcGxhY2VtZW50LmdldE51bWJlcigpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bGw7XG5cbiAgICBmb290bm90ZUxpbmtNYXJrZG93bk5vZGUucmVudW1iZXIobnVtYmVyKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZXNMaXN0SFRNTE5vZGVGcm9tRm9vdG5vdGVzTGlzdERPTUVsZW1lbnQoZm9vdG5vdGVzTGlzdERPTUVsZW1lbnQpIHtcbiAgY29uc3QgZG9tRWxlbWVudCA9IGZvb3Rub3Rlc0xpc3RET01FbGVtZW50LCAvLy9cbiAgICAgICAgZm9vdG5vdGVzTGlzdEhUTUxOb2RlID0gRm9vdG5vdGVzTGlzdEhUTUxOb2RlLmZyb21ET01FbGVtZW50KGRvbUVsZW1lbnQpO1xuXG4gIHJldHVybiBmb290bm90ZXNMaXN0SFRNTE5vZGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmVudW1iZXJGb290bm90ZUxpbmtNYXJrZG93bk5vZGVzLFxuICBmb290bm90ZXNMaXN0SFRNTE5vZGVGcm9tRm9vdG5vdGVzTGlzdERPTUVsZW1lbnRcbn07XG4iXSwibmFtZXMiOlsiZm9vdG5vdGVzTGlzdEhUTUxOb2RlRnJvbUZvb3Rub3Rlc0xpc3RET01FbGVtZW50IiwicmVudW1iZXJGb290bm90ZUxpbmtNYXJrZG93bk5vZGVzIiwiZGl2aXNpb25NYXJrZG93bk5vZGUiLCJmb290bm90ZVJlcGxhY2VtZW50TWFwIiwiY29udGV4dCIsIm5vZGUiLCJmb290bm90ZUxpbmtNYXJrZG93bk5vZGVzIiwiZm9vdG5vdGVMaW5rTWFya2Rvd25Ob2Rlc0Zyb21Ob2RlIiwiZm9yRWFjaCIsImZvb3Rub3RlTGlua01hcmtkb3duTm9kZSIsImlkZW50aWZpZXIiLCJmb290bm90ZVJlcGxhY2VtZW50IiwibnVtYmVyIiwiZ2V0TnVtYmVyIiwicmVudW1iZXIiLCJmb290bm90ZXNMaXN0RE9NRWxlbWVudCIsImRvbUVsZW1lbnQiLCJmb290bm90ZXNMaXN0SFRNTE5vZGUiLCJGb290bm90ZXNMaXN0SFRNTE5vZGUiLCJmcm9tRE9NRWxlbWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBMEJBLE9BR0U7ZUFIRjs7SUFQZ0JBLGdEQUFnRDtlQUFoREE7O0lBZkFDLGlDQUFpQztlQUFqQ0E7OztnRUFGa0I7Ozs7OztBQUUzQixTQUFTQSxrQ0FBa0NDLG9CQUFvQixFQUFFQyxzQkFBc0IsRUFBRUMsT0FBTztJQUNyRyxJQUFNQyxPQUFPSCxzQkFDUEksNEJBQTRCQyxrQ0FBa0NGO0lBRXBFQywwQkFBMEJFLE9BQU8sQ0FBQyxTQUFDQztRQUNqQyxJQUFNQyxhQUFhRCx5QkFBeUJDLFVBQVUsQ0FBQ04sVUFDakRPLHNCQUFzQlIsc0JBQXNCLENBQUNPLFdBQVcsSUFBSSxNQUM1REUsU0FBUyxBQUFDRCx3QkFBd0IsT0FDdkJBLG9CQUFvQkUsU0FBUyxLQUMxQjtRQUVwQkoseUJBQXlCSyxRQUFRLENBQUNGO0lBQ3BDO0FBQ0Y7QUFFTyxTQUFTWixpREFBaURlLHVCQUF1QjtJQUN0RixJQUFNQyxhQUFhRCx5QkFDYkUsd0JBQXdCQyxrQkFBcUIsQ0FBQ0MsY0FBYyxDQUFDSDtJQUVuRSxPQUFPQztBQUNUO0lBRUEsV0FBZTtJQUNiaEIsbUNBQUFBO0lBQ0FELGtEQUFBQTtBQUNGIn0=