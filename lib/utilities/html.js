"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    contentsDirectiveHTMLNodeFromNode: function() {
        return contentsDirectiveHTMLNodeFromNode;
    },
    default: function() {
        return _default;
    },
    divisionHTMLNodesFromNode: function() {
        return divisionHTMLNodesFromNode;
    },
    footnoteHTMLNodesFromNode: function() {
        return footnoteHTMLNodesFromNode;
    },
    footnoteLinkHTMLNodesFromNode: function() {
        return footnoteLinkHTMLNodesFromNode;
    },
    footnotesDirectiveHTMLNodeFromNode: function() {
        return footnotesDirectiveHTMLNodeFromNode;
    },
    footnotesHTMLNodesFromNode: function() {
        return footnotesHTMLNodesFromNode;
    },
    headingHTMLNodesFromNode: function() {
        return headingHTMLNodesFromNode;
    },
    htmlNodesFromNode: function() {
        return htmlNodesFromNode;
    },
    nestedFootnoteLinkHTMLNodesFromNode: function() {
        return nestedFootnoteLinkHTMLNodesFromNode;
    },
    pageNumberDirectiveHTMLNodeFromNode: function() {
        return pageNumberDirectiveHTMLNodeFromNode;
    }
});
var _occamquery = require("occam-query");
var _query = require("../utilities/query");
var contentsDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//contentsDirective"), footnotesDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("/division/footnotesDirective"), pageNumberDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//pageNumberDirective"), htmlNodesQuery = _occamquery.Query.fromExpressionString("/division/*"), headingHTMLNodesQuery = _occamquery.Query.fromExpressionString("//primaryHeading|secondaryHeading|tertiaryHeading|tertiaryHeading"), divisionHTMLNodesQuery = _occamquery.Query.fromExpressionString("/html/division"), footnoteHTMLNodesQuery = _occamquery.Query.fromExpressionString("/division/footnote"), footnotesHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnote"), footnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnoteLink"), nestedFootnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnote//footnoteLink");
function contentsDirectiveHTMLNodeFromNode(node) {
    var contentsDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, contentsDirectiveHTMLNodeQuery);
    return contentsDirectiveHTMLNode;
}
function footnotesDirectiveHTMLNodeFromNode(node) {
    var footnotesDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, footnotesDirectiveHTMLNodeQuery);
    return footnotesDirectiveHTMLNode;
}
function pageNumberDirectiveHTMLNodeFromNode(node) {
    var pageNumberDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, pageNumberDirectiveHTMLNodeQuery);
    return pageNumberDirectiveHTMLNode;
}
function htmlNodesFromNode(node) {
    var htmlNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, htmlNodesQuery, htmlNodes);
    return htmlNodes;
}
function headingHTMLNodesFromNode(node) {
    var headingHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, headingHTMLNodesQuery, headingHTMLNodes);
    return headingHTMLNodes;
}
function divisionHTMLNodesFromNode(node) {
    var divisionHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, divisionHTMLNodesQuery, divisionHTMLNodes);
    return divisionHTMLNodes;
}
function footnoteHTMLNodesFromNode(node) {
    var footnoteHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteHTMLNodesQuery, footnoteHTMLNodes);
    return footnoteHTMLNodes;
}
function footnotesHTMLNodesFromNode(node) {
    var footnotesHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnotesHTMLNodesQuery, footnotesHTMLNodes);
    return footnotesHTMLNodes;
}
function footnoteLinkHTMLNodesFromNode(node) {
    var linkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteLinkHTMLNodesQuery, linkHTMLNodes);
    return linkHTMLNodes;
}
function nestedFootnoteLinkHTMLNodesFromNode(node) {
    var nestedFootnoteLinkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, nestedFootnoteLinkHTMLNodesQuery, nestedFootnoteLinkHTMLNodes);
    return nestedFootnoteLinkHTMLNodes;
}
var _default = {
    contentsDirectiveHTMLNodeFromNode: contentsDirectiveHTMLNodeFromNode,
    footnotesDirectiveHTMLNodeFromNode: footnotesDirectiveHTMLNodeFromNode,
    pageNumberDirectiveHTMLNodeFromNode: pageNumberDirectiveHTMLNodeFromNode,
    htmlNodesFromNode: htmlNodesFromNode,
    headingHTMLNodesFromNode: headingHTMLNodesFromNode,
    divisionHTMLNodesFromNode: divisionHTMLNodesFromNode,
    footnoteHTMLNodesFromNode: footnoteHTMLNodesFromNode,
    footnotesHTMLNodesFromNode: footnotesHTMLNodesFromNode,
    footnoteLinkHTMLNodesFromNode: footnoteLinkHTMLNodesFromNode,
    nestedFootnoteLinkHTMLNodesFromNode: nestedFootnoteLinkHTMLNodesFromNode
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHRtbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwib2NjYW0tcXVlcnlcIjtcblxuaW1wb3J0IHsgbm9kZUZyb21Ob2RlQW5kUXVlcnksIG5vZGVzRnJvbU5vZGVBbmRRdWVyeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcXVlcnlcIjtcblxuY29uc3QgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2NvbnRlbnRzRGlyZWN0aXZlXCIpLFxuICAgICAgZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiL2RpdmlzaW9uL2Zvb3Rub3Rlc0RpcmVjdGl2ZVwiKSxcbiAgICAgIHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL3BhZ2VOdW1iZXJEaXJlY3RpdmVcIiksXG4gICAgICBodG1sTm9kZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiL2RpdmlzaW9uLypcIiksXG4gICAgICBoZWFkaW5nSFRNTE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi8vcHJpbWFyeUhlYWRpbmd8c2Vjb25kYXJ5SGVhZGluZ3x0ZXJ0aWFyeUhlYWRpbmd8dGVydGlhcnlIZWFkaW5nXCIpLFxuICAgICAgZGl2aXNpb25IVE1MTm9kZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiL2h0bWwvZGl2aXNpb25cIiksXG4gICAgICBmb290bm90ZUhUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvZGl2aXNpb24vZm9vdG5vdGVcIiksXG4gICAgICBmb290bm90ZXNIVE1MTm9kZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9mb290bm90ZVwiKSxcbiAgICAgIGZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2Zvb3Rub3RlTGlua1wiKSxcbiAgICAgIG5lc3RlZEZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2Zvb3Rub3RlLy9mb290bm90ZUxpbmtcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUobm9kZSkge1xuICBjb25zdCBjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlID0gbm9kZUZyb21Ob2RlQW5kUXVlcnkobm9kZSwgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5KTtcblxuICByZXR1cm4gY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUobm9kZSkge1xuICBjb25zdCBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZSA9IG5vZGVGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlUXVlcnkpO1xuXG4gIHJldHVybiBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlKG5vZGUpIHtcbiAgY29uc3QgcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlID0gbm9kZUZyb21Ob2RlQW5kUXVlcnkobm9kZSwgcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlUXVlcnkpO1xuXG4gIHJldHVybiBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodG1sTm9kZXNGcm9tTm9kZShub2RlLCBodG1sTm9kZXMgPSBbXSkge1xuICBub2Rlc0Zyb21Ob2RlQW5kUXVlcnkobm9kZSwgaHRtbE5vZGVzUXVlcnksIGh0bWxOb2Rlcyk7XG5cbiAgcmV0dXJuIGh0bWxOb2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhlYWRpbmdIVE1MTm9kZXNGcm9tTm9kZShub2RlLCBoZWFkaW5nSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGhlYWRpbmdIVE1MTm9kZXNRdWVyeSwgaGVhZGluZ0hUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGhlYWRpbmdIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZpc2lvbkhUTUxOb2Rlc0Zyb21Ob2RlKG5vZGUsIGRpdmlzaW9uSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGRpdmlzaW9uSFRNTE5vZGVzUXVlcnksIGRpdmlzaW9uSFRNTE5vZGVzKTtcblxuICByZXR1cm4gZGl2aXNpb25IVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZUhUTUxOb2Rlc0Zyb21Ob2RlKG5vZGUsIGZvb3Rub3RlSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGZvb3Rub3RlSFRNTE5vZGVzUXVlcnksIGZvb3Rub3RlSFRNTE5vZGVzKTtcblxuICByZXR1cm4gZm9vdG5vdGVIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZXNIVE1MTm9kZXNGcm9tTm9kZShub2RlLCBmb290bm90ZXNIVE1MTm9kZXMgPSBbXSkge1xuICBub2Rlc0Zyb21Ob2RlQW5kUXVlcnkobm9kZSwgZm9vdG5vdGVzSFRNTE5vZGVzUXVlcnksIGZvb3Rub3Rlc0hUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGZvb3Rub3Rlc0hUTUxOb2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvb3Rub3RlTGlua0hUTUxOb2Rlc0Zyb21Ob2RlKG5vZGUsIGxpbmtIVE1MTm9kZXMgPSBbXSkge1xuICBub2Rlc0Zyb21Ob2RlQW5kUXVlcnkobm9kZSwgZm9vdG5vdGVMaW5rSFRNTE5vZGVzUXVlcnksIGxpbmtIVE1MTm9kZXMpO1xuXG4gIHJldHVybiBsaW5rSFRNTE5vZGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmVzdGVkRm9vdG5vdGVMaW5rSFRNTE5vZGVzRnJvbU5vZGUobm9kZSwgbmVzdGVkRm9vdG5vdGVMaW5rSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIG5lc3RlZEZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5LCBuZXN0ZWRGb290bm90ZUxpbmtIVE1MTm9kZXMpO1xuXG4gIHJldHVybiBuZXN0ZWRGb290bm90ZUxpbmtIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlLFxuICBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlLFxuICBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSxcbiAgaHRtbE5vZGVzRnJvbU5vZGUsXG4gIGhlYWRpbmdIVE1MTm9kZXNGcm9tTm9kZSxcbiAgZGl2aXNpb25IVE1MTm9kZXNGcm9tTm9kZSxcbiAgZm9vdG5vdGVIVE1MTm9kZXNGcm9tTm9kZSxcbiAgZm9vdG5vdGVzSFRNTE5vZGVzRnJvbU5vZGUsXG4gIGZvb3Rub3RlTGlua0hUTUxOb2Rlc0Zyb21Ob2RlLFxuICBuZXN0ZWRGb290bm90ZUxpbmtIVE1MTm9kZXNGcm9tTm9kZVxufTtcbiJdLCJuYW1lcyI6WyJjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUiLCJkaXZpc2lvbkhUTUxOb2Rlc0Zyb21Ob2RlIiwiZm9vdG5vdGVIVE1MTm9kZXNGcm9tTm9kZSIsImZvb3Rub3RlTGlua0hUTUxOb2Rlc0Zyb21Ob2RlIiwiZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSIsImZvb3Rub3Rlc0hUTUxOb2Rlc0Zyb21Ob2RlIiwiaGVhZGluZ0hUTUxOb2Rlc0Zyb21Ob2RlIiwiaHRtbE5vZGVzRnJvbU5vZGUiLCJuZXN0ZWRGb290bm90ZUxpbmtIVE1MTm9kZXNGcm9tTm9kZSIsInBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlIiwiY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5IiwiUXVlcnkiLCJmcm9tRXhwcmVzc2lvblN0cmluZyIsImZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlUXVlcnkiLCJwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSIsImh0bWxOb2Rlc1F1ZXJ5IiwiaGVhZGluZ0hUTUxOb2Rlc1F1ZXJ5IiwiZGl2aXNpb25IVE1MTm9kZXNRdWVyeSIsImZvb3Rub3RlSFRNTE5vZGVzUXVlcnkiLCJmb290bm90ZXNIVE1MTm9kZXNRdWVyeSIsImZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5IiwibmVzdGVkRm9vdG5vdGVMaW5rSFRNTE5vZGVzUXVlcnkiLCJub2RlIiwiY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZSIsIm5vZGVGcm9tTm9kZUFuZFF1ZXJ5IiwiZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGUiLCJwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGUiLCJodG1sTm9kZXMiLCJub2Rlc0Zyb21Ob2RlQW5kUXVlcnkiLCJoZWFkaW5nSFRNTE5vZGVzIiwiZGl2aXNpb25IVE1MTm9kZXMiLCJmb290bm90ZUhUTUxOb2RlcyIsImZvb3Rub3Rlc0hUTUxOb2RlcyIsImxpbmtIVE1MTm9kZXMiLCJuZXN0ZWRGb290bm90ZUxpbmtIVE1MTm9kZXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQWlCZ0JBLGlDQUFpQztlQUFqQ0E7O0lBNERoQixPQVdFO2VBWEY7O0lBOUJnQkMseUJBQXlCO2VBQXpCQTs7SUFNQUMseUJBQXlCO2VBQXpCQTs7SUFZQUMsNkJBQTZCO2VBQTdCQTs7SUExQ0FDLGtDQUFrQztlQUFsQ0E7O0lBb0NBQywwQkFBMEI7ZUFBMUJBOztJQWxCQUMsd0JBQXdCO2VBQXhCQTs7SUFOQUMsaUJBQWlCO2VBQWpCQTs7SUFvQ0FDLG1DQUFtQztlQUFuQ0E7O0lBMUNBQyxtQ0FBbUM7ZUFBbkNBOzs7MEJBM0JNO3FCQUVzQztBQUU1RCxJQUFNQyxpQ0FBaUNDLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLHdCQUM1REMsa0NBQWtDRixpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxpQ0FDN0RFLG1DQUFtQ0gsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsMEJBQzlERyxpQkFBaUJKLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLGdCQUM1Q0ksd0JBQXdCTCxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxzRUFDbkRLLHlCQUF5Qk4saUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsbUJBQ3BETSx5QkFBeUJQLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLHVCQUNwRE8sMEJBQTBCUixpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxlQUNyRFEsNkJBQTZCVCxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxtQkFDeERTLG1DQUFtQ1YsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUM7QUFFN0QsU0FBU1osa0NBQWtDc0IsSUFBSTtJQUNwRCxJQUFNQyw0QkFBNEJDLElBQUFBLDJCQUFvQixFQUFDRixNQUFNWjtJQUU3RCxPQUFPYTtBQUNUO0FBRU8sU0FBU25CLG1DQUFtQ2tCLElBQUk7SUFDckQsSUFBTUcsNkJBQTZCRCxJQUFBQSwyQkFBb0IsRUFBQ0YsTUFBTVQ7SUFFOUQsT0FBT1k7QUFDVDtBQUVPLFNBQVNoQixvQ0FBb0NhLElBQUk7SUFDdEQsSUFBTUksOEJBQThCRixJQUFBQSwyQkFBb0IsRUFBQ0YsTUFBTVI7SUFFL0QsT0FBT1k7QUFDVDtBQUVPLFNBQVNuQixrQkFBa0JlLElBQUk7UUFBRUssWUFBQUEsaUVBQVksRUFBRTtJQUNwREMsSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1QLGdCQUFnQlk7SUFFNUMsT0FBT0E7QUFDVDtBQUVPLFNBQVNyQix5QkFBeUJnQixJQUFJO1FBQUVPLG1CQUFBQSxpRUFBbUIsRUFBRTtJQUNsRUQsSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1OLHVCQUF1QmE7SUFFbkQsT0FBT0E7QUFDVDtBQUVPLFNBQVM1QiwwQkFBMEJxQixJQUFJO1FBQUVRLG9CQUFBQSxpRUFBb0IsRUFBRTtJQUNwRUYsSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1MLHdCQUF3QmE7SUFFcEQsT0FBT0E7QUFDVDtBQUVPLFNBQVM1QiwwQkFBMEJvQixJQUFJO1FBQUVTLG9CQUFBQSxpRUFBb0IsRUFBRTtJQUNwRUgsSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1KLHdCQUF3QmE7SUFFcEQsT0FBT0E7QUFDVDtBQUVPLFNBQVMxQiwyQkFBMkJpQixJQUFJO1FBQUVVLHFCQUFBQSxpRUFBcUIsRUFBRTtJQUN0RUosSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1ILHlCQUF5QmE7SUFFckQsT0FBT0E7QUFDVDtBQUVPLFNBQVM3Qiw4QkFBOEJtQixJQUFJO1FBQUVXLGdCQUFBQSxpRUFBZ0IsRUFBRTtJQUNwRUwsSUFBQUEsNEJBQXFCLEVBQUNOLE1BQU1GLDRCQUE0QmE7SUFFeEQsT0FBT0E7QUFDVDtBQUVPLFNBQVN6QixvQ0FBb0NjLElBQUk7UUFBRVksOEJBQUFBLGlFQUE4QixFQUFFO0lBQ3hGTixJQUFBQSw0QkFBcUIsRUFBQ04sTUFBTUQsa0NBQWtDYTtJQUU5RCxPQUFPQTtBQUNUO0lBRUEsV0FBZTtJQUNibEMsbUNBQUFBO0lBQ0FJLG9DQUFBQTtJQUNBSyxxQ0FBQUE7SUFDQUYsbUJBQUFBO0lBQ0FELDBCQUFBQTtJQUNBTCwyQkFBQUE7SUFDQUMsMkJBQUFBO0lBQ0FHLDRCQUFBQTtJQUNBRiwrQkFBQUE7SUFDQUsscUNBQUFBO0FBQ0YifQ==