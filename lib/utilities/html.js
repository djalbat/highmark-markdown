"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get contentsDirectiveHTMLNodeFromNode () {
        return contentsDirectiveHTMLNodeFromNode;
    },
    get default () {
        return _default;
    },
    get divisionHTMLNodesFromNode () {
        return divisionHTMLNodesFromNode;
    },
    get footnoteHTMLNodesFromNode () {
        return footnoteHTMLNodesFromNode;
    },
    get footnoteLinkHTMLNodesFromNode () {
        return footnoteLinkHTMLNodesFromNode;
    },
    get footnotesDirectiveHTMLNodeFromNode () {
        return footnotesDirectiveHTMLNodeFromNode;
    },
    get headingHTMLNodesFromNode () {
        return headingHTMLNodesFromNode;
    },
    get htmlNodesFromNode () {
        return htmlNodesFromNode;
    },
    get indexDirectiveHTMLNodeFromNode () {
        return indexDirectiveHTMLNodeFromNode;
    },
    get pageNumberDirectiveHTMLNodeFromNode () {
        return pageNumberDirectiveHTMLNodeFromNode;
    }
});
var _occamquery = require("occam-query");
var _query = require("../utilities/query");
var indexDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//indexDirective"), contentsDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//contentsDirective"), footnotesDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//footnotesDirective"), pageNumberDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//pageNumberDirective"), htmlNodesQuery = _occamquery.Query.fromExpressionString("/division/*"), headingHTMLNodesQuery = _occamquery.Query.fromExpressionString("//primaryHeading|secondaryHeading|tertiaryHeading|tertiaryHeading"), divisionHTMLNodesQuery = _occamquery.Query.fromExpressionString("/html/division"), footnoteHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnote"), footnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnoteLink");
function indexDirectiveHTMLNodeFromNode(node) {
    var indexDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, indexDirectiveHTMLNodeQuery);
    return indexDirectiveHTMLNode;
}
function contentsDirectiveHTMLNodeFromNode(node) {
    var contentsDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, contentsDirectiveHTMLNodeQuery);
    return contentsDirectiveHTMLNode;
}
function footnotesDirectiveHTMLNodeFromNode(node) {
    var footnotesDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, footnotesDirectiveHTMLNodeQuery);
    return footnotesDirectiveHTMLNode;
}
function pageNumberDirectiveHTMLNodeFromNode(node) {
    var pageNumberDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, pageNumberDirectiveHTMLNodeQuery);
    return pageNumberDirectiveHTMLNode;
}
function htmlNodesFromNode(node) {
    var htmlNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, htmlNodesQuery, htmlNodes);
    return htmlNodes;
}
function headingHTMLNodesFromNode(node) {
    var headingHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, headingHTMLNodesQuery, headingHTMLNodes);
    return headingHTMLNodes;
}
function divisionHTMLNodesFromNode(node) {
    var divisionHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, divisionHTMLNodesQuery, divisionHTMLNodes);
    return divisionHTMLNodes;
}
function footnoteHTMLNodesFromNode(node) {
    var footnoteHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteHTMLNodesQuery, footnoteHTMLNodes);
    return footnoteHTMLNodes;
}
function footnoteLinkHTMLNodesFromNode(node) {
    var footnoteLinkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteLinkHTMLNodesQuery, footnoteLinkHTMLNodes);
    return footnoteLinkHTMLNodes;
}
var _default = {
    indexDirectiveHTMLNodeFromNode: indexDirectiveHTMLNodeFromNode,
    contentsDirectiveHTMLNodeFromNode: contentsDirectiveHTMLNodeFromNode,
    footnotesDirectiveHTMLNodeFromNode: footnotesDirectiveHTMLNodeFromNode,
    pageNumberDirectiveHTMLNodeFromNode: pageNumberDirectiveHTMLNodeFromNode,
    htmlNodesFromNode: htmlNodesFromNode,
    headingHTMLNodesFromNode: headingHTMLNodesFromNode,
    divisionHTMLNodesFromNode: divisionHTMLNodesFromNode,
    footnoteHTMLNodesFromNode: footnoteHTMLNodesFromNode,
    footnoteLinkHTMLNodesFromNode: footnoteLinkHTMLNodesFromNode
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHRtbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwib2NjYW0tcXVlcnlcIjtcblxuaW1wb3J0IHsgbm9kZUZyb21Ob2RlQW5kUXVlcnksIG5vZGVzRnJvbU5vZGVBbmRRdWVyeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcXVlcnlcIjtcblxuY29uc3QgaW5kZXhEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2luZGV4RGlyZWN0aXZlXCIpLFxuICAgICAgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2NvbnRlbnRzRGlyZWN0aXZlXCIpLFxuICAgICAgZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9mb290bm90ZXNEaXJlY3RpdmVcIiksXG4gICAgICBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9wYWdlTnVtYmVyRGlyZWN0aXZlXCIpLFxuICAgICAgaHRtbE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi9kaXZpc2lvbi8qXCIpLFxuICAgICAgaGVhZGluZ0hUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL3ByaW1hcnlIZWFkaW5nfHNlY29uZGFyeUhlYWRpbmd8dGVydGlhcnlIZWFkaW5nfHRlcnRpYXJ5SGVhZGluZ1wiKSxcbiAgICAgIGRpdmlzaW9uSFRNTE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi9odG1sL2RpdmlzaW9uXCIpLFxuICAgICAgZm9vdG5vdGVIVE1MTm9kZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9mb290bm90ZVwiKSxcbiAgICAgIGZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2Zvb3Rub3RlTGlua1wiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGluZGV4RGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZShub2RlKSB7XG4gIGNvbnN0IGluZGV4RGlyZWN0aXZlSFRNTE5vZGUgPSBub2RlRnJvbU5vZGVBbmRRdWVyeShub2RlLCBpbmRleERpcmVjdGl2ZUhUTUxOb2RlUXVlcnkpO1xuXG4gIHJldHVybiBpbmRleERpcmVjdGl2ZUhUTUxOb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlKG5vZGUpIHtcbiAgY29uc3QgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZSA9IG5vZGVGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGNvbnRlbnRzRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSk7XG5cbiAgcmV0dXJuIGNvbnRlbnRzRGlyZWN0aXZlSFRNTE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlKG5vZGUpIHtcbiAgY29uc3QgZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGUgPSBub2RlRnJvbU5vZGVBbmRRdWVyeShub2RlLCBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5KTtcblxuICByZXR1cm4gZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZShub2RlKSB7XG4gIGNvbnN0IHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZSA9IG5vZGVGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5KTtcblxuICByZXR1cm4gcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHRtbE5vZGVzRnJvbU5vZGUobm9kZSwgaHRtbE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGh0bWxOb2Rlc1F1ZXJ5LCBodG1sTm9kZXMpO1xuXG4gIHJldHVybiBodG1sTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoZWFkaW5nSFRNTE5vZGVzRnJvbU5vZGUobm9kZSwgaGVhZGluZ0hUTUxOb2RlcyA9IFtdKSB7XG4gIG5vZGVzRnJvbU5vZGVBbmRRdWVyeShub2RlLCBoZWFkaW5nSFRNTE5vZGVzUXVlcnksIGhlYWRpbmdIVE1MTm9kZXMpO1xuXG4gIHJldHVybiBoZWFkaW5nSFRNTE5vZGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2aXNpb25IVE1MTm9kZXNGcm9tTm9kZShub2RlLCBkaXZpc2lvbkhUTUxOb2RlcyA9IFtdKSB7XG4gIG5vZGVzRnJvbU5vZGVBbmRRdWVyeShub2RlLCBkaXZpc2lvbkhUTUxOb2Rlc1F1ZXJ5LCBkaXZpc2lvbkhUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGRpdmlzaW9uSFRNTE5vZGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVIVE1MTm9kZXNGcm9tTm9kZShub2RlLCBmb290bm90ZUhUTUxOb2RlcyA9IFtdKSB7XG4gIG5vZGVzRnJvbU5vZGVBbmRRdWVyeShub2RlLCBmb290bm90ZUhUTUxOb2Rlc1F1ZXJ5LCBmb290bm90ZUhUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGZvb3Rub3RlSFRNTE5vZGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9vdG5vdGVMaW5rSFRNTE5vZGVzRnJvbU5vZGUobm9kZSwgZm9vdG5vdGVMaW5rSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5LCBmb290bm90ZUxpbmtIVE1MTm9kZXMpO1xuXG4gIHJldHVybiBmb290bm90ZUxpbmtIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5kZXhEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlLFxuICBjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUsXG4gIGZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUsXG4gIHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlLFxuICBodG1sTm9kZXNGcm9tTm9kZSxcbiAgaGVhZGluZ0hUTUxOb2Rlc0Zyb21Ob2RlLFxuICBkaXZpc2lvbkhUTUxOb2Rlc0Zyb21Ob2RlLFxuICBmb290bm90ZUhUTUxOb2Rlc0Zyb21Ob2RlLFxuICBmb290bm90ZUxpbmtIVE1MTm9kZXNGcm9tTm9kZVxufTtcbiJdLCJuYW1lcyI6WyJjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUiLCJkaXZpc2lvbkhUTUxOb2Rlc0Zyb21Ob2RlIiwiZm9vdG5vdGVIVE1MTm9kZXNGcm9tTm9kZSIsImZvb3Rub3RlTGlua0hUTUxOb2Rlc0Zyb21Ob2RlIiwiZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSIsImhlYWRpbmdIVE1MTm9kZXNGcm9tTm9kZSIsImh0bWxOb2Rlc0Zyb21Ob2RlIiwiaW5kZXhEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlIiwicGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUiLCJpbmRleERpcmVjdGl2ZUhUTUxOb2RlUXVlcnkiLCJRdWVyeSIsImZyb21FeHByZXNzaW9uU3RyaW5nIiwiY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5IiwiZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSIsInBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5IiwiaHRtbE5vZGVzUXVlcnkiLCJoZWFkaW5nSFRNTE5vZGVzUXVlcnkiLCJkaXZpc2lvbkhUTUxOb2Rlc1F1ZXJ5IiwiZm9vdG5vdGVIVE1MTm9kZXNRdWVyeSIsImZvb3Rub3RlTGlua0hUTUxOb2Rlc1F1ZXJ5Iiwibm9kZSIsImluZGV4RGlyZWN0aXZlSFRNTE5vZGUiLCJub2RlRnJvbU5vZGVBbmRRdWVyeSIsImNvbnRlbnRzRGlyZWN0aXZlSFRNTE5vZGUiLCJmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZSIsInBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZSIsImh0bWxOb2RlcyIsIm5vZGVzRnJvbU5vZGVBbmRRdWVyeSIsImhlYWRpbmdIVE1MTm9kZXMiLCJkaXZpc2lvbkhUTUxOb2RlcyIsImZvb3Rub3RlSFRNTE5vZGVzIiwiZm9vdG5vdGVMaW5rSFRNTE5vZGVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7UUFzQmdCQTtlQUFBQTs7UUFnRGhCO2VBQUE7O1FBbEJnQkM7ZUFBQUE7O1FBTUFDO2VBQUFBOztRQU1BQztlQUFBQTs7UUFwQ0FDO2VBQUFBOztRQWtCQUM7ZUFBQUE7O1FBTkFDO2VBQUFBOztRQXhCQUM7ZUFBQUE7O1FBa0JBQztlQUFBQTs7OzBCQWhDTTtxQkFFc0M7QUFFNUQsSUFBTUMsOEJBQThCQyxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxxQkFDekRDLGlDQUFpQ0YsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsd0JBQzVERSxrQ0FBa0NILGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLHlCQUM3REcsbUNBQW1DSixpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQywwQkFDOURJLGlCQUFpQkwsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsZ0JBQzVDSyx3QkFBd0JOLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLHNFQUNuRE0seUJBQXlCUCxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxtQkFDcERPLHlCQUF5QlIsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsZUFDcERRLDZCQUE2QlQsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUM7QUFFdkQsU0FBU0osK0JBQStCYSxJQUFJO0lBQ2pELElBQU1DLHlCQUF5QkMsSUFBQUEsMkJBQW9CLEVBQUNGLE1BQU1YO0lBRTFELE9BQU9ZO0FBQ1Q7QUFFTyxTQUFTckIsa0NBQWtDb0IsSUFBSTtJQUNwRCxJQUFNRyw0QkFBNEJELElBQUFBLDJCQUFvQixFQUFDRixNQUFNUjtJQUU3RCxPQUFPVztBQUNUO0FBRU8sU0FBU25CLG1DQUFtQ2dCLElBQUk7SUFDckQsSUFBTUksNkJBQTZCRixJQUFBQSwyQkFBb0IsRUFBQ0YsTUFBTVA7SUFFOUQsT0FBT1c7QUFDVDtBQUVPLFNBQVNoQixvQ0FBb0NZLElBQUk7SUFDdEQsSUFBTUssOEJBQThCSCxJQUFBQSwyQkFBb0IsRUFBQ0YsTUFBTU47SUFFL0QsT0FBT1c7QUFDVDtBQUVPLFNBQVNuQixrQkFBa0JjLElBQUk7UUFBRU0sWUFBQUEsaUVBQVksRUFBRTtJQUNwREMsSUFBQUEsNEJBQXFCLEVBQUNQLE1BQU1MLGdCQUFnQlc7SUFFNUMsT0FBT0E7QUFDVDtBQUVPLFNBQVNyQix5QkFBeUJlLElBQUk7UUFBRVEsbUJBQUFBLGlFQUFtQixFQUFFO0lBQ2xFRCxJQUFBQSw0QkFBcUIsRUFBQ1AsTUFBTUosdUJBQXVCWTtJQUVuRCxPQUFPQTtBQUNUO0FBRU8sU0FBUzNCLDBCQUEwQm1CLElBQUk7UUFBRVMsb0JBQUFBLGlFQUFvQixFQUFFO0lBQ3BFRixJQUFBQSw0QkFBcUIsRUFBQ1AsTUFBTUgsd0JBQXdCWTtJQUVwRCxPQUFPQTtBQUNUO0FBRU8sU0FBUzNCLDBCQUEwQmtCLElBQUk7UUFBRVUsb0JBQUFBLGlFQUFvQixFQUFFO0lBQ3BFSCxJQUFBQSw0QkFBcUIsRUFBQ1AsTUFBTUYsd0JBQXdCWTtJQUVwRCxPQUFPQTtBQUNUO0FBRU8sU0FBUzNCLDhCQUE4QmlCLElBQUk7UUFBRVcsd0JBQUFBLGlFQUF3QixFQUFFO0lBQzVFSixJQUFBQSw0QkFBcUIsRUFBQ1AsTUFBTUQsNEJBQTRCWTtJQUV4RCxPQUFPQTtBQUNUO0lBRUEsV0FBZTtJQUNieEIsZ0NBQUFBO0lBQ0FQLG1DQUFBQTtJQUNBSSxvQ0FBQUE7SUFDQUkscUNBQUFBO0lBQ0FGLG1CQUFBQTtJQUNBRCwwQkFBQUE7SUFDQUosMkJBQUFBO0lBQ0FDLDJCQUFBQTtJQUNBQywrQkFBQUE7QUFDRiJ9