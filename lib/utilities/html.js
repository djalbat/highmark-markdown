"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    postProcess: function() {
        return postProcess;
    }
});
function postProcess(divisionMarkdownNodes, context) {
    debugger;
// const footnoteReplacementMap = prepareFootnotes(divisionMarkdownNodes, context),
//       markdownNodes = paginate(divisionMarkdownNodes, context);
//
// divisionMarkdownNodes = divisionMarkdownNodesFromMarkdownNodes(markdownNodes);  ///
//
// createFootnotes(divisionMarkdownNodes, footnoteReplacementMap, context);
//
// createContents(divisionMarkdownNodes, context);
//
// createIndex(divisionMarkdownNodes, context);
}
function paginate(divisionMarkdownNodes, context) {
    var pageNumber = 1, markdownNOdes = [];
    Object.assign(context, {
        pageNumber: pageNumber
    });
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.paginate(markdownNOdes, context);
    });
    delete context.pageNumber;
    return markdownNOdes;
}
function createIndex(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var indexCreated = divisionMarkdownNode.createIndex(divisionMarkdownNodes, context);
        if (indexCreated) {
            return true;
        }
    });
}
function createContents(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var contentsCreated = divisionMarkdownNode.createContents(divisionMarkdownNodes, context);
        if (contentsCreated) {
            return true;
        }
    });
}
function createFootnotes(divisionMarkdownNodes, footnoteReplacementMap, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.createFootnotes(footnoteReplacementMap, context);
    });
}
function prepareFootnotes(divisionMarkdownNodes, context) {
    var footnoteReplacementMap = {};
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.prepareFootnotes(footnoteReplacementMap, context);
    });
    return footnoteReplacementMap;
}
var _default = {
    postProcess: postProcess
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHRtbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvc3RQcm9jZXNzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkZWJ1Z2dlclxuXG5cbiAgLy8gY29uc3QgZm9vdG5vdGVSZXBsYWNlbWVudE1hcCA9IHByZXBhcmVGb290bm90ZXMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSxcbiAgLy8gICAgICAgbWFya2Rvd25Ob2RlcyA9IHBhZ2luYXRlKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG4gIC8vXG4gIC8vIGRpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IGRpdmlzaW9uTWFya2Rvd25Ob2Rlc0Zyb21NYXJrZG93bk5vZGVzKG1hcmtkb3duTm9kZXMpOyAgLy8vXG4gIC8vXG4gIC8vIGNyZWF0ZUZvb3Rub3RlcyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGZvb3Rub3RlUmVwbGFjZW1lbnRNYXAsIGNvbnRleHQpO1xuICAvL1xuICAvLyBjcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuICAvL1xuICAvLyBjcmVhdGVJbmRleChkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xufVxuXG5mdW5jdGlvbiBwYWdpbmF0ZShkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpIHtcbiAgY29uc3QgcGFnZU51bWJlciA9IDEsXG4gICAgICAgIG1hcmtkb3duTk9kZXMgPSBbXTtcblxuICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICBwYWdlTnVtYmVyXG4gIH0pO1xuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnBhZ2luYXRlKG1hcmtkb3duTk9kZXMsIGNvbnRleHQpO1xuICB9KTtcblxuICBkZWxldGUgY29udGV4dC5wYWdlTnVtYmVyO1xuXG4gIHJldHVybiBtYXJrZG93bk5PZGVzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbmRleChkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpIHtcbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzLnNvbWUoKGRpdmlzaW9uTWFya2Rvd25Ob2RlKSA9PiB7XG4gICAgY29uc3QgaW5kZXhDcmVhdGVkID0gZGl2aXNpb25NYXJrZG93bk5vZGUuY3JlYXRlSW5kZXgoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICAgIGlmIChpbmRleENyZWF0ZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuc29tZSgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBjb25zdCBjb250ZW50c0NyZWF0ZWQgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gICAgaWYgKGNvbnRlbnRzQ3JlYXRlZCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVGb290bm90ZXMoZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBjb25zdCBmb290bm90ZVJlcGxhY2VtZW50TWFwID0ge307XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzLmZvckVhY2goKGRpdmlzaW9uTWFya2Rvd25Ob2RlKSA9PiB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGUucHJlcGFyZUZvb3Rub3Rlcyhmb290bm90ZVJlcGxhY2VtZW50TWFwLCBjb250ZXh0KTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZvb3Rub3RlUmVwbGFjZW1lbnRNYXA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcG9zdFByb2Nlc3Ncbn0iXSwibmFtZXMiOlsicG9zdFByb2Nlc3MiLCJkaXZpc2lvbk1hcmtkb3duTm9kZXMiLCJjb250ZXh0IiwicGFnaW5hdGUiLCJwYWdlTnVtYmVyIiwibWFya2Rvd25OT2RlcyIsIk9iamVjdCIsImFzc2lnbiIsImZvckVhY2giLCJkaXZpc2lvbk1hcmtkb3duTm9kZSIsImNyZWF0ZUluZGV4Iiwic29tZSIsImluZGV4Q3JlYXRlZCIsImNyZWF0ZUNvbnRlbnRzIiwiY29udGVudHNDcmVhdGVkIiwiY3JlYXRlRm9vdG5vdGVzIiwiZm9vdG5vdGVSZXBsYWNlbWVudE1hcCIsInByZXBhcmVGb290bm90ZXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQXVFQSxPQUVDO2VBRkQ7O0lBckVnQkEsV0FBVztlQUFYQTs7O0FBQVQsU0FBU0EsWUFBWUMscUJBQXFCLEVBQUVDLE9BQU87SUFDeEQsUUFBUTtBQUdSLG1GQUFtRjtBQUNuRixrRUFBa0U7QUFDbEUsRUFBRTtBQUNGLHNGQUFzRjtBQUN0RixFQUFFO0FBQ0YsMkVBQTJFO0FBQzNFLEVBQUU7QUFDRixrREFBa0Q7QUFDbEQsRUFBRTtBQUNGLCtDQUErQztBQUNqRDtBQUVBLFNBQVNDLFNBQVNGLHFCQUFxQixFQUFFQyxPQUFPO0lBQzlDLElBQU1FLGFBQWEsR0FDYkMsZ0JBQWdCLEVBQUU7SUFFeEJDLE9BQU9DLE1BQU0sQ0FBQ0wsU0FBUztRQUNyQkUsWUFBQUE7SUFDRjtJQUVBSCxzQkFBc0JPLE9BQU8sQ0FBQyxTQUFDQztRQUM3QkEscUJBQXFCTixRQUFRLENBQUNFLGVBQWVIO0lBQy9DO0lBRUEsT0FBT0EsUUFBUUUsVUFBVTtJQUV6QixPQUFPQztBQUNUO0FBRUEsU0FBU0ssWUFBWVQscUJBQXFCLEVBQUVDLE9BQU87SUFDakRELHNCQUFzQlUsSUFBSSxDQUFDLFNBQUNGO1FBQzFCLElBQU1HLGVBQWVILHFCQUFxQkMsV0FBVyxDQUFDVCx1QkFBdUJDO1FBRTdFLElBQUlVLGNBQWM7WUFDaEIsT0FBTztRQUNUO0lBQ0Y7QUFDRjtBQUVBLFNBQVNDLGVBQWVaLHFCQUFxQixFQUFFQyxPQUFPO0lBQ3BERCxzQkFBc0JVLElBQUksQ0FBQyxTQUFDRjtRQUMxQixJQUFNSyxrQkFBa0JMLHFCQUFxQkksY0FBYyxDQUFDWix1QkFBdUJDO1FBRW5GLElBQUlZLGlCQUFpQjtZQUNuQixPQUFPO1FBQ1Q7SUFDRjtBQUNGO0FBRUEsU0FBU0MsZ0JBQWdCZCxxQkFBcUIsRUFBRWUsc0JBQXNCLEVBQUVkLE9BQU87SUFDN0VELHNCQUFzQk8sT0FBTyxDQUFDLFNBQUNDO1FBQzdCQSxxQkFBcUJNLGVBQWUsQ0FBQ0Msd0JBQXdCZDtJQUMvRDtBQUNGO0FBRUEsU0FBU2UsaUJBQWlCaEIscUJBQXFCLEVBQUVDLE9BQU87SUFDdEQsSUFBTWMseUJBQXlCLENBQUM7SUFFaENmLHNCQUFzQk8sT0FBTyxDQUFDLFNBQUNDO1FBQzdCQSxxQkFBcUJRLGdCQUFnQixDQUFDRCx3QkFBd0JkO0lBQ2hFO0lBRUEsT0FBT2M7QUFDVDtJQUVBLFdBQWU7SUFDYmhCLGFBQUFBO0FBQ0YifQ==