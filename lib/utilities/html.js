"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get contentsDirectiveHTMLNodeFromNode () {
        return contentsDirectiveHTMLNodeFromNode;
    },
    get default () {
        return _default;
    },
    get divisionHTMLNodesFromNode () {
        return divisionHTMLNodesFromNode;
    },
    get footnoteHTMLNodesFromNode () {
        return footnoteHTMLNodesFromNode;
    },
    get footnoteLinkHTMLNodesFromNode () {
        return footnoteLinkHTMLNodesFromNode;
    },
    get footnotesDirectiveHTMLNodeFromNode () {
        return footnotesDirectiveHTMLNodeFromNode;
    },
    get headingHTMLNodesFromNode () {
        return headingHTMLNodesFromNode;
    },
    get htmlNodesFromNode () {
        return htmlNodesFromNode;
    },
    get indexDirectiveHTMLNodeFromNode () {
        return indexDirectiveHTMLNodeFromNode;
    },
    get pageNumberDirectiveHTMLNodeFromNode () {
        return pageNumberDirectiveHTMLNodeFromNode;
    }
});
var _occamquery = require("occam-query");
var _query = require("../utilities/query");
var indexDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//indexDirective"), contentsDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//contentsDirective"), footnotesDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//footnotesDirective"), pageNumberDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//pageNumberDirective"), htmlNodesQuery = _occamquery.Query.fromExpressionString("/division/*"), headingHTMLNodesQuery = _occamquery.Query.fromExpressionString("//primaryHeading|secondaryHeading|tertiaryHeading|tertiaryHeading"), divisionHTMLNodesQuery = _occamquery.Query.fromExpressionString("/html/division"), footnoteHTMLNodesQuery = _occamquery.Query.fromExpressionString("/footnote"), footnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnoteLink");
function indexDirectiveHTMLNodeFromNode(node) {
    var indexDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, indexDirectiveHTMLNodeQuery);
    return indexDirectiveHTMLNode;
}
function contentsDirectiveHTMLNodeFromNode(node) {
    var contentsDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, contentsDirectiveHTMLNodeQuery);
    return contentsDirectiveHTMLNode;
}
function footnotesDirectiveHTMLNodeFromNode(node) {
    var footnotesDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, footnotesDirectiveHTMLNodeQuery);
    return footnotesDirectiveHTMLNode;
}
function pageNumberDirectiveHTMLNodeFromNode(node) {
    var pageNumberDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, pageNumberDirectiveHTMLNodeQuery);
    return pageNumberDirectiveHTMLNode;
}
function htmlNodesFromNode(node) {
    var htmlNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, htmlNodesQuery, htmlNodes);
    return htmlNodes;
}
function headingHTMLNodesFromNode(node) {
    var headingHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, headingHTMLNodesQuery, headingHTMLNodes);
    return headingHTMLNodes;
}
function divisionHTMLNodesFromNode(node) {
    var divisionHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, divisionHTMLNodesQuery, divisionHTMLNodes);
    return divisionHTMLNodes;
}
function footnoteHTMLNodesFromNode(node) {
    var footnoteHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteHTMLNodesQuery, footnoteHTMLNodes);
    return footnoteHTMLNodes;
}
function footnoteLinkHTMLNodesFromNode(node) {
    var footnoteLinkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteLinkHTMLNodesQuery, footnoteLinkHTMLNodes);
    return footnoteLinkHTMLNodes;
}
var _default = {
    indexDirectiveHTMLNodeFromNode: indexDirectiveHTMLNodeFromNode,
    contentsDirectiveHTMLNodeFromNode: contentsDirectiveHTMLNodeFromNode,
    footnotesDirectiveHTMLNodeFromNode: footnotesDirectiveHTMLNodeFromNode,
    pageNumberDirectiveHTMLNodeFromNode: pageNumberDirectiveHTMLNodeFromNode,
    htmlNodesFromNode: htmlNodesFromNode,
    headingHTMLNodesFromNode: headingHTMLNodesFromNode,
    divisionHTMLNodesFromNode: divisionHTMLNodesFromNode,
    footnoteHTMLNodesFromNode: footnoteHTMLNodesFromNode,
    footnoteLinkHTMLNodesFromNode: footnoteLinkHTMLNodesFromNode
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvaHRtbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwib2NjYW0tcXVlcnlcIjtcblxuaW1wb3J0IHsgbm9kZUZyb21Ob2RlQW5kUXVlcnksIG5vZGVzRnJvbU5vZGVBbmRRdWVyeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcXVlcnlcIjtcblxuY29uc3QgaW5kZXhEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2luZGV4RGlyZWN0aXZlXCIpLFxuICAgICAgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL2NvbnRlbnRzRGlyZWN0aXZlXCIpLFxuICAgICAgZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9mb290bm90ZXNEaXJlY3RpdmVcIiksXG4gICAgICBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiLy9wYWdlTnVtYmVyRGlyZWN0aXZlXCIpLFxuICAgICAgaHRtbE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi9kaXZpc2lvbi8qXCIpLFxuICAgICAgaGVhZGluZ0hUTUxOb2Rlc1F1ZXJ5ID0gUXVlcnkuZnJvbUV4cHJlc3Npb25TdHJpbmcoXCIvL3ByaW1hcnlIZWFkaW5nfHNlY29uZGFyeUhlYWRpbmd8dGVydGlhcnlIZWFkaW5nfHRlcnRpYXJ5SGVhZGluZ1wiKSxcbiAgICAgIGRpdmlzaW9uSFRNTE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi9odG1sL2RpdmlzaW9uXCIpLFxuICAgICAgZm9vdG5vdGVIVE1MTm9kZXNRdWVyeSA9IFF1ZXJ5LmZyb21FeHByZXNzaW9uU3RyaW5nKFwiL2Zvb3Rub3RlXCIpLFxuICAgICAgZm9vdG5vdGVMaW5rSFRNTE5vZGVzUXVlcnkgPSBRdWVyeS5mcm9tRXhwcmVzc2lvblN0cmluZyhcIi8vZm9vdG5vdGVMaW5rXCIpO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlKG5vZGUpIHtcbiAgY29uc3QgaW5kZXhEaXJlY3RpdmVIVE1MTm9kZSA9IG5vZGVGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGluZGV4RGlyZWN0aXZlSFRNTE5vZGVRdWVyeSk7XG5cbiAgcmV0dXJuIGluZGV4RGlyZWN0aXZlSFRNTE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUobm9kZSkge1xuICBjb25zdCBjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlID0gbm9kZUZyb21Ob2RlQW5kUXVlcnkobm9kZSwgY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5KTtcblxuICByZXR1cm4gY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUobm9kZSkge1xuICBjb25zdCBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZSA9IG5vZGVGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlUXVlcnkpO1xuXG4gIHJldHVybiBmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VOdW1iZXJEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlKG5vZGUpIHtcbiAgY29uc3QgcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlID0gbm9kZUZyb21Ob2RlQW5kUXVlcnkobm9kZSwgcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlUXVlcnkpO1xuXG4gIHJldHVybiBwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodG1sTm9kZXNGcm9tTm9kZShub2RlLCBodG1sTm9kZXMgPSBbXSkge1xuICBub2Rlc0Zyb21Ob2RlQW5kUXVlcnkobm9kZSwgaHRtbE5vZGVzUXVlcnksIGh0bWxOb2Rlcyk7XG5cbiAgcmV0dXJuIGh0bWxOb2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhlYWRpbmdIVE1MTm9kZXNGcm9tTm9kZShub2RlLCBoZWFkaW5nSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGhlYWRpbmdIVE1MTm9kZXNRdWVyeSwgaGVhZGluZ0hUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGhlYWRpbmdIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZpc2lvbkhUTUxOb2Rlc0Zyb21Ob2RlKG5vZGUsIGRpdmlzaW9uSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGRpdmlzaW9uSFRNTE5vZGVzUXVlcnksIGRpdmlzaW9uSFRNTE5vZGVzKTtcblxuICByZXR1cm4gZGl2aXNpb25IVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZUhUTUxOb2Rlc0Zyb21Ob2RlKG5vZGUsIGZvb3Rub3RlSFRNTE5vZGVzID0gW10pIHtcbiAgbm9kZXNGcm9tTm9kZUFuZFF1ZXJ5KG5vZGUsIGZvb3Rub3RlSFRNTE5vZGVzUXVlcnksIGZvb3Rub3RlSFRNTE5vZGVzKTtcblxuICByZXR1cm4gZm9vdG5vdGVIVE1MTm9kZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb290bm90ZUxpbmtIVE1MTm9kZXNGcm9tTm9kZShub2RlLCBmb290bm90ZUxpbmtIVE1MTm9kZXMgPSBbXSkge1xuICBub2Rlc0Zyb21Ob2RlQW5kUXVlcnkobm9kZSwgZm9vdG5vdGVMaW5rSFRNTE5vZGVzUXVlcnksIGZvb3Rub3RlTGlua0hUTUxOb2Rlcyk7XG5cbiAgcmV0dXJuIGZvb3Rub3RlTGlua0hUTUxOb2Rlcztcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBpbmRleERpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUsXG4gIGNvbnRlbnRzRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSxcbiAgZm9vdG5vdGVzRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSxcbiAgcGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUsXG4gIGh0bWxOb2Rlc0Zyb21Ob2RlLFxuICBoZWFkaW5nSFRNTE5vZGVzRnJvbU5vZGUsXG4gIGRpdmlzaW9uSFRNTE5vZGVzRnJvbU5vZGUsXG4gIGZvb3Rub3RlSFRNTE5vZGVzRnJvbU5vZGUsXG4gIGZvb3Rub3RlTGlua0hUTUxOb2Rlc0Zyb21Ob2RlXG59O1xuIl0sIm5hbWVzIjpbImNvbnRlbnRzRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSIsImRpdmlzaW9uSFRNTE5vZGVzRnJvbU5vZGUiLCJmb290bm90ZUhUTUxOb2Rlc0Zyb21Ob2RlIiwiZm9vdG5vdGVMaW5rSFRNTE5vZGVzRnJvbU5vZGUiLCJmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZUZyb21Ob2RlIiwiaGVhZGluZ0hUTUxOb2Rlc0Zyb21Ob2RlIiwiaHRtbE5vZGVzRnJvbU5vZGUiLCJpbmRleERpcmVjdGl2ZUhUTUxOb2RlRnJvbU5vZGUiLCJwYWdlTnVtYmVyRGlyZWN0aXZlSFRNTE5vZGVGcm9tTm9kZSIsImluZGV4RGlyZWN0aXZlSFRNTE5vZGVRdWVyeSIsIlF1ZXJ5IiwiZnJvbUV4cHJlc3Npb25TdHJpbmciLCJjb250ZW50c0RpcmVjdGl2ZUhUTUxOb2RlUXVlcnkiLCJmb290bm90ZXNEaXJlY3RpdmVIVE1MTm9kZVF1ZXJ5IiwicGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlUXVlcnkiLCJodG1sTm9kZXNRdWVyeSIsImhlYWRpbmdIVE1MTm9kZXNRdWVyeSIsImRpdmlzaW9uSFRNTE5vZGVzUXVlcnkiLCJmb290bm90ZUhUTUxOb2Rlc1F1ZXJ5IiwiZm9vdG5vdGVMaW5rSFRNTE5vZGVzUXVlcnkiLCJub2RlIiwiaW5kZXhEaXJlY3RpdmVIVE1MTm9kZSIsIm5vZGVGcm9tTm9kZUFuZFF1ZXJ5IiwiY29udGVudHNEaXJlY3RpdmVIVE1MTm9kZSIsImZvb3Rub3Rlc0RpcmVjdGl2ZUhUTUxOb2RlIiwicGFnZU51bWJlckRpcmVjdGl2ZUhUTUxOb2RlIiwiaHRtbE5vZGVzIiwibm9kZXNGcm9tTm9kZUFuZFF1ZXJ5IiwiaGVhZGluZ0hUTUxOb2RlcyIsImRpdmlzaW9uSFRNTE5vZGVzIiwiZm9vdG5vdGVIVE1MTm9kZXMiLCJmb290bm90ZUxpbmtIVE1MTm9kZXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztRQXNCZ0JBO2VBQUFBOztRQWdEaEI7ZUFBQTs7UUFsQmdCQztlQUFBQTs7UUFNQUM7ZUFBQUE7O1FBTUFDO2VBQUFBOztRQXBDQUM7ZUFBQUE7O1FBa0JBQztlQUFBQTs7UUFOQUM7ZUFBQUE7O1FBeEJBQztlQUFBQTs7UUFrQkFDO2VBQUFBOzs7MEJBaENNO3FCQUVzQztBQUU1RCxJQUFNQyw4QkFBOEJDLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLHFCQUN6REMsaUNBQWlDRixpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyx3QkFDNURFLGtDQUFrQ0gsaUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMseUJBQzdERyxtQ0FBbUNKLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLDBCQUM5REksaUJBQWlCTCxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxnQkFDNUNLLHdCQUF3Qk4saUJBQUssQ0FBQ0Msb0JBQW9CLENBQUMsc0VBQ25ETSx5QkFBeUJQLGlCQUFLLENBQUNDLG9CQUFvQixDQUFDLG1CQUNwRE8seUJBQXlCUixpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQyxjQUNwRFEsNkJBQTZCVCxpQkFBSyxDQUFDQyxvQkFBb0IsQ0FBQztBQUV2RCxTQUFTSiwrQkFBK0JhLElBQUk7SUFDakQsSUFBTUMseUJBQXlCQyxJQUFBQSwyQkFBb0IsRUFBQ0YsTUFBTVg7SUFFMUQsT0FBT1k7QUFDVDtBQUVPLFNBQVNyQixrQ0FBa0NvQixJQUFJO0lBQ3BELElBQU1HLDRCQUE0QkQsSUFBQUEsMkJBQW9CLEVBQUNGLE1BQU1SO0lBRTdELE9BQU9XO0FBQ1Q7QUFFTyxTQUFTbkIsbUNBQW1DZ0IsSUFBSTtJQUNyRCxJQUFNSSw2QkFBNkJGLElBQUFBLDJCQUFvQixFQUFDRixNQUFNUDtJQUU5RCxPQUFPVztBQUNUO0FBRU8sU0FBU2hCLG9DQUFvQ1ksSUFBSTtJQUN0RCxJQUFNSyw4QkFBOEJILElBQUFBLDJCQUFvQixFQUFDRixNQUFNTjtJQUUvRCxPQUFPVztBQUNUO0FBRU8sU0FBU25CLGtCQUFrQmMsSUFBSTtRQUFFTSxZQUFBQSxpRUFBWSxFQUFFO0lBQ3BEQyxJQUFBQSw0QkFBcUIsRUFBQ1AsTUFBTUwsZ0JBQWdCVztJQUU1QyxPQUFPQTtBQUNUO0FBRU8sU0FBU3JCLHlCQUF5QmUsSUFBSTtRQUFFUSxtQkFBQUEsaUVBQW1CLEVBQUU7SUFDbEVELElBQUFBLDRCQUFxQixFQUFDUCxNQUFNSix1QkFBdUJZO0lBRW5ELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTM0IsMEJBQTBCbUIsSUFBSTtRQUFFUyxvQkFBQUEsaUVBQW9CLEVBQUU7SUFDcEVGLElBQUFBLDRCQUFxQixFQUFDUCxNQUFNSCx3QkFBd0JZO0lBRXBELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTM0IsMEJBQTBCa0IsSUFBSTtRQUFFVSxvQkFBQUEsaUVBQW9CLEVBQUU7SUFDcEVILElBQUFBLDRCQUFxQixFQUFDUCxNQUFNRix3QkFBd0JZO0lBRXBELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTM0IsOEJBQThCaUIsSUFBSTtRQUFFVyx3QkFBQUEsaUVBQXdCLEVBQUU7SUFDNUVKLElBQUFBLDRCQUFxQixFQUFDUCxNQUFNRCw0QkFBNEJZO0lBRXhELE9BQU9BO0FBQ1Q7SUFFQSxXQUFlO0lBQ2J4QixnQ0FBQUE7SUFDQVAsbUNBQUFBO0lBQ0FJLG9DQUFBQTtJQUNBSSxxQ0FBQUE7SUFDQUYsbUJBQUFBO0lBQ0FELDBCQUFBQTtJQUNBSiwyQkFBQUE7SUFDQUMsMkJBQUFBO0lBQ0FDLCtCQUFBQTtBQUNGIn0=