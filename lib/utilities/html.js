"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get contentsDirectiveHTMLNodeFromNode () {
        return contentsDirectiveHTMLNodeFromNode;
    },
    get default () {
        return _default;
    },
    get divisionHTMLNodesFromNode () {
        return divisionHTMLNodesFromNode;
    },
    get footnoteHTMLNodesFromNode () {
        return footnoteHTMLNodesFromNode;
    },
    get footnoteLinkHTMLNodesFromNode () {
        return footnoteLinkHTMLNodesFromNode;
    },
    get footnotesDirectiveHTMLNodeFromNode () {
        return footnotesDirectiveHTMLNodeFromNode;
    },
    get footnotesHTMLNodesFromNode () {
        return footnotesHTMLNodesFromNode;
    },
    get headingHTMLNodesFromNode () {
        return headingHTMLNodesFromNode;
    },
    get htmlNodesFromNode () {
        return htmlNodesFromNode;
    },
    get indexDirectiveHTMLNodeFromNode () {
        return indexDirectiveHTMLNodeFromNode;
    },
    get nestedFootnoteLinkHTMLNodesFromNode () {
        return nestedFootnoteLinkHTMLNodesFromNode;
    },
    get pageNumberDirectiveHTMLNodeFromNode () {
        return pageNumberDirectiveHTMLNodeFromNode;
    }
});
var _occamquery = require("occam-query");
var _query = require("../utilities/query");
var indexDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//indexDirective"), contentsDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//contentsDirective"), footnotesDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//footnotesDirective"), pageNumberDirectiveHTMLNodeQuery = _occamquery.Query.fromExpressionString("//pageNumberDirective"), htmlNodesQuery = _occamquery.Query.fromExpressionString("/division/*"), headingHTMLNodesQuery = _occamquery.Query.fromExpressionString("//primaryHeading|secondaryHeading|tertiaryHeading|tertiaryHeading"), divisionHTMLNodesQuery = _occamquery.Query.fromExpressionString("/html/division"), footnoteHTMLNodesQuery = _occamquery.Query.fromExpressionString("/division/footnote"), footnotesHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnote"), footnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnoteLink"), nestedFootnoteLinkHTMLNodesQuery = _occamquery.Query.fromExpressionString("//footnote//footnoteLink");
function indexDirectiveHTMLNodeFromNode(node) {
    var indexDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, indexDirectiveHTMLNodeQuery);
    return indexDirectiveHTMLNode;
}
function contentsDirectiveHTMLNodeFromNode(node) {
    var contentsDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, contentsDirectiveHTMLNodeQuery);
    return contentsDirectiveHTMLNode;
}
function footnotesDirectiveHTMLNodeFromNode(node) {
    var footnotesDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, footnotesDirectiveHTMLNodeQuery);
    return footnotesDirectiveHTMLNode;
}
function pageNumberDirectiveHTMLNodeFromNode(node) {
    var pageNumberDirectiveHTMLNode = (0, _query.nodeFromNodeAndQuery)(node, pageNumberDirectiveHTMLNodeQuery);
    return pageNumberDirectiveHTMLNode;
}
function htmlNodesFromNode(node) {
    var htmlNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, htmlNodesQuery, htmlNodes);
    return htmlNodes;
}
function headingHTMLNodesFromNode(node) {
    var headingHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, headingHTMLNodesQuery, headingHTMLNodes);
    return headingHTMLNodes;
}
function divisionHTMLNodesFromNode(node) {
    var divisionHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, divisionHTMLNodesQuery, divisionHTMLNodes);
    return divisionHTMLNodes;
}
function footnoteHTMLNodesFromNode(node) {
    var footnoteHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteHTMLNodesQuery, footnoteHTMLNodes);
    return footnoteHTMLNodes;
}
function footnotesHTMLNodesFromNode(node) {
    var footnotesHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnotesHTMLNodesQuery, footnotesHTMLNodes);
    return footnotesHTMLNodes;
}
function footnoteLinkHTMLNodesFromNode(node) {
    var linkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, footnoteLinkHTMLNodesQuery, linkHTMLNodes);
    return linkHTMLNodes;
}
function nestedFootnoteLinkHTMLNodesFromNode(node) {
    var nestedFootnoteLinkHTMLNodes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    (0, _query.nodesFromNodeAndQuery)(node, nestedFootnoteLinkHTMLNodesQuery, nestedFootnoteLinkHTMLNodes);
    return nestedFootnoteLinkHTMLNodes;
}
var _default = {
    indexDirectiveHTMLNodeFromNode: indexDirectiveHTMLNodeFromNode,
    contentsDirectiveHTMLNodeFromNode: contentsDirectiveHTMLNodeFromNode,
    footnotesDirectiveHTMLNodeFromNode: footnotesDirectiveHTMLNodeFromNode,
    pageNumberDirectiveHTMLNodeFromNode: pageNumberDirectiveHTMLNodeFromNode,
    htmlNodesFromNode: htmlNodesFromNode,
    headingHTMLNodesFromNode: headingHTMLNodesFromNode,
    divisionHTMLNodesFromNode: divisionHTMLNodesFromNode,
    footnoteHTMLNodesFromNode: footnoteHTMLNodesFromNode,
    footnotesHTMLNodesFromNode: footnotesHTMLNodesFromNode,
    footnoteLinkHTMLNodesFromNode: footnoteLinkHTMLNodesFromNode,
    nestedFootnoteLinkHTMLNodesFromNode: nestedFootnoteLinkHTMLNodesFromNode
};

//# sourceMappingURL=data:application/json;base64,