"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    postprocess: function() {
        return postprocess;
    }
});
function postprocess(divisionMarkdownNode, context) {
    var divisionMarkdownNodes;
    divisionMarkdownNodes = resolveIncludes(divisionMarkdownNode, context);
    resolveEmbeddings(divisionMarkdownNodes, context);
    var footnoteMap = prepareFootnotes(divisionMarkdownNodes, context);
    // divisionMarkdownNodes = paginate(divisionMarkdownNodes, context);
    // createFootnotes(divisionMarkdownNodes, footnotesMap, context);
    // createContents(divisionMarkdownNodes, context);
    return divisionMarkdownNodes;
}
// function paginate(divisionMarkdownNodes, context) {
//   const paginatedDivisionMarkdownNodes = [];
//
//   Object.assign(context, {
//     paginatedDivisionMarkdownNodes
//   });
//
//   divisionMarkdownNodes.forEach((divisionMarkdownNode) => {
//     divisionMarkdownNode.paginate(context);
//   });
//
//   paginatedDivisionMarkdownNodes.forEach((paginatedDivisionMarkdownNode, index) => {
//     const pageNumber = index + 1;
//
//     paginatedDivisionMarkdownNode.setPageNumber(pageNumber);
//   })
//
//   divisionMarkdownNodes = paginatedDivisionMarkdownNodes; ///
//
//   delete context.paginatedDivisionMarkdownNodes;
//
//   return divisionMarkdownNodes;
// }
// function createContents(divisionMarkdownNodes, context) {
//   divisionMarkdownNodes.some((divisionMarkdownNode) => {
//     const contentsCreated = divisionMarkdownNode.createContents(divisionMarkdownNodes, context);
//
//     if (contentsCreated) {
//       return true;
//     }
//   });
// }
// function createFootnotes(divisionMarkdownNodes, context) {
//   divisionMarkdownNodes.forEach((divisionMarkdownNode) => {
//     divisionMarkdownNode.createFootnotes(context);
//   });
// }
function resolveIncludes(divisionMarkdownNode, context) {
    var divisionMarkdownNodes = [];
    Object.assign(context, {
        divisionMarkdownNodes: divisionMarkdownNodes
    });
    var divisionMarkdownNodeIgnored = divisionMarkdownNode.isIgnored();
    if (!divisionMarkdownNodeIgnored) {
        divisionMarkdownNodes.push(divisionMarkdownNode);
    }
    divisionMarkdownNode.resolveIncludes(context);
    delete context.divisionMarkdownNodes;
    return divisionMarkdownNodes;
}
function prepareFootnotes(divisionMarkdownNodes, context) {
    var footnoteMap = {};
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.prepareFootnotes(footnoteMap, context);
    });
    return footnoteMap;
}
function resolveEmbeddings(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.resolveEmbeddings(context);
    });
}
var _default = {
    postprocess: postprocess
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcHJvY2Vzc2luZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKGRpdmlzaW9uTWFya2Rvd25Ob2RlLCBjb250ZXh0KSB7XG4gIGxldCBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gcmVzb2x2ZUluY2x1ZGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlLCBjb250ZXh0KTtcblxuICByZXNvbHZlRW1iZWRkaW5ncyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIGNvbnN0IGZvb3Rub3RlTWFwID0gcHJlcGFyZUZvb3Rub3RlcyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIC8vIGRpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IHBhZ2luYXRlKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG5cbiAgLy8gY3JlYXRlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgZm9vdG5vdGVzTWFwLCBjb250ZXh0KTtcblxuICAvLyBjcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIHJldHVybiBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG59XG5cbi8vIGZ1bmN0aW9uIHBhZ2luYXRlKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuLy8gICBjb25zdCBwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBbXTtcbi8vXG4vLyAgIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuLy8gICAgIHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2Rlc1xuLy8gICB9KTtcbi8vXG4vLyAgIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuLy8gICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnBhZ2luYXRlKGNvbnRleHQpO1xuLy8gICB9KTtcbi8vXG4vLyAgIHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZSwgaW5kZXgpID0+IHtcbi8vICAgICBjb25zdCBwYWdlTnVtYmVyID0gaW5kZXggKyAxO1xuLy9cbi8vICAgICBwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZS5zZXRQYWdlTnVtYmVyKHBhZ2VOdW1iZXIpO1xuLy8gICB9KVxuLy9cbi8vICAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gcGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzOyAvLy9cbi8vXG4vLyAgIGRlbGV0ZSBjb250ZXh0LnBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2Rlcztcbi8vXG4vLyAgIHJldHVybiBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuLy8gICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuc29tZSgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbi8vICAgICBjb25zdCBjb250ZW50c0NyZWF0ZWQgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuLy9cbi8vICAgICBpZiAoY29udGVudHNDcmVhdGVkKSB7XG4vLyAgICAgICByZXR1cm4gdHJ1ZTtcbi8vICAgICB9XG4vLyAgIH0pO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBjcmVhdGVGb290bm90ZXMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4vLyAgIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuLy8gICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLmNyZWF0ZUZvb3Rub3Rlcyhjb250ZXh0KTtcbi8vICAgfSk7XG4vLyB9XG5cbmZ1bmN0aW9uIHJlc29sdmVJbmNsdWRlcyhkaXZpc2lvbk1hcmtkb3duTm9kZSwgY29udGV4dCkge1xuICBjb25zdCBkaXZpc2lvbk1hcmtkb3duTm9kZXMgPSBbXTtcblxuICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZXNcbiAgfSk7XG5cbiAgY29uc3QgZGl2aXNpb25NYXJrZG93bk5vZGVJZ25vcmVkID0gZGl2aXNpb25NYXJrZG93bk5vZGUuaXNJZ25vcmVkKCk7XG5cbiAgaWYgKCFkaXZpc2lvbk1hcmtkb3duTm9kZUlnbm9yZWQpIHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZXMucHVzaChkaXZpc2lvbk1hcmtkb3duTm9kZSk7XG4gIH1cblxuICBkaXZpc2lvbk1hcmtkb3duTm9kZS5yZXNvbHZlSW5jbHVkZXMoY29udGV4dCk7XG5cbiAgZGVsZXRlIGNvbnRleHQuZGl2aXNpb25NYXJrZG93bk5vZGVzO1xuXG4gIHJldHVybiBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG59XG5cbmZ1bmN0aW9uIHByZXBhcmVGb290bm90ZXMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4gIGNvbnN0IGZvb3Rub3RlTWFwID0ge307XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzLmZvckVhY2goKGRpdmlzaW9uTWFya2Rvd25Ob2RlKSA9PiB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGUucHJlcGFyZUZvb3Rub3Rlcyhmb290bm90ZU1hcCwgY29udGV4dCk7XG4gIH0pO1xuXG4gIHJldHVybiBmb290bm90ZU1hcDtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUVtYmVkZGluZ3MoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4gIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnJlc29sdmVFbWJlZGRpbmdzKGNvbnRleHQpO1xuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBwb3N0cHJvY2Vzc1xufTtcbiJdLCJuYW1lcyI6WyJwb3N0cHJvY2VzcyIsImRpdmlzaW9uTWFya2Rvd25Ob2RlIiwiY29udGV4dCIsImRpdmlzaW9uTWFya2Rvd25Ob2RlcyIsInJlc29sdmVJbmNsdWRlcyIsInJlc29sdmVFbWJlZGRpbmdzIiwiZm9vdG5vdGVNYXAiLCJwcmVwYXJlRm9vdG5vdGVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZGl2aXNpb25NYXJrZG93bk5vZGVJZ25vcmVkIiwiaXNJZ25vcmVkIiwicHVzaCIsImZvckVhY2giXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQWdHQSxPQUVFO2VBRkY7O0lBOUZnQkEsV0FBVztlQUFYQTs7O0FBQVQsU0FBU0EsWUFBWUMsb0JBQW9CLEVBQUVDLE9BQU87SUFDdkQsSUFBSUM7SUFFSkEsd0JBQXdCQyxnQkFBZ0JILHNCQUFzQkM7SUFFOURHLGtCQUFrQkYsdUJBQXVCRDtJQUV6QyxJQUFNSSxjQUFjQyxpQkFBaUJKLHVCQUF1QkQ7SUFFNUQsb0VBQW9FO0lBRXBFLGlFQUFpRTtJQUVqRSxrREFBa0Q7SUFFbEQsT0FBT0M7QUFDVDtBQUVBLHNEQUFzRDtBQUN0RCwrQ0FBK0M7QUFDL0MsRUFBRTtBQUNGLDZCQUE2QjtBQUM3QixxQ0FBcUM7QUFDckMsUUFBUTtBQUNSLEVBQUU7QUFDRiw4REFBOEQ7QUFDOUQsOENBQThDO0FBQzlDLFFBQVE7QUFDUixFQUFFO0FBQ0YsdUZBQXVGO0FBQ3ZGLG9DQUFvQztBQUNwQyxFQUFFO0FBQ0YsK0RBQStEO0FBQy9ELE9BQU87QUFDUCxFQUFFO0FBQ0YsZ0VBQWdFO0FBQ2hFLEVBQUU7QUFDRixtREFBbUQ7QUFDbkQsRUFBRTtBQUNGLGtDQUFrQztBQUNsQyxJQUFJO0FBRUosNERBQTREO0FBQzVELDJEQUEyRDtBQUMzRCxtR0FBbUc7QUFDbkcsRUFBRTtBQUNGLDZCQUE2QjtBQUM3QixxQkFBcUI7QUFDckIsUUFBUTtBQUNSLFFBQVE7QUFDUixJQUFJO0FBRUosNkRBQTZEO0FBQzdELDhEQUE4RDtBQUM5RCxxREFBcUQ7QUFDckQsUUFBUTtBQUNSLElBQUk7QUFFSixTQUFTQyxnQkFBZ0JILG9CQUFvQixFQUFFQyxPQUFPO0lBQ3BELElBQU1DLHdCQUF3QixFQUFFO0lBRWhDSyxPQUFPQyxNQUFNLENBQUNQLFNBQVM7UUFDckJDLHVCQUFBQTtJQUNGO0lBRUEsSUFBTU8sOEJBQThCVCxxQkFBcUJVLFNBQVM7SUFFbEUsSUFBSSxDQUFDRCw2QkFBNkI7UUFDaENQLHNCQUFzQlMsSUFBSSxDQUFDWDtJQUM3QjtJQUVBQSxxQkFBcUJHLGVBQWUsQ0FBQ0Y7SUFFckMsT0FBT0EsUUFBUUMscUJBQXFCO0lBRXBDLE9BQU9BO0FBQ1Q7QUFFQSxTQUFTSSxpQkFBaUJKLHFCQUFxQixFQUFFRCxPQUFPO0lBQ3RELElBQU1JLGNBQWMsQ0FBQztJQUVyQkgsc0JBQXNCVSxPQUFPLENBQUMsU0FBQ1o7UUFDN0JBLHFCQUFxQk0sZ0JBQWdCLENBQUNELGFBQWFKO0lBQ3JEO0lBRUEsT0FBT0k7QUFDVDtBQUVBLFNBQVNELGtCQUFrQkYscUJBQXFCLEVBQUVELE9BQU87SUFDdkRDLHNCQUFzQlUsT0FBTyxDQUFDLFNBQUNaO1FBQzdCQSxxQkFBcUJJLGlCQUFpQixDQUFDSDtJQUN6QztBQUNGO0lBRUEsV0FBZTtJQUNiRixhQUFBQTtBQUNGIn0=