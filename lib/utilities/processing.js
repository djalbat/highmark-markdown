"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    postprocess: function() {
        return postprocess;
    }
});
function postprocess(divisionMarkdownNode, context) {
    var divisionMarkdownNodes;
    divisionMarkdownNodes = resolveIncludes(divisionMarkdownNode, context);
    resolveEmbeddings(divisionMarkdownNodes, context);
    var footnoteReplacementMap = prepareFootnotes(divisionMarkdownNodes, context);
    divisionMarkdownNodes = paginate(divisionMarkdownNodes, context);
    createFootnotes(divisionMarkdownNodes, footnoteReplacementMap, context);
    createContents(divisionMarkdownNodes, context);
    createIndex(divisionMarkdownNodes, context);
    return divisionMarkdownNodes;
}
function paginate(divisionMarkdownNodes, context) {
    var paginatedDivisionMarkdownNodes = [];
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.paginate(paginatedDivisionMarkdownNodes, context);
    });
    paginatedDivisionMarkdownNodes.forEach(function(paginatedDivisionMarkdownNode, index) {
        var pageNumber = index + 1;
        paginatedDivisionMarkdownNode.setPageNumber(pageNumber);
    });
    divisionMarkdownNodes = paginatedDivisionMarkdownNodes; ///
    return divisionMarkdownNodes;
}
function createIndex(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var indexCreated = divisionMarkdownNode.createIndex(divisionMarkdownNodes, context);
        if (indexCreated) {
            return true;
        }
    });
}
function createContents(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.some(function(divisionMarkdownNode) {
        var contentsCreated = divisionMarkdownNode.createContents(divisionMarkdownNodes, context);
        if (contentsCreated) {
            return true;
        }
    });
}
function createFootnotes(divisionMarkdownNodes, footnoteReplacementMap, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.createFootnotes(footnoteReplacementMap, context);
    });
}
function resolveIncludes(divisionMarkdownNode, context) {
    var divisionMarkdownNodes = [];
    Object.assign(context, {
        divisionMarkdownNodes: divisionMarkdownNodes
    });
    var divisionMarkdownNodeIgnored = divisionMarkdownNode.isIgnored();
    if (!divisionMarkdownNodeIgnored) {
        divisionMarkdownNodes.push(divisionMarkdownNode);
    }
    divisionMarkdownNode.resolveIncludes(context);
    delete context.divisionMarkdownNodes;
    return divisionMarkdownNodes;
}
function prepareFootnotes(divisionMarkdownNodes, context) {
    var footnoteReplacementMap = {};
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.prepareFootnotes(footnoteReplacementMap, context);
    });
    return footnoteReplacementMap;
}
function resolveEmbeddings(divisionMarkdownNodes, context) {
    divisionMarkdownNodes.forEach(function(divisionMarkdownNode) {
        divisionMarkdownNode.resolveEmbeddings(context);
    });
}
var _default = {
    postprocess: postprocess
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcHJvY2Vzc2luZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rwcm9jZXNzKGRpdmlzaW9uTWFya2Rvd25Ob2RlLCBjb250ZXh0KSB7XG4gIGxldCBkaXZpc2lvbk1hcmtkb3duTm9kZXM7XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gcmVzb2x2ZUluY2x1ZGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlLCBjb250ZXh0KTtcblxuICByZXNvbHZlRW1iZWRkaW5ncyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIGNvbnN0IGZvb3Rub3RlUmVwbGFjZW1lbnRNYXAgPSBwcmVwYXJlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gcGFnaW5hdGUoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICBjcmVhdGVGb290bm90ZXMoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBmb290bm90ZVJlcGxhY2VtZW50TWFwLCBjb250ZXh0KTtcblxuICBjcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gIGNyZWF0ZUluZGV4KGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG5cbiAgcmV0dXJuIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcztcbn1cblxuZnVuY3Rpb24gcGFnaW5hdGUoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KSB7XG4gIGNvbnN0IHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlcyA9IFtdO1xuXG4gIGRpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChkaXZpc2lvbk1hcmtkb3duTm9kZSkgPT4ge1xuICAgIGRpdmlzaW9uTWFya2Rvd25Ob2RlLnBhZ2luYXRlKHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCk7XG4gIH0pO1xuXG4gIHBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2Rlcy5mb3JFYWNoKChwYWdpbmF0ZWREaXZpc2lvbk1hcmtkb3duTm9kZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBwYWdlTnVtYmVyID0gaW5kZXggKyAxO1xuXG4gICAgcGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGUuc2V0UGFnZU51bWJlcihwYWdlTnVtYmVyKTtcbiAgfSk7XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gcGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzOyAvLy9cblxuICByZXR1cm4gZGl2aXNpb25NYXJrZG93bk5vZGVzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbmRleChkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpIHtcbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzLnNvbWUoKGRpdmlzaW9uTWFya2Rvd25Ob2RlKSA9PiB7XG4gICAgY29uc3QgaW5kZXhDcmVhdGVkID0gZGl2aXNpb25NYXJrZG93bk5vZGUuY3JlYXRlSW5kZXgoZGl2aXNpb25NYXJrZG93bk5vZGVzLCBjb250ZXh0KTtcblxuICAgIGlmIChpbmRleENyZWF0ZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuc29tZSgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBjb25zdCBjb250ZW50c0NyZWF0ZWQgPSBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVDb250ZW50cyhkaXZpc2lvbk1hcmtkb3duTm9kZXMsIGNvbnRleHQpO1xuXG4gICAgaWYgKGNvbnRlbnRzQ3JlYXRlZCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5jcmVhdGVGb290bm90ZXMoZm9vdG5vdGVSZXBsYWNlbWVudE1hcCwgY29udGV4dCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZXNvbHZlSW5jbHVkZXMoZGl2aXNpb25NYXJrZG93bk5vZGUsIGNvbnRleHQpIHtcbiAgY29uc3QgZGl2aXNpb25NYXJrZG93bk5vZGVzID0gW107XG5cbiAgT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGVzXG4gIH0pO1xuXG4gIGNvbnN0IGRpdmlzaW9uTWFya2Rvd25Ob2RlSWdub3JlZCA9IGRpdmlzaW9uTWFya2Rvd25Ob2RlLmlzSWdub3JlZCgpO1xuXG4gIGlmICghZGl2aXNpb25NYXJrZG93bk5vZGVJZ25vcmVkKSB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGVzLnB1c2goZGl2aXNpb25NYXJrZG93bk5vZGUpO1xuICB9XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGUucmVzb2x2ZUluY2x1ZGVzKGNvbnRleHQpO1xuXG4gIGRlbGV0ZSBjb250ZXh0LmRpdmlzaW9uTWFya2Rvd25Ob2RlcztcblxuICByZXR1cm4gZGl2aXNpb25NYXJrZG93bk5vZGVzO1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlRm9vdG5vdGVzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBjb25zdCBmb290bm90ZVJlcGxhY2VtZW50TWFwID0ge307XG5cbiAgZGl2aXNpb25NYXJrZG93bk5vZGVzLmZvckVhY2goKGRpdmlzaW9uTWFya2Rvd25Ob2RlKSA9PiB7XG4gICAgZGl2aXNpb25NYXJrZG93bk5vZGUucHJlcGFyZUZvb3Rub3Rlcyhmb290bm90ZVJlcGxhY2VtZW50TWFwLCBjb250ZXh0KTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZvb3Rub3RlUmVwbGFjZW1lbnRNYXA7XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVFbWJlZGRpbmdzKGRpdmlzaW9uTWFya2Rvd25Ob2RlcywgY29udGV4dCkge1xuICBkaXZpc2lvbk1hcmtkb3duTm9kZXMuZm9yRWFjaCgoZGl2aXNpb25NYXJrZG93bk5vZGUpID0+IHtcbiAgICBkaXZpc2lvbk1hcmtkb3duTm9kZS5yZXNvbHZlRW1iZWRkaW5ncyhjb250ZXh0KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcG9zdHByb2Nlc3Ncbn07XG4iXSwibmFtZXMiOlsicG9zdHByb2Nlc3MiLCJkaXZpc2lvbk1hcmtkb3duTm9kZSIsImNvbnRleHQiLCJkaXZpc2lvbk1hcmtkb3duTm9kZXMiLCJyZXNvbHZlSW5jbHVkZXMiLCJyZXNvbHZlRW1iZWRkaW5ncyIsImZvb3Rub3RlUmVwbGFjZW1lbnRNYXAiLCJwcmVwYXJlRm9vdG5vdGVzIiwicGFnaW5hdGUiLCJjcmVhdGVGb290bm90ZXMiLCJjcmVhdGVDb250ZW50cyIsImNyZWF0ZUluZGV4IiwicGFnaW5hdGVkRGl2aXNpb25NYXJrZG93bk5vZGVzIiwiZm9yRWFjaCIsInBhZ2luYXRlZERpdmlzaW9uTWFya2Rvd25Ob2RlIiwiaW5kZXgiLCJwYWdlTnVtYmVyIiwic2V0UGFnZU51bWJlciIsInNvbWUiLCJpbmRleENyZWF0ZWQiLCJjb250ZW50c0NyZWF0ZWQiLCJPYmplY3QiLCJhc3NpZ24iLCJkaXZpc2lvbk1hcmtkb3duTm9kZUlnbm9yZWQiLCJpc0lnbm9yZWQiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFzR0EsT0FFRTtlQUZGOztJQXBHZ0JBLFdBQVc7ZUFBWEE7OztBQUFULFNBQVNBLFlBQVlDLG9CQUFvQixFQUFFQyxPQUFPO0lBQ3ZELElBQUlDO0lBRUpBLHdCQUF3QkMsZ0JBQWdCSCxzQkFBc0JDO0lBRTlERyxrQkFBa0JGLHVCQUF1QkQ7SUFFekMsSUFBTUkseUJBQXlCQyxpQkFBaUJKLHVCQUF1QkQ7SUFFdkVDLHdCQUF3QkssU0FBU0wsdUJBQXVCRDtJQUV4RE8sZ0JBQWdCTix1QkFBdUJHLHdCQUF3Qko7SUFFL0RRLGVBQWVQLHVCQUF1QkQ7SUFFdENTLFlBQVlSLHVCQUF1QkQ7SUFFbkMsT0FBT0M7QUFDVDtBQUVBLFNBQVNLLFNBQVNMLHFCQUFxQixFQUFFRCxPQUFPO0lBQzlDLElBQU1VLGlDQUFpQyxFQUFFO0lBRXpDVCxzQkFBc0JVLE9BQU8sQ0FBQyxTQUFDWjtRQUM3QkEscUJBQXFCTyxRQUFRLENBQUNJLGdDQUFnQ1Y7SUFDaEU7SUFFQVUsK0JBQStCQyxPQUFPLENBQUMsU0FBQ0MsK0JBQStCQztRQUNyRSxJQUFNQyxhQUFhRCxRQUFRO1FBRTNCRCw4QkFBOEJHLGFBQWEsQ0FBQ0Q7SUFDOUM7SUFFQWIsd0JBQXdCUyxnQ0FBZ0MsR0FBRztJQUUzRCxPQUFPVDtBQUNUO0FBRUEsU0FBU1EsWUFBWVIscUJBQXFCLEVBQUVELE9BQU87SUFDakRDLHNCQUFzQmUsSUFBSSxDQUFDLFNBQUNqQjtRQUMxQixJQUFNa0IsZUFBZWxCLHFCQUFxQlUsV0FBVyxDQUFDUix1QkFBdUJEO1FBRTdFLElBQUlpQixjQUFjO1lBQ2hCLE9BQU87UUFDVDtJQUNGO0FBQ0Y7QUFFQSxTQUFTVCxlQUFlUCxxQkFBcUIsRUFBRUQsT0FBTztJQUNwREMsc0JBQXNCZSxJQUFJLENBQUMsU0FBQ2pCO1FBQzFCLElBQU1tQixrQkFBa0JuQixxQkFBcUJTLGNBQWMsQ0FBQ1AsdUJBQXVCRDtRQUVuRixJQUFJa0IsaUJBQWlCO1lBQ25CLE9BQU87UUFDVDtJQUNGO0FBQ0Y7QUFFQSxTQUFTWCxnQkFBZ0JOLHFCQUFxQixFQUFFRyxzQkFBc0IsRUFBRUosT0FBTztJQUM3RUMsc0JBQXNCVSxPQUFPLENBQUMsU0FBQ1o7UUFDN0JBLHFCQUFxQlEsZUFBZSxDQUFDSCx3QkFBd0JKO0lBQy9EO0FBQ0Y7QUFFQSxTQUFTRSxnQkFBZ0JILG9CQUFvQixFQUFFQyxPQUFPO0lBQ3BELElBQU1DLHdCQUF3QixFQUFFO0lBRWhDa0IsT0FBT0MsTUFBTSxDQUFDcEIsU0FBUztRQUNyQkMsdUJBQUFBO0lBQ0Y7SUFFQSxJQUFNb0IsOEJBQThCdEIscUJBQXFCdUIsU0FBUztJQUVsRSxJQUFJLENBQUNELDZCQUE2QjtRQUNoQ3BCLHNCQUFzQnNCLElBQUksQ0FBQ3hCO0lBQzdCO0lBRUFBLHFCQUFxQkcsZUFBZSxDQUFDRjtJQUVyQyxPQUFPQSxRQUFRQyxxQkFBcUI7SUFFcEMsT0FBT0E7QUFDVDtBQUVBLFNBQVNJLGlCQUFpQkoscUJBQXFCLEVBQUVELE9BQU87SUFDdEQsSUFBTUkseUJBQXlCLENBQUM7SUFFaENILHNCQUFzQlUsT0FBTyxDQUFDLFNBQUNaO1FBQzdCQSxxQkFBcUJNLGdCQUFnQixDQUFDRCx3QkFBd0JKO0lBQ2hFO0lBRUEsT0FBT0k7QUFDVDtBQUVBLFNBQVNELGtCQUFrQkYscUJBQXFCLEVBQUVELE9BQU87SUFDdkRDLHNCQUFzQlUsT0FBTyxDQUFDLFNBQUNaO1FBQzdCQSxxQkFBcUJJLGlCQUFpQixDQUFDSDtJQUN6QztBQUNGO0lBRUEsV0FBZTtJQUNiRixhQUFBQTtBQUNGIn0=