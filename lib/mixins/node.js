"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function addChildNode(childNode) {
    var childNodes = this.getChildNodes();
    childNodes.push(childNode);
}
function removeChildNode(childNode) {
    var childNodes = this.getChildNodes(), index = childNodes.indexOf(childNode), start = index, deleteCount = 1;
    childNodes.splice(start, deleteCount);
}
function replaceChildNode(replacedChildNode, replacementChildNode) {
    var childNodes = this.getChildNodes(), index = childNodes.indexOf(replacedChildNode), start = index, deleteCount = 1;
    childNodes.splice(start, deleteCount, replacementChildNode);
}
function getDescendantNodes() {
    var descendantNodes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    var descendantNode = this; ///
    descendantNodes.push(descendantNode);
    var childNodes = this.getChildNodes();
    childNodes.forEach(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
            var nonTerminalNode = childNode; ///
            nonTerminalNode.getDescendantNodes(descendantNodes);
        }
    });
    return descendantNodes;
}
var nodeMixins = {
    addChildNode: addChildNode,
    removeChildNode: removeChildNode,
    replaceChildNode: replaceChildNode,
    getDescendantNodes: getDescendantNodes
};
var _default = nodeMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvbm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gYWRkQ2hpbGROb2RlKGNoaWxkTm9kZSkge1xuICBjb25zdCBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCk7XG5cbiAgY2hpbGROb2Rlcy5wdXNoKGNoaWxkTm9kZSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNoaWxkTm9kZShjaGlsZE5vZGUpIHtcbiAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuZ2V0Q2hpbGROb2RlcygpLFxuICAgICAgICBpbmRleCA9IGNoaWxkTm9kZXMuaW5kZXhPZihjaGlsZE5vZGUpLFxuICAgICAgICBzdGFydCA9IGluZGV4LCAgLy8vXG4gICAgICAgIGRlbGV0ZUNvdW50ID0gMTtcblxuICBjaGlsZE5vZGVzLnNwbGljZShzdGFydCwgZGVsZXRlQ291bnQpO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlQ2hpbGROb2RlKHJlcGxhY2VkQ2hpbGROb2RlLCByZXBsYWNlbWVudENoaWxkTm9kZSkge1xuICBjb25zdCBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCksXG4gICAgICAgIGluZGV4ID0gY2hpbGROb2Rlcy5pbmRleE9mKHJlcGxhY2VkQ2hpbGROb2RlKSxcbiAgICAgICAgc3RhcnQgPSBpbmRleCwgIC8vL1xuICAgICAgICBkZWxldGVDb3VudCA9IDE7XG5cbiAgY2hpbGROb2Rlcy5zcGxpY2Uoc3RhcnQsIGRlbGV0ZUNvdW50LCByZXBsYWNlbWVudENoaWxkTm9kZSk7XG59XG5cbmZ1bmN0aW9uIGdldERlc2NlbmRhbnROb2RlcyhkZXNjZW5kYW50Tm9kZXMgPSBbXSkge1xuICBjb25zdCBkZXNjZW5kYW50Tm9kZSA9IHRoaXM7IC8vL1xuXG4gIGRlc2NlbmRhbnROb2Rlcy5wdXNoKGRlc2NlbmRhbnROb2RlKTtcblxuICBjb25zdCBjaGlsZE5vZGVzID0gdGhpcy5nZXRDaGlsZE5vZGVzKCk7XG5cbiAgY2hpbGROb2Rlcy5mb3JFYWNoKChjaGlsZE5vZGUpID0+IHtcbiAgICBjb25zdCBjaGlsZE5vZGVOb25UZXJtaW5hbE5vZGUgPSBjaGlsZE5vZGUuaXNOb25UZXJtaW5hbE5vZGUoKTtcblxuICAgIGlmIChjaGlsZE5vZGVOb25UZXJtaW5hbE5vZGUpIHtcbiAgICAgIGNvbnN0IG5vblRlcm1pbmFsTm9kZSA9IGNoaWxkTm9kZTsgIC8vL1xuXG4gICAgICBub25UZXJtaW5hbE5vZGUuZ2V0RGVzY2VuZGFudE5vZGVzKGRlc2NlbmRhbnROb2Rlcyk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZGVzY2VuZGFudE5vZGVzO1xufVxuXG5jb25zdCBub2RlTWl4aW5zID0ge1xuICBhZGRDaGlsZE5vZGUsXG4gIHJlbW92ZUNoaWxkTm9kZSxcbiAgcmVwbGFjZUNoaWxkTm9kZSxcbiAgZ2V0RGVzY2VuZGFudE5vZGVzXG59O1xuXG5leHBvcnQgZGVmYXVsdCBub2RlTWl4aW5zO1xuIl0sIm5hbWVzIjpbImFkZENoaWxkTm9kZSIsImNoaWxkTm9kZSIsImNoaWxkTm9kZXMiLCJnZXRDaGlsZE5vZGVzIiwicHVzaCIsInJlbW92ZUNoaWxkTm9kZSIsImluZGV4IiwiaW5kZXhPZiIsInN0YXJ0IiwiZGVsZXRlQ291bnQiLCJzcGxpY2UiLCJyZXBsYWNlQ2hpbGROb2RlIiwicmVwbGFjZWRDaGlsZE5vZGUiLCJyZXBsYWNlbWVudENoaWxkTm9kZSIsImdldERlc2NlbmRhbnROb2RlcyIsImRlc2NlbmRhbnROb2RlcyIsImRlc2NlbmRhbnROb2RlIiwiZm9yRWFjaCIsImNoaWxkTm9kZU5vblRlcm1pbmFsTm9kZSIsImlzTm9uVGVybWluYWxOb2RlIiwibm9uVGVybWluYWxOb2RlIiwibm9kZU1peGlucyJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBOzs7OytCQXFEQTs7O2VBQUE7OztBQW5EQSxTQUFTQSxhQUFhQyxTQUFTO0lBQzdCLElBQU1DLGFBQWEsSUFBSSxDQUFDQyxhQUFhO0lBRXJDRCxXQUFXRSxJQUFJLENBQUNIO0FBQ2xCO0FBRUEsU0FBU0ksZ0JBQWdCSixTQUFTO0lBQ2hDLElBQU1DLGFBQWEsSUFBSSxDQUFDQyxhQUFhLElBQy9CRyxRQUFRSixXQUFXSyxPQUFPLENBQUNOLFlBQzNCTyxRQUFRRixPQUNSRyxjQUFjO0lBRXBCUCxXQUFXUSxNQUFNLENBQUNGLE9BQU9DO0FBQzNCO0FBRUEsU0FBU0UsaUJBQWlCQyxpQkFBaUIsRUFBRUMsb0JBQW9CO0lBQy9ELElBQU1YLGFBQWEsSUFBSSxDQUFDQyxhQUFhLElBQy9CRyxRQUFRSixXQUFXSyxPQUFPLENBQUNLLG9CQUMzQkosUUFBUUYsT0FDUkcsY0FBYztJQUVwQlAsV0FBV1EsTUFBTSxDQUFDRixPQUFPQyxhQUFhSTtBQUN4QztBQUVBLFNBQVNDO1FBQW1CQyxrQkFBQUEsaUVBQWtCLEVBQUU7SUFDOUMsSUFBTUMsaUJBQWlCLElBQUksRUFBRSxHQUFHO0lBRWhDRCxnQkFBZ0JYLElBQUksQ0FBQ1k7SUFFckIsSUFBTWQsYUFBYSxJQUFJLENBQUNDLGFBQWE7SUFFckNELFdBQVdlLE9BQU8sQ0FBQyxTQUFDaEI7UUFDbEIsSUFBTWlCLDJCQUEyQmpCLFVBQVVrQixpQkFBaUI7UUFFNUQsSUFBSUQsMEJBQTBCO1lBQzVCLElBQU1FLGtCQUFrQm5CLFdBQVksR0FBRztZQUV2Q21CLGdCQUFnQk4sa0JBQWtCLENBQUNDO1FBQ3JDO0lBQ0Y7SUFFQSxPQUFPQTtBQUNUO0FBRUEsSUFBTU0sYUFBYTtJQUNqQnJCLGNBQUFBO0lBQ0FLLGlCQUFBQTtJQUNBTSxrQkFBQUE7SUFDQUcsb0JBQUFBO0FBQ0Y7SUFFQSxXQUFlTyJ9