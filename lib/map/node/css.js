"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    forEachCSSNode: function() {
        return forEachCSSNode;
    }
});
var _name = /*#__PURE__*/ _interop_require_default(require("../../node/css/name"));
var _value = /*#__PURE__*/ _interop_require_default(require("../../node/css/value"));
var _class = /*#__PURE__*/ _interop_require_default(require("../../node/css/class"));
var _error = /*#__PURE__*/ _interop_require_default(require("../../node/css/error"));
var _values = /*#__PURE__*/ _interop_require_default(require("../../node/css/values"));
var _topmost = /*#__PURE__*/ _interop_require_default(require("../../node/css/topmost"));
var _ruleSet = /*#__PURE__*/ _interop_require_default(require("../../node/css/ruleSet"));
var _nonsense = /*#__PURE__*/ _interop_require_default(require("../../node/css/nonsense"));
var _argument = /*#__PURE__*/ _interop_require_default(require("../../node/css/argument"));
var _selector = /*#__PURE__*/ _interop_require_default(require("../../node/css/selector"));
var _selectors = /*#__PURE__*/ _interop_require_default(require("../../node/css/selectors"));
var _arguments = /*#__PURE__*/ _interop_require_default(require("../../node/css/arguments"));
var _identifier = /*#__PURE__*/ _interop_require_default(require("../../node/css/identifier"));
var _declaration = /*#__PURE__*/ _interop_require_default(require("../../node/css/declaration"));
var _pseudoClass = /*#__PURE__*/ _interop_require_default(require("../../node/css/pseudoClass"));
var _selectorsList = /*#__PURE__*/ _interop_require_default(require("../../node/css/selectorsList"));
var _markdownStyle = require("../../ruleNames/markdownStyle");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _obj;
var cssNodeMap = (_obj = {}, _define_property(_obj, _markdownStyle.CSS_MARKDOWN_STYLE_RULE_NAME, _topmost.default), _define_property(_obj, _markdownStyle.NAME_MARKDOWN_STYLE_RULE_NAME, _name.default), _define_property(_obj, _markdownStyle.VALUE_MARKDOWN_STYLE_RULE_NAME, _value.default), _define_property(_obj, _markdownStyle.CLASS_MARKDOWN_STYLE_RULE_NAME, _class.default), _define_property(_obj, _markdownStyle.ERROR_MARKDOWN_STYLE_RULE_NAME, _error.default), _define_property(_obj, _markdownStyle.VALUES_MARKDOWN_STYLE_RULE_NAME, _values.default), _define_property(_obj, _markdownStyle.RULE_SET_MARKDOWN_STYLE_RULE_NAME, _ruleSet.default), _define_property(_obj, _markdownStyle.NONSENSE_MARKDOWN_STYLE_RULE_NAME, _nonsense.default), _define_property(_obj, _markdownStyle.ARGUMENT_MARKDOWN_STYLE_RULE_NAME, _argument.default), _define_property(_obj, _markdownStyle.SELECTOR_MARKDOWN_STYLE_RULE_NAME, _selector.default), _define_property(_obj, _markdownStyle.SELECTORS_MARKDOWN_STYLE_RULE_NAME, _selectors.default), _define_property(_obj, _markdownStyle.ARGUMENTS_MARKDOWN_STYLE_RULE_NAME, _arguments.default), _define_property(_obj, _markdownStyle.IDENTIFIER_MARKDOWN_STYLE_RULE_NAME, _identifier.default), _define_property(_obj, _markdownStyle.DECLARATION_MARKDOWN_STYLE_RULE_NAME, _declaration.default), _define_property(_obj, _markdownStyle.PSEUDO_CLASS_MARKDOWN_STYLE_RULE_NAME, _pseudoClass.default), _define_property(_obj, _markdownStyle.SELECTORS_LIST_MARKDOWN_STYLE_RULE_NAME, _selectorsList.default), _obj);
function forEachCSSNode(callback) {
    var ruleNames = Object.keys(cssNodeMap);
    ruleNames.forEach(function(ruleName) {
        var CSSNode = cssNodeMap[ruleName], Class = CSSNode;
        callback(Class, ruleName);
    });
}
var _default = cssNodeMap;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYXAvbm9kZS9jc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBOYW1lQ1NTTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9jc3MvbmFtZVwiO1xuaW1wb3J0IFZhbHVlQ1NTTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9jc3MvdmFsdWVcIjtcbmltcG9ydCBDbGFzc0NTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL2NsYXNzXCI7XG5pbXBvcnQgRXJyb3JDU1NOb2RlIGZyb20gXCIuLi8uLi9ub2RlL2Nzcy9lcnJvclwiO1xuaW1wb3J0IFZhbHVlc0NTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL3ZhbHVlc1wiO1xuaW1wb3J0IFRvcG1vc3RDU1NOb2RlIGZyb20gXCIuLi8uLi9ub2RlL2Nzcy90b3Btb3N0XCI7XG5pbXBvcnQgUnVsZVNldENTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL3J1bGVTZXRcIjtcbmltcG9ydCBOb25zZW5zZUNTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL25vbnNlbnNlXCI7XG5pbXBvcnQgQXJndW1lbnRDU1NOb2RlIGZyb20gXCIuLi8uLi9ub2RlL2Nzcy9hcmd1bWVudFwiO1xuaW1wb3J0IFNlbGVjdG9yQ1NTTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9jc3Mvc2VsZWN0b3JcIjtcbmltcG9ydCBTZWxlY3RvcnNDU1NOb2RlIGZyb20gXCIuLi8uLi9ub2RlL2Nzcy9zZWxlY3RvcnNcIjtcbmltcG9ydCBBcmd1bWVudHNDU1NOb2RlIGZyb20gXCIuLi8uLi9ub2RlL2Nzcy9hcmd1bWVudHNcIjtcbmltcG9ydCBJZGVudGlmaWVyQ1NTTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9jc3MvaWRlbnRpZmllclwiO1xuaW1wb3J0IERlY2xhcmF0aW9uQ1NTTm9kZSBmcm9tIFwiLi4vLi4vbm9kZS9jc3MvZGVjbGFyYXRpb25cIjtcbmltcG9ydCBQc2V1ZG9DbGFzc0NTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL3BzZXVkb0NsYXNzXCI7XG5pbXBvcnQgU2VsZWN0b3JzTGlzdENTU05vZGUgZnJvbSBcIi4uLy4uL25vZGUvY3NzL3NlbGVjdG9yc0xpc3RcIjtcblxuaW1wb3J0IHsgQ1NTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIE5BTUVfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgVkFMVUVfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgQ0xBU1NfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgRVJST1JfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgVkFMVUVTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIFJVTEVfU0VUX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIE5PTlNFTlNFX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIEFSR1VNRU5UX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIFNFTEVDVE9SX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSxcbiAgICAgICAgIFNFTEVDVE9SU19NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUUsXG4gICAgICAgICBBUkdVTUVOVFNfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgSURFTlRJRklFUl9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUUsXG4gICAgICAgICBERUNMQVJBVElPTl9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUUsXG4gICAgICAgICBQU0VVRE9fQ0xBU1NfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FLFxuICAgICAgICAgU0VMRUNUT1JTX0xJU1RfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIH0gZnJvbSBcIi4uLy4uL3J1bGVOYW1lcy9tYXJrZG93blN0eWxlXCI7XG5cbmNvbnN0IGNzc05vZGVNYXAgPSB7XG4gIFtDU1NfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FXTogVG9wbW9zdENTU05vZGUsIC8vL1xuICBbTkFNRV9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBOYW1lQ1NTTm9kZSxcbiAgW1ZBTFVFX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRV06IFZhbHVlQ1NTTm9kZSxcbiAgW0NMQVNTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRV06IENsYXNzQ1NTTm9kZSxcbiAgW0VSUk9SX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRV06IEVycm9yQ1NTTm9kZSxcbiAgW1ZBTFVFU19NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBWYWx1ZXNDU1NOb2RlLFxuICBbUlVMRV9TRVRfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FXTogUnVsZVNldENTU05vZGUsXG4gIFtOT05TRU5TRV9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBOb25zZW5zZUNTU05vZGUsXG4gIFtBUkdVTUVOVF9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBBcmd1bWVudENTU05vZGUsXG4gIFtTRUxFQ1RPUl9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBTZWxlY3RvckNTU05vZGUsXG4gIFtTRUxFQ1RPUlNfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FXTogU2VsZWN0b3JzQ1NTTm9kZSxcbiAgW0FSR1VNRU5UU19NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBBcmd1bWVudHNDU1NOb2RlLFxuICBbSURFTlRJRklFUl9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBJZGVudGlmaWVyQ1NTTm9kZSxcbiAgW0RFQ0xBUkFUSU9OX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRV06IERlY2xhcmF0aW9uQ1NTTm9kZSxcbiAgW1BTRVVET19DTEFTU19NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBQc2V1ZG9DbGFzc0NTU05vZGUsXG4gIFtTRUxFQ1RPUlNfTElTVF9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUVdOiBTZWxlY3RvcnNMaXN0Q1NTTm9kZVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2hDU1NOb2RlKGNhbGxiYWNrKSB7XG4gIGNvbnN0IHJ1bGVOYW1lcyA9IE9iamVjdC5rZXlzKGNzc05vZGVNYXApO1xuXG4gIHJ1bGVOYW1lcy5mb3JFYWNoKChydWxlTmFtZSkgPT4ge1xuICAgIGNvbnN0IENTU05vZGUgPSBjc3NOb2RlTWFwW3J1bGVOYW1lXSxcbiAgICAgICAgICBDbGFzcyA9IENTU05vZGU7XG5cbiAgICBjYWxsYmFjayhDbGFzcywgcnVsZU5hbWUpO1xuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3NzTm9kZU1hcDtcbiJdLCJuYW1lcyI6WyJmb3JFYWNoQ1NTTm9kZSIsImNzc05vZGVNYXAiLCJDU1NfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIiwiVG9wbW9zdENTU05vZGUiLCJOQU1FX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIk5hbWVDU1NOb2RlIiwiVkFMVUVfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIiwiVmFsdWVDU1NOb2RlIiwiQ0xBU1NfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIiwiQ2xhc3NDU1NOb2RlIiwiRVJST1JfTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIiwiRXJyb3JDU1NOb2RlIiwiVkFMVUVTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIlZhbHVlc0NTU05vZGUiLCJSVUxFX1NFVF9NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUUiLCJSdWxlU2V0Q1NTTm9kZSIsIk5PTlNFTlNFX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIk5vbnNlbnNlQ1NTTm9kZSIsIkFSR1VNRU5UX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIkFyZ3VtZW50Q1NTTm9kZSIsIlNFTEVDVE9SX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIlNlbGVjdG9yQ1NTTm9kZSIsIlNFTEVDVE9SU19NQVJLRE9XTl9TVFlMRV9SVUxFX05BTUUiLCJTZWxlY3RvcnNDU1NOb2RlIiwiQVJHVU1FTlRTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIkFyZ3VtZW50c0NTU05vZGUiLCJJREVOVElGSUVSX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIklkZW50aWZpZXJDU1NOb2RlIiwiREVDTEFSQVRJT05fTUFSS0RPV05fU1RZTEVfUlVMRV9OQU1FIiwiRGVjbGFyYXRpb25DU1NOb2RlIiwiUFNFVURPX0NMQVNTX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIlBzZXVkb0NsYXNzQ1NTTm9kZSIsIlNFTEVDVE9SU19MSVNUX01BUktET1dOX1NUWUxFX1JVTEVfTkFNRSIsIlNlbGVjdG9yc0xpc3RDU1NOb2RlIiwiY2FsbGJhY2siLCJydWxlTmFtZXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsInJ1bGVOYW1lIiwiQ1NTTm9kZSIsIkNsYXNzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFrRUEsT0FBMEI7ZUFBMUI7O0lBWGdCQSxjQUFjO2VBQWRBOzs7MkRBckRROzREQUNDOzREQUNBOzREQUNBOzZEQUNDOzhEQUNDOzhEQUNBOytEQUNDOytEQUNBOytEQUNBO2dFQUNDO2dFQUNBO2lFQUNDO2tFQUNDO2tFQUNBO29FQUNFOzZCQWlCdUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFckM7QUFBbkIsSUFBTUMsY0FBYSxXQUNqQixpQkFEaUIsTUFDaEJDLDJDQUE0QixFQUFHQyxnQkFBYyxHQUM5QyxpQkFGaUIsTUFFaEJDLDRDQUE2QixFQUFHQyxhQUFXLEdBQzVDLGlCQUhpQixNQUdoQkMsNkNBQThCLEVBQUdDLGNBQVksR0FDOUMsaUJBSmlCLE1BSWhCQyw2Q0FBOEIsRUFBR0MsY0FBWSxHQUM5QyxpQkFMaUIsTUFLaEJDLDZDQUE4QixFQUFHQyxjQUFZLEdBQzlDLGlCQU5pQixNQU1oQkMsOENBQStCLEVBQUdDLGVBQWEsR0FDaEQsaUJBUGlCLE1BT2hCQyxnREFBaUMsRUFBR0MsZ0JBQWMsR0FDbkQsaUJBUmlCLE1BUWhCQyxnREFBaUMsRUFBR0MsaUJBQWUsR0FDcEQsaUJBVGlCLE1BU2hCQyxnREFBaUMsRUFBR0MsaUJBQWUsR0FDcEQsaUJBVmlCLE1BVWhCQyxnREFBaUMsRUFBR0MsaUJBQWUsR0FDcEQsaUJBWGlCLE1BV2hCQyxpREFBa0MsRUFBR0Msa0JBQWdCLEdBQ3RELGlCQVppQixNQVloQkMsaURBQWtDLEVBQUdDLGtCQUFnQixHQUN0RCxpQkFiaUIsTUFhaEJDLGtEQUFtQyxFQUFHQyxtQkFBaUIsR0FDeEQsaUJBZGlCLE1BY2hCQyxtREFBb0MsRUFBR0Msb0JBQWtCLEdBQzFELGlCQWZpQixNQWVoQkMsb0RBQXFDLEVBQUdDLG9CQUFrQixHQUMzRCxpQkFoQmlCLE1BZ0JoQkMsc0RBQXVDLEVBQUdDLHNCQUFvQixHQWhCOUM7QUFtQlosU0FBU2pDLGVBQWVrQyxRQUFRO0lBQ3JDLElBQU1DLFlBQVlDLE9BQU9DLElBQUksQ0FBQ3BDO0lBRTlCa0MsVUFBVUcsT0FBTyxDQUFDLFNBQUNDO1FBQ2pCLElBQU1DLFVBQVV2QyxVQUFVLENBQUNzQyxTQUFTLEVBQzlCRSxRQUFRRDtRQUVkTixTQUFTTyxPQUFPRjtJQUNsQjtBQUNGO0lBRUEsV0FBZXRDIn0=