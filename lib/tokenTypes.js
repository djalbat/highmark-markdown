"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    BACKTICKS_TOKEN_TYPE: function() {
        return BACKTICKS_TOKEN_TYPE;
    },
    BACKTICK_TOKEN_TYPE: function() {
        return BACKTICK_TOKEN_TYPE;
    },
    DOMAIN_TOKEN_TYPE: function() {
        return DOMAIN_TOKEN_TYPE;
    },
    DOUBLE_ASTERISK_TOKEN_TYPE: function() {
        return DOUBLE_ASTERISK_TOKEN_TYPE;
    },
    DOUBLE_HASH_TOKEN_TYPE: function() {
        return DOUBLE_HASH_TOKEN_TYPE;
    },
    ESCAPED_TOKEN_TYPE: function() {
        return ESCAPED_TOKEN_TYPE;
    },
    FEW_DASHES_TOKEN_TYPE: function() {
        return FEW_DASHES_TOKEN_TYPE;
    },
    IDENTIFIER_TOKEN_TYPE: function() {
        return IDENTIFIER_TOKEN_TYPE;
    },
    MANY_DASHES_TOKEN_TYPE: function() {
        return MANY_DASHES_TOKEN_TYPE;
    },
    NUMBER_TOKEN_TYPE: function() {
        return NUMBER_TOKEN_TYPE;
    },
    PATH_TOKEN_TYPE: function() {
        return PATH_TOKEN_TYPE;
    },
    QUADRUPLE_HASH_TOKEN_TYPE: function() {
        return QUADRUPLE_HASH_TOKEN_TYPE;
    },
    SCHEME_TOKEN_TYPE: function() {
        return SCHEME_TOKEN_TYPE;
    },
    SINGLE_ASTERISK_TOKEN_TYPE: function() {
        return SINGLE_ASTERISK_TOKEN_TYPE;
    },
    SINGLE_DASH_TOKEN_TYPE: function() {
        return SINGLE_DASH_TOKEN_TYPE;
    },
    SINGLE_HASH_TOKEN_TYPE: function() {
        return SINGLE_HASH_TOKEN_TYPE;
    },
    SPECIAL_TOKEN_TYPE: function() {
        return SPECIAL_TOKEN_TYPE;
    },
    TRIPLE_ASTERISK_TOKEN_TYPE: function() {
        return TRIPLE_ASTERISK_TOKEN_TYPE;
    },
    TRIPLE_HASH_TOKEN_TYPE: function() {
        return TRIPLE_HASH_TOKEN_TYPE;
    },
    UNASSIGNED_TOKEN_TYPE: function() {
        return UNASSIGNED_TOKEN_TYPE;
    },
    VERTICAL_BAR_TOKEN_TYPE: function() {
        return VERTICAL_BAR_TOKEN_TYPE;
    },
    WORD_TOKEN_TYPE: function() {
        return WORD_TOKEN_TYPE;
    },
    default: function() {
        return _default;
    }
});
var WORD_TOKEN_TYPE = "word";
var PATH_TOKEN_TYPE = "path";
var DOMAIN_TOKEN_TYPE = "domain";
var SCHEME_TOKEN_TYPE = "scheme";
var NUMBER_TOKEN_TYPE = "number";
var SPECIAL_TOKEN_TYPE = "special";
var ESCAPED_TOKEN_TYPE = "escaped";
var BACKTICK_TOKEN_TYPE = "backtick";
var BACKTICKS_TOKEN_TYPE = "backticks";
var IDENTIFIER_TOKEN_TYPE = "identifier";
var UNASSIGNED_TOKEN_TYPE = "unassigned";
var FEW_DASHES_TOKEN_TYPE = "few-dashes";
var MANY_DASHES_TOKEN_TYPE = "many-dashes";
var SINGLE_DASH_TOKEN_TYPE = "single-dash";
var SINGLE_HASH_TOKEN_TYPE = "single-hash";
var DOUBLE_HASH_TOKEN_TYPE = "double-hash";
var TRIPLE_HASH_TOKEN_TYPE = "triple-hash";
var VERTICAL_BAR_TOKEN_TYPE = "vertical-bar";
var QUADRUPLE_HASH_TOKEN_TYPE = "quadruple-hash";
var SINGLE_ASTERISK_TOKEN_TYPE = "single-asterisk";
var DOUBLE_ASTERISK_TOKEN_TYPE = "double-asterisk";
var TRIPLE_ASTERISK_TOKEN_TYPE = "triple-asterisk";
var tokenTypes = {
    WORD_TOKEN_TYPE: WORD_TOKEN_TYPE,
    PATH_TOKEN_TYPE: PATH_TOKEN_TYPE,
    DOMAIN_TOKEN_TYPE: DOMAIN_TOKEN_TYPE,
    SCHEME_TOKEN_TYPE: SCHEME_TOKEN_TYPE,
    NUMBER_TOKEN_TYPE: NUMBER_TOKEN_TYPE,
    SPECIAL_TOKEN_TYPE: SPECIAL_TOKEN_TYPE,
    ESCAPED_TOKEN_TYPE: ESCAPED_TOKEN_TYPE,
    BACKTICK_TOKEN_TYPE: BACKTICK_TOKEN_TYPE,
    BACKTICKS_TOKEN_TYPE: BACKTICKS_TOKEN_TYPE,
    IDENTIFIER_TOKEN_TYPE: IDENTIFIER_TOKEN_TYPE,
    UNASSIGNED_TOKEN_TYPE: UNASSIGNED_TOKEN_TYPE,
    FEW_DASHES_TOKEN_TYPE: FEW_DASHES_TOKEN_TYPE,
    MANY_DASHES_TOKEN_TYPE: MANY_DASHES_TOKEN_TYPE,
    SINGLE_DASH_TOKEN_TYPE: SINGLE_DASH_TOKEN_TYPE,
    SINGLE_HASH_TOKEN_TYPE: SINGLE_HASH_TOKEN_TYPE,
    DOUBLE_HASH_TOKEN_TYPE: DOUBLE_HASH_TOKEN_TYPE,
    TRIPLE_HASH_TOKEN_TYPE: TRIPLE_HASH_TOKEN_TYPE,
    VERTICAL_BAR_TOKEN_TYPE: VERTICAL_BAR_TOKEN_TYPE,
    QUADRUPLE_HASH_TOKEN_TYPE: QUADRUPLE_HASH_TOKEN_TYPE,
    SINGLE_ASTERISK_TOKEN_TYPE: SINGLE_ASTERISK_TOKEN_TYPE,
    DOUBLE_ASTERISK_TOKEN_TYPE: DOUBLE_ASTERISK_TOKEN_TYPE,
    TRIPLE_ASTERISK_TOKEN_TYPE: TRIPLE_ASTERISK_TOKEN_TYPE
};
var _default = tokenTypes;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90b2tlblR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgV09SRF9UT0tFTl9UWVBFID0gXCJ3b3JkXCI7XG5leHBvcnQgY29uc3QgUEFUSF9UT0tFTl9UWVBFID0gXCJwYXRoXCI7XG5leHBvcnQgY29uc3QgRE9NQUlOX1RPS0VOX1RZUEUgPSBcImRvbWFpblwiO1xuZXhwb3J0IGNvbnN0IFNDSEVNRV9UT0tFTl9UWVBFID0gXCJzY2hlbWVcIjtcbmV4cG9ydCBjb25zdCBOVU1CRVJfVE9LRU5fVFlQRSA9IFwibnVtYmVyXCI7XG5leHBvcnQgY29uc3QgU1BFQ0lBTF9UT0tFTl9UWVBFID0gXCJzcGVjaWFsXCI7XG5leHBvcnQgY29uc3QgRVNDQVBFRF9UT0tFTl9UWVBFID0gXCJlc2NhcGVkXCI7XG5leHBvcnQgY29uc3QgQkFDS1RJQ0tfVE9LRU5fVFlQRSA9IFwiYmFja3RpY2tcIjtcbmV4cG9ydCBjb25zdCBCQUNLVElDS1NfVE9LRU5fVFlQRSA9IFwiYmFja3RpY2tzXCI7XG5leHBvcnQgY29uc3QgSURFTlRJRklFUl9UT0tFTl9UWVBFID0gXCJpZGVudGlmaWVyXCI7XG5leHBvcnQgY29uc3QgVU5BU1NJR05FRF9UT0tFTl9UWVBFID0gXCJ1bmFzc2lnbmVkXCI7XG5leHBvcnQgY29uc3QgRkVXX0RBU0hFU19UT0tFTl9UWVBFID0gXCJmZXctZGFzaGVzXCI7XG5leHBvcnQgY29uc3QgTUFOWV9EQVNIRVNfVE9LRU5fVFlQRSA9IFwibWFueS1kYXNoZXNcIjtcbmV4cG9ydCBjb25zdCBTSU5HTEVfREFTSF9UT0tFTl9UWVBFID0gXCJzaW5nbGUtZGFzaFwiO1xuZXhwb3J0IGNvbnN0IFNJTkdMRV9IQVNIX1RPS0VOX1RZUEUgPSBcInNpbmdsZS1oYXNoXCI7XG5leHBvcnQgY29uc3QgRE9VQkxFX0hBU0hfVE9LRU5fVFlQRSA9IFwiZG91YmxlLWhhc2hcIjtcbmV4cG9ydCBjb25zdCBUUklQTEVfSEFTSF9UT0tFTl9UWVBFID0gXCJ0cmlwbGUtaGFzaFwiO1xuZXhwb3J0IGNvbnN0IFZFUlRJQ0FMX0JBUl9UT0tFTl9UWVBFID0gXCJ2ZXJ0aWNhbC1iYXJcIjtcbmV4cG9ydCBjb25zdCBRVUFEUlVQTEVfSEFTSF9UT0tFTl9UWVBFID0gXCJxdWFkcnVwbGUtaGFzaFwiO1xuZXhwb3J0IGNvbnN0IFNJTkdMRV9BU1RFUklTS19UT0tFTl9UWVBFID0gXCJzaW5nbGUtYXN0ZXJpc2tcIjtcbmV4cG9ydCBjb25zdCBET1VCTEVfQVNURVJJU0tfVE9LRU5fVFlQRSA9IFwiZG91YmxlLWFzdGVyaXNrXCI7XG5leHBvcnQgY29uc3QgVFJJUExFX0FTVEVSSVNLX1RPS0VOX1RZUEUgPSBcInRyaXBsZS1hc3Rlcmlza1wiO1xuXG5jb25zdCB0b2tlblR5cGVzID0ge1xuICBXT1JEX1RPS0VOX1RZUEUsXG4gIFBBVEhfVE9LRU5fVFlQRSxcbiAgRE9NQUlOX1RPS0VOX1RZUEUsXG4gIFNDSEVNRV9UT0tFTl9UWVBFLFxuICBOVU1CRVJfVE9LRU5fVFlQRSxcbiAgU1BFQ0lBTF9UT0tFTl9UWVBFLFxuICBFU0NBUEVEX1RPS0VOX1RZUEUsXG4gIEJBQ0tUSUNLX1RPS0VOX1RZUEUsXG4gIEJBQ0tUSUNLU19UT0tFTl9UWVBFLFxuICBJREVOVElGSUVSX1RPS0VOX1RZUEUsXG4gIFVOQVNTSUdORURfVE9LRU5fVFlQRSxcbiAgRkVXX0RBU0hFU19UT0tFTl9UWVBFLFxuICBNQU5ZX0RBU0hFU19UT0tFTl9UWVBFLFxuICBTSU5HTEVfREFTSF9UT0tFTl9UWVBFLFxuICBTSU5HTEVfSEFTSF9UT0tFTl9UWVBFLFxuICBET1VCTEVfSEFTSF9UT0tFTl9UWVBFLFxuICBUUklQTEVfSEFTSF9UT0tFTl9UWVBFLFxuICBWRVJUSUNBTF9CQVJfVE9LRU5fVFlQRSxcbiAgUVVBRFJVUExFX0hBU0hfVE9LRU5fVFlQRSxcbiAgU0lOR0xFX0FTVEVSSVNLX1RPS0VOX1RZUEUsXG4gIERPVUJMRV9BU1RFUklTS19UT0tFTl9UWVBFLFxuICBUUklQTEVfQVNURVJJU0tfVE9LRU5fVFlQRVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdG9rZW5UeXBlcztcbiJdLCJuYW1lcyI6WyJCQUNLVElDS1NfVE9LRU5fVFlQRSIsIkJBQ0tUSUNLX1RPS0VOX1RZUEUiLCJET01BSU5fVE9LRU5fVFlQRSIsIkRPVUJMRV9BU1RFUklTS19UT0tFTl9UWVBFIiwiRE9VQkxFX0hBU0hfVE9LRU5fVFlQRSIsIkVTQ0FQRURfVE9LRU5fVFlQRSIsIkZFV19EQVNIRVNfVE9LRU5fVFlQRSIsIklERU5USUZJRVJfVE9LRU5fVFlQRSIsIk1BTllfREFTSEVTX1RPS0VOX1RZUEUiLCJOVU1CRVJfVE9LRU5fVFlQRSIsIlBBVEhfVE9LRU5fVFlQRSIsIlFVQURSVVBMRV9IQVNIX1RPS0VOX1RZUEUiLCJTQ0hFTUVfVE9LRU5fVFlQRSIsIlNJTkdMRV9BU1RFUklTS19UT0tFTl9UWVBFIiwiU0lOR0xFX0RBU0hfVE9LRU5fVFlQRSIsIlNJTkdMRV9IQVNIX1RPS0VOX1RZUEUiLCJTUEVDSUFMX1RPS0VOX1RZUEUiLCJUUklQTEVfQVNURVJJU0tfVE9LRU5fVFlQRSIsIlRSSVBMRV9IQVNIX1RPS0VOX1RZUEUiLCJVTkFTU0lHTkVEX1RPS0VOX1RZUEUiLCJWRVJUSUNBTF9CQVJfVE9LRU5fVFlQRSIsIldPUkRfVE9LRU5fVFlQRSIsInRva2VuVHlwZXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBVWFBLG9CQUFvQjtlQUFwQkE7O0lBREFDLG1CQUFtQjtlQUFuQkE7O0lBTEFDLGlCQUFpQjtlQUFqQkE7O0lBa0JBQywwQkFBMEI7ZUFBMUJBOztJQUxBQyxzQkFBc0I7ZUFBdEJBOztJQVRBQyxrQkFBa0I7ZUFBbEJBOztJQUtBQyxxQkFBcUI7ZUFBckJBOztJQUZBQyxxQkFBcUI7ZUFBckJBOztJQUdBQyxzQkFBc0I7ZUFBdEJBOztJQVJBQyxpQkFBaUI7ZUFBakJBOztJQUhBQyxlQUFlO2VBQWZBOztJQWlCQUMseUJBQXlCO2VBQXpCQTs7SUFmQUMsaUJBQWlCO2VBQWpCQTs7SUFnQkFDLDBCQUEwQjtlQUExQkE7O0lBTkFDLHNCQUFzQjtlQUF0QkE7O0lBQ0FDLHNCQUFzQjtlQUF0QkE7O0lBVEFDLGtCQUFrQjtlQUFsQkE7O0lBZ0JBQywwQkFBMEI7ZUFBMUJBOztJQUxBQyxzQkFBc0I7ZUFBdEJBOztJQU5BQyxxQkFBcUI7ZUFBckJBOztJQU9BQyx1QkFBdUI7ZUFBdkJBOztJQWpCQUMsZUFBZTtlQUFmQTs7SUFnRGIsT0FBMEI7ZUFBMUI7OztBQWhETyxJQUFNQSxrQkFBa0I7QUFDeEIsSUFBTVgsa0JBQWtCO0FBQ3hCLElBQU1SLG9CQUFvQjtBQUMxQixJQUFNVSxvQkFBb0I7QUFDMUIsSUFBTUgsb0JBQW9CO0FBQzFCLElBQU1PLHFCQUFxQjtBQUMzQixJQUFNWCxxQkFBcUI7QUFDM0IsSUFBTUosc0JBQXNCO0FBQzVCLElBQU1ELHVCQUF1QjtBQUM3QixJQUFNTyx3QkFBd0I7QUFDOUIsSUFBTVksd0JBQXdCO0FBQzlCLElBQU1iLHdCQUF3QjtBQUM5QixJQUFNRSx5QkFBeUI7QUFDL0IsSUFBTU0seUJBQXlCO0FBQy9CLElBQU1DLHlCQUF5QjtBQUMvQixJQUFNWCx5QkFBeUI7QUFDL0IsSUFBTWMseUJBQXlCO0FBQy9CLElBQU1FLDBCQUEwQjtBQUNoQyxJQUFNVCw0QkFBNEI7QUFDbEMsSUFBTUUsNkJBQTZCO0FBQ25DLElBQU1WLDZCQUE2QjtBQUNuQyxJQUFNYyw2QkFBNkI7QUFFMUMsSUFBTUssYUFBYTtJQUNqQkQsaUJBQUFBO0lBQ0FYLGlCQUFBQTtJQUNBUixtQkFBQUE7SUFDQVUsbUJBQUFBO0lBQ0FILG1CQUFBQTtJQUNBTyxvQkFBQUE7SUFDQVgsb0JBQUFBO0lBQ0FKLHFCQUFBQTtJQUNBRCxzQkFBQUE7SUFDQU8sdUJBQUFBO0lBQ0FZLHVCQUFBQTtJQUNBYix1QkFBQUE7SUFDQUUsd0JBQUFBO0lBQ0FNLHdCQUFBQTtJQUNBQyx3QkFBQUE7SUFDQVgsd0JBQUFBO0lBQ0FjLHdCQUFBQTtJQUNBRSx5QkFBQUE7SUFDQVQsMkJBQUFBO0lBQ0FFLDRCQUFBQTtJQUNBViw0QkFBQUE7SUFDQWMsNEJBQUFBO0FBQ0Y7SUFFQSxXQUFlSyJ9