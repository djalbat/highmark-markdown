"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    BACKTICKS_TOKEN_TYPE: function() {
        return BACKTICKS_TOKEN_TYPE;
    },
    BACKTICK_TOKEN_TYPE: function() {
        return BACKTICK_TOKEN_TYPE;
    },
    DASHES_TOKEN_TYPE: function() {
        return DASHES_TOKEN_TYPE;
    },
    DOMAIN_TOKEN_TYPE: function() {
        return DOMAIN_TOKEN_TYPE;
    },
    DOUBLE_ASTERISK_TOKEN_TYPE: function() {
        return DOUBLE_ASTERISK_TOKEN_TYPE;
    },
    DOUBLE_HASH_TOKEN_TYPE: function() {
        return DOUBLE_HASH_TOKEN_TYPE;
    },
    ESCAPED_TOKEN_TYPE: function() {
        return ESCAPED_TOKEN_TYPE;
    },
    IDENTIFIER_TOKEN_TYPE: function() {
        return IDENTIFIER_TOKEN_TYPE;
    },
    MANY_DASHES_TOKEN_TYPE: function() {
        return MANY_DASHES_TOKEN_TYPE;
    },
    NUMBER_TOKEN_TYPE: function() {
        return NUMBER_TOKEN_TYPE;
    },
    PATH_TOKEN_TYPE: function() {
        return PATH_TOKEN_TYPE;
    },
    PROTOCOL_TOKEN_TYPE: function() {
        return PROTOCOL_TOKEN_TYPE;
    },
    QUADRUPLE_HASH_TOKEN_TYPE: function() {
        return QUADRUPLE_HASH_TOKEN_TYPE;
    },
    SINGLE_ASTERISK_TOKEN_TYPE: function() {
        return SINGLE_ASTERISK_TOKEN_TYPE;
    },
    SINGLE_HASH_TOKEN_TYPE: function() {
        return SINGLE_HASH_TOKEN_TYPE;
    },
    SPECIAL_TOKEN_TYPE: function() {
        return SPECIAL_TOKEN_TYPE;
    },
    TRIPLE_ASTERISK_TOKEN_TYPE: function() {
        return TRIPLE_ASTERISK_TOKEN_TYPE;
    },
    TRIPLE_HASH_TOKEN_TYPE: function() {
        return TRIPLE_HASH_TOKEN_TYPE;
    },
    UNASSIGNED_TOKEN_TYPE: function() {
        return UNASSIGNED_TOKEN_TYPE;
    },
    VERTICAL_BAR_TOKEN_TYPE: function() {
        return VERTICAL_BAR_TOKEN_TYPE;
    },
    WORD_TOKEN_TYPE: function() {
        return WORD_TOKEN_TYPE;
    },
    default: function() {
        return _default;
    }
});
var WORD_TOKEN_TYPE = "word";
var PATH_TOKEN_TYPE = "path";
var DOMAIN_TOKEN_TYPE = "domain";
var NUMBER_TOKEN_TYPE = "number";
var DASHES_TOKEN_TYPE = "dashes";
var ESCAPED_TOKEN_TYPE = "escaped";
var SPECIAL_TOKEN_TYPE = "special";
var PROTOCOL_TOKEN_TYPE = "protocol";
var BACKTICK_TOKEN_TYPE = "backtick";
var BACKTICKS_TOKEN_TYPE = "backticks";
var IDENTIFIER_TOKEN_TYPE = "identifier";
var UNASSIGNED_TOKEN_TYPE = "unassigned";
var MANY_DASHES_TOKEN_TYPE = "many-dashes";
var SINGLE_HASH_TOKEN_TYPE = "single-hash";
var DOUBLE_HASH_TOKEN_TYPE = "double-hash";
var TRIPLE_HASH_TOKEN_TYPE = "triple-hash";
var VERTICAL_BAR_TOKEN_TYPE = "vertical-bar";
var QUADRUPLE_HASH_TOKEN_TYPE = "quadruple-hash";
var SINGLE_ASTERISK_TOKEN_TYPE = "single-asterisk";
var DOUBLE_ASTERISK_TOKEN_TYPE = "double-asterisk";
var TRIPLE_ASTERISK_TOKEN_TYPE = "triple-asterisk";
var tokenTypes = {
    WORD_TOKEN_TYPE: WORD_TOKEN_TYPE,
    PATH_TOKEN_TYPE: PATH_TOKEN_TYPE,
    DOMAIN_TOKEN_TYPE: DOMAIN_TOKEN_TYPE,
    NUMBER_TOKEN_TYPE: NUMBER_TOKEN_TYPE,
    DASHES_TOKEN_TYPE: DASHES_TOKEN_TYPE,
    ESCAPED_TOKEN_TYPE: ESCAPED_TOKEN_TYPE,
    SPECIAL_TOKEN_TYPE: SPECIAL_TOKEN_TYPE,
    PROTOCOL_TOKEN_TYPE: PROTOCOL_TOKEN_TYPE,
    BACKTICK_TOKEN_TYPE: BACKTICK_TOKEN_TYPE,
    BACKTICKS_TOKEN_TYPE: BACKTICKS_TOKEN_TYPE,
    IDENTIFIER_TOKEN_TYPE: IDENTIFIER_TOKEN_TYPE,
    UNASSIGNED_TOKEN_TYPE: UNASSIGNED_TOKEN_TYPE,
    MANY_DASHES_TOKEN_TYPE: MANY_DASHES_TOKEN_TYPE,
    SINGLE_HASH_TOKEN_TYPE: SINGLE_HASH_TOKEN_TYPE,
    DOUBLE_HASH_TOKEN_TYPE: DOUBLE_HASH_TOKEN_TYPE,
    TRIPLE_HASH_TOKEN_TYPE: TRIPLE_HASH_TOKEN_TYPE,
    VERTICAL_BAR_TOKEN_TYPE: VERTICAL_BAR_TOKEN_TYPE,
    QUADRUPLE_HASH_TOKEN_TYPE: QUADRUPLE_HASH_TOKEN_TYPE,
    SINGLE_ASTERISK_TOKEN_TYPE: SINGLE_ASTERISK_TOKEN_TYPE,
    DOUBLE_ASTERISK_TOKEN_TYPE: DOUBLE_ASTERISK_TOKEN_TYPE,
    TRIPLE_ASTERISK_TOKEN_TYPE: TRIPLE_ASTERISK_TOKEN_TYPE
};
var _default = tokenTypes;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90b2tlblR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgV09SRF9UT0tFTl9UWVBFID0gXCJ3b3JkXCI7XG5leHBvcnQgY29uc3QgUEFUSF9UT0tFTl9UWVBFID0gXCJwYXRoXCI7XG5leHBvcnQgY29uc3QgRE9NQUlOX1RPS0VOX1RZUEUgPSBcImRvbWFpblwiO1xuZXhwb3J0IGNvbnN0IE5VTUJFUl9UT0tFTl9UWVBFID0gXCJudW1iZXJcIjtcbmV4cG9ydCBjb25zdCBEQVNIRVNfVE9LRU5fVFlQRSA9IFwiZGFzaGVzXCI7XG5leHBvcnQgY29uc3QgRVNDQVBFRF9UT0tFTl9UWVBFID0gXCJlc2NhcGVkXCI7XG5leHBvcnQgY29uc3QgU1BFQ0lBTF9UT0tFTl9UWVBFID0gXCJzcGVjaWFsXCI7XG5leHBvcnQgY29uc3QgUFJPVE9DT0xfVE9LRU5fVFlQRSA9IFwicHJvdG9jb2xcIjtcbmV4cG9ydCBjb25zdCBCQUNLVElDS19UT0tFTl9UWVBFID0gXCJiYWNrdGlja1wiO1xuZXhwb3J0IGNvbnN0IEJBQ0tUSUNLU19UT0tFTl9UWVBFID0gXCJiYWNrdGlja3NcIjtcbmV4cG9ydCBjb25zdCBJREVOVElGSUVSX1RPS0VOX1RZUEUgPSBcImlkZW50aWZpZXJcIjtcbmV4cG9ydCBjb25zdCBVTkFTU0lHTkVEX1RPS0VOX1RZUEUgPSBcInVuYXNzaWduZWRcIjtcbmV4cG9ydCBjb25zdCBNQU5ZX0RBU0hFU19UT0tFTl9UWVBFID0gXCJtYW55LWRhc2hlc1wiO1xuZXhwb3J0IGNvbnN0IFNJTkdMRV9IQVNIX1RPS0VOX1RZUEUgPSBcInNpbmdsZS1oYXNoXCI7XG5leHBvcnQgY29uc3QgRE9VQkxFX0hBU0hfVE9LRU5fVFlQRSA9IFwiZG91YmxlLWhhc2hcIjtcbmV4cG9ydCBjb25zdCBUUklQTEVfSEFTSF9UT0tFTl9UWVBFID0gXCJ0cmlwbGUtaGFzaFwiO1xuZXhwb3J0IGNvbnN0IFZFUlRJQ0FMX0JBUl9UT0tFTl9UWVBFID0gXCJ2ZXJ0aWNhbC1iYXJcIjtcbmV4cG9ydCBjb25zdCBRVUFEUlVQTEVfSEFTSF9UT0tFTl9UWVBFID0gXCJxdWFkcnVwbGUtaGFzaFwiO1xuZXhwb3J0IGNvbnN0IFNJTkdMRV9BU1RFUklTS19UT0tFTl9UWVBFID0gXCJzaW5nbGUtYXN0ZXJpc2tcIjtcbmV4cG9ydCBjb25zdCBET1VCTEVfQVNURVJJU0tfVE9LRU5fVFlQRSA9IFwiZG91YmxlLWFzdGVyaXNrXCI7XG5leHBvcnQgY29uc3QgVFJJUExFX0FTVEVSSVNLX1RPS0VOX1RZUEUgPSBcInRyaXBsZS1hc3Rlcmlza1wiO1xuXG5jb25zdCB0b2tlblR5cGVzID0ge1xuICBXT1JEX1RPS0VOX1RZUEUsXG4gIFBBVEhfVE9LRU5fVFlQRSxcbiAgRE9NQUlOX1RPS0VOX1RZUEUsXG4gIE5VTUJFUl9UT0tFTl9UWVBFLFxuICBEQVNIRVNfVE9LRU5fVFlQRSxcbiAgRVNDQVBFRF9UT0tFTl9UWVBFLFxuICBTUEVDSUFMX1RPS0VOX1RZUEUsXG4gIFBST1RPQ09MX1RPS0VOX1RZUEUsXG4gIEJBQ0tUSUNLX1RPS0VOX1RZUEUsXG4gIEJBQ0tUSUNLU19UT0tFTl9UWVBFLFxuICBJREVOVElGSUVSX1RPS0VOX1RZUEUsXG4gIFVOQVNTSUdORURfVE9LRU5fVFlQRSxcbiAgTUFOWV9EQVNIRVNfVE9LRU5fVFlQRSxcbiAgU0lOR0xFX0hBU0hfVE9LRU5fVFlQRSxcbiAgRE9VQkxFX0hBU0hfVE9LRU5fVFlQRSxcbiAgVFJJUExFX0hBU0hfVE9LRU5fVFlQRSxcbiAgVkVSVElDQUxfQkFSX1RPS0VOX1RZUEUsXG4gIFFVQURSVVBMRV9IQVNIX1RPS0VOX1RZUEUsXG4gIFNJTkdMRV9BU1RFUklTS19UT0tFTl9UWVBFLFxuICBET1VCTEVfQVNURVJJU0tfVE9LRU5fVFlQRSxcbiAgVFJJUExFX0FTVEVSSVNLX1RPS0VOX1RZUEVcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRva2VuVHlwZXM7XG4iXSwibmFtZXMiOlsiQkFDS1RJQ0tTX1RPS0VOX1RZUEUiLCJCQUNLVElDS19UT0tFTl9UWVBFIiwiREFTSEVTX1RPS0VOX1RZUEUiLCJET01BSU5fVE9LRU5fVFlQRSIsIkRPVUJMRV9BU1RFUklTS19UT0tFTl9UWVBFIiwiRE9VQkxFX0hBU0hfVE9LRU5fVFlQRSIsIkVTQ0FQRURfVE9LRU5fVFlQRSIsIklERU5USUZJRVJfVE9LRU5fVFlQRSIsIk1BTllfREFTSEVTX1RPS0VOX1RZUEUiLCJOVU1CRVJfVE9LRU5fVFlQRSIsIlBBVEhfVE9LRU5fVFlQRSIsIlBST1RPQ09MX1RPS0VOX1RZUEUiLCJRVUFEUlVQTEVfSEFTSF9UT0tFTl9UWVBFIiwiU0lOR0xFX0FTVEVSSVNLX1RPS0VOX1RZUEUiLCJTSU5HTEVfSEFTSF9UT0tFTl9UWVBFIiwiU1BFQ0lBTF9UT0tFTl9UWVBFIiwiVFJJUExFX0FTVEVSSVNLX1RPS0VOX1RZUEUiLCJUUklQTEVfSEFTSF9UT0tFTl9UWVBFIiwiVU5BU1NJR05FRF9UT0tFTl9UWVBFIiwiVkVSVElDQUxfQkFSX1RPS0VOX1RZUEUiLCJXT1JEX1RPS0VOX1RZUEUiLCJ0b2tlblR5cGVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFXYUEsb0JBQW9CO2VBQXBCQTs7SUFEQUMsbUJBQW1CO2VBQW5CQTs7SUFKQUMsaUJBQWlCO2VBQWpCQTs7SUFGQUMsaUJBQWlCO2VBQWpCQTs7SUFpQkFDLDBCQUEwQjtlQUExQkE7O0lBTEFDLHNCQUFzQjtlQUF0QkE7O0lBVEFDLGtCQUFrQjtlQUFsQkE7O0lBS0FDLHFCQUFxQjtlQUFyQkE7O0lBRUFDLHNCQUFzQjtlQUF0QkE7O0lBVEFDLGlCQUFpQjtlQUFqQkE7O0lBRkFDLGVBQWU7ZUFBZkE7O0lBTUFDLG1CQUFtQjtlQUFuQkE7O0lBVUFDLHlCQUF5QjtlQUF6QkE7O0lBQ0FDLDBCQUEwQjtlQUExQkE7O0lBTEFDLHNCQUFzQjtlQUF0QkE7O0lBUEFDLGtCQUFrQjtlQUFsQkE7O0lBY0FDLDBCQUEwQjtlQUExQkE7O0lBTEFDLHNCQUFzQjtlQUF0QkE7O0lBSkFDLHFCQUFxQjtlQUFyQkE7O0lBS0FDLHVCQUF1QjtlQUF2QkE7O0lBaEJBQyxlQUFlO2VBQWZBOztJQThDYixPQUEwQjtlQUExQjs7O0FBOUNPLElBQU1BLGtCQUFrQjtBQUN4QixJQUFNVixrQkFBa0I7QUFDeEIsSUFBTVAsb0JBQW9CO0FBQzFCLElBQU1NLG9CQUFvQjtBQUMxQixJQUFNUCxvQkFBb0I7QUFDMUIsSUFBTUkscUJBQXFCO0FBQzNCLElBQU1TLHFCQUFxQjtBQUMzQixJQUFNSixzQkFBc0I7QUFDNUIsSUFBTVYsc0JBQXNCO0FBQzVCLElBQU1ELHVCQUF1QjtBQUM3QixJQUFNTyx3QkFBd0I7QUFDOUIsSUFBTVcsd0JBQXdCO0FBQzlCLElBQU1WLHlCQUF5QjtBQUMvQixJQUFNTSx5QkFBeUI7QUFDL0IsSUFBTVQseUJBQXlCO0FBQy9CLElBQU1ZLHlCQUF5QjtBQUMvQixJQUFNRSwwQkFBMEI7QUFDaEMsSUFBTVAsNEJBQTRCO0FBQ2xDLElBQU1DLDZCQUE2QjtBQUNuQyxJQUFNVCw2QkFBNkI7QUFDbkMsSUFBTVksNkJBQTZCO0FBRTFDLElBQU1LLGFBQWE7SUFDakJELGlCQUFBQTtJQUNBVixpQkFBQUE7SUFDQVAsbUJBQUFBO0lBQ0FNLG1CQUFBQTtJQUNBUCxtQkFBQUE7SUFDQUksb0JBQUFBO0lBQ0FTLG9CQUFBQTtJQUNBSixxQkFBQUE7SUFDQVYscUJBQUFBO0lBQ0FELHNCQUFBQTtJQUNBTyx1QkFBQUE7SUFDQVcsdUJBQUFBO0lBQ0FWLHdCQUFBQTtJQUNBTSx3QkFBQUE7SUFDQVQsd0JBQUFBO0lBQ0FZLHdCQUFBQTtJQUNBRSx5QkFBQUE7SUFDQVAsMkJBQUFBO0lBQ0FDLDRCQUFBQTtJQUNBVCw0QkFBQUE7SUFDQVksNEJBQUFBO0FBQ0Y7SUFFQSxXQUFlSyJ9