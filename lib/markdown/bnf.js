"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var bnf = '\n\n    division                ::=  ( subDivision | endOfLine | error )+ ;\n    \n    \n    subDivision             ::=  verticalSpace ( directives \n    \n                                               | primaryHeading \n         \n                                               | secondaryHeading \n                                                   \n                                               | tertiaryHeading \n                                                   \n                                               | quaternaryHeading \n                                                   \n                                               | table \n                                                   \n                                               | footnote \n                                                   \n                                               | orderedList \n                                                   \n                                               | unorderedList \n                                                   \n                                               | blockListing \n                      \n                                               | paragraph ) ;\n\n    \n    endOfLine.              ::=  <END_OF_LINE> ;\n\n\n    error.                  ::=  . ;\n\n\n    verticalSpace           ::=  <END_OF_LINE> <END_OF_LINE>+ \n    \n                              |  <START_OF_CONTENT> <END_OF_LINE>*\n                              \n                              ;\n\n\n    directives              ::=  ( embedDirective \n    \n                                 | ignoreDirective \n    \n                                 | includeDirective \n    \n                                 | contentsDirective \n    \n                                 | footnotesDirective ) ( endOfLine ( embedDirective \n    \n                                                                    | ignoreDirective \n                                        \n                                                                    | includeDirective \n                                        \n                                                                    | contentsDirective \n                                        \n                                                                    | footnotesDirective ) )* ;\n\n\n    primaryHeading          ::=  "#" markedText ;\n\n\n    secondaryHeading        ::=  "##" markedText ;\n\n\n    tertiaryHeading         ::=  "###" markedText ;\n    \n    \n    quaternaryHeading       ::=  "####" markedText ;\n\n\n    table                   ::=  tableHead <END_OF_LINE> [dashes] <END_OF_LINE> tableBody ;\n\n\n    footnote                ::=  [reference] paragraph ;\n\n\n    orderedList             ::=  orderedListItem ( <END_OF_LINE> orderedListItem )* ;\n\n\n    unorderedList           ::=  unorderedListItem ( <END_OF_LINE> unorderedListItem )* ;\n\n\n    blockListing            ::=  blockListingStart <END_OF_LINE> blockText <END_OF_LINE> blockListingEnd ;\n\n\n    paragraph               ::=  markedText ( <END_OF_LINE> markedText )* ;\n    \n\n    embedDirective          ::=  "@"<NO_WHITESPACE>"embed" [path] ;\n\n\n    ignoreDirective         ::=  "@"<NO_WHITESPACE>"ignore" ;\n\n\n    includeDirective        ::=  "@"<NO_WHITESPACE>"include" [path] ;\n\n\n    contentsDirective       ::=  "@"<NO_WHITESPACE>"contents" [number]? ;\n\n\n    footnotesDirective      ::=  "@"<NO_WHITESPACE>"footnotes" ;\n\n\n    footnotesList           ::=  footnoteItem+ ;\n\n\n    footnoteItem            ::=  anchor paragraph ;\n\n\n    tableHead               ::=  tableHeadRow ;\n\n    \n    tableBody               ::=  tableBodyRow ;\n\n    \n    orderedListItem         ::=  [marker] markedText ( <END_OF_LINE> markedText )* ;\n    \n    \n    unorderedListItem       ::=  [bullet] markedText ( <END_OF_LINE> markedText )* ;\n\n\n    blockListingStart       ::=  [backticks] className? ;\n\n\n    blockListingEnd         ::=  [backticks] ;\n\n\n    tableHeadRow            ::=  [vertical-bar] tableHeadCell+ ;\n\n    \n    tableBodyRow            ::=  [vertical-bar] tableBodyCell+ ;\n\n\n    tableHeadCell           ::=  emptyTableCell | tableCell ;\n\n\n    tableBodyCell           ::=  emptyTableCell | tableCell ; \n\n\n    emptyTableCell          ::=  "." [vertical-bar];\n    \n\n    tableCell.              ::=  markedText... [vertical-bar] ;\n    \n    \n    markedText              ::=  ( link \n    \n                                 | emailLink \n                                 \n                                 | hyperlink \n                                 \n                                 | image \n                                 \n                                 | inlineListing \n                                 \n                                 | stronglyEmphasisedText \n                                 \n                                 | emphasisedText \n                                 \n                                 | strongText \n                                 \n                                 | plainText )+ ;\n\n\n    link.                   ::=  "[^" [identifier] "]" ;\n    \n\n    emailLink.              ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" [email-address] ")" \n    \n                              |  [email-address] \n                              \n                              ;\n\n\n    hyperlink.              ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" [url] ")" \n    \n                              |  [url]\n                              \n                              ;\n\n\n    image.                  ::=  "![" inlineText... "]"<NO_WHITESPACE>"(" [path] ")" ;\n\n\n    inlineListing           ::=  [backticked-literal] ;\n    \n\n    stronglyEmphasisedText  ::=  "****" inlineText "****" ;\n    \n\n    emphasisedText          ::=  "**" inlineText "**" ;\n\n\n    strongText              ::=  "***" inlineText "***" ;\n\n\n    blockText.              ::=  ( plainText \n                                \n                                 | [url] \n\n                                 | [dashes] \n    \n                                 | [vertical-bar] \n    \n                                 | [email-address] )+ ( <END_OF_LINE> ( plainText \n                                                                    \n                                                                      | [url] \n\n                                                                      | [dashes] \n\n                                                                      | [vertical-bar] \n\n                                                                      | [email-address] )+ )* ;\n    \n\n    inlineText              ::=  plainText+ ;\n    \n    \n    plainText               ::=  [escaped] \n                              \n                              |  [number] \n                              \n                              |  [path] \n                              \n                              |  [identifier] \n                              \n                              |  [word] \n                              \n                              |  [special] \n                              \n                              |  [unassigned] \n                              \n                              ;\n    \n\n    anchor.                 ::=  [identifier] ;\n    \n\n    className               ::=  <NO_WHITESPACE>[identifier] ;\n      \n';
var _default = bnf;

//# sourceMappingURL=data:application/json;base64,