"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var bnf = '\n\n    division                ::=  ( primaryHeading \n                                 \n                                 | secondaryHeading \n                                 \n                                 | tertiaryHeading \n                                 \n                                 | quaternaryHeading \n                                 \n                                 | orderedList \n                                 \n                                 | unorderedList \n                                 \n                                 | blockListing \n    \n                                 | table \n                                 \n                                 | footnote \n                                 \n                                 | lineBreak \n                                 \n                                 | paragraph \n                                 \n                                 | verticalSpace \n                                 \n                                 | error )+ \n                                 \n                              ;\n\n    \n    primaryHeading          ::=  [single-hash] line ;\n\n\n    secondaryHeading        ::=  [double-hash] line ;\n\n\n    tertiaryHeading         ::=  [triple-hash] line ;\n    \n    \n    quaternaryHeading       ::=  [quadruple-hash] line ;\n\n\n    orderedList             ::=  orderedListItem+ ;\n\n\n    unorderedList           ::=  unorderedListItem+ ;\n\n\n    blockListing            ::=  blockListingStart blockText blockListingEnd ;\n\n\n    footnotesList           ::=  footnoteItem+ ;\n\n\n    table                   ::=  tableHead tableSeparator tableBody ;\n\n\n    footnote                ::=  reference paragraph ;\n\n\n    lineBreak.              ::=  [dashes] endOfLine ;\n\n\n    paragraph               ::=  line+ ;\n    \n\n    verticalSpace.          ::=  endOfLine+ ;\n\n\n    error.                  ::=  . ;\n\n\n    blockListingStart       ::=  [backticks] className? endOfLine ;\n\n\n    blockListingEnd         ::=  [backticks] endOfLine ;\n\n\n    footnoteItem            ::=  anchor paragraph ;\n    \n    \n    orderedListItem         ::=  [number]<NO_WHITESPACE>"." line ;\n    \n    \n    unorderedListItem       ::=  [single-asterisk] line ;\n\n\n    tableHead               ::=  tableHeadRow ;\n\n    \n    tableBody               ::=  tableBodyRow+ ;\n\n    \n    tableSeparator.         ::=  [many-dashes] endOfLine ;\n\n    \n    tableHeadRow            ::=  [vertical-bar] tableHeadCell+ endOfLine ;\n\n    \n    tableBodyRow            ::=  [vertical-bar] tableBodyCell+ endOfLine ;\n\n\n    tableHeadCell.          ::=  emptyTableCell | tableCell ;\n\n\n    tableBodyCell.          ::=  emptyTableCell | tableCell ; \n\n\n    emptyTableCell          ::=  "." [vertical-bar];\n    \n\n    tableCell               ::=  ( link | image | hyperlink | mailToLink | inlineListing | stronglyEmphasisedText | emphasisedText | strongText | text )+ [vertical-bar] ;\n\n\n    line.                   ::=  ( link | image | hyperlink | mailToLink | inlineListing | stronglyEmphasisedText | emphasisedText | strongText | text )+ endOfLine ;\n\n\n    link.                   ::=  "[^" [identifier] "]" ;\n    \n\n    image.                  ::=  "![" inlineText... "]"<NO_WHITESPACE>"(" [path] ")" ;\n\n\n    hyperlink.              ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" url ")" \n    \n                              |  url\n                              \n                              ;\n\n\n    mailToLink.             ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" address ")" \n    \n                              |  address \n                              \n                              ;\n\n\n    reference.              ::=  "[^" [identifier] "]:" ;\n    \n\n    inlineListing           ::=  [backtick] inlineText... [backtick] ;\n    \n\n    stronglyEmphasisedText  ::=  [triple-asterisk] inlineText... [triple-asterisk] ;\n    \n\n    emphasisedText          ::=  [single-asterisk] inlineText... [single-asterisk] ;\n\n\n    strongText              ::=  [double-asterisk] inlineText... [double-asterisk] ;\n\n\n    blockText.              ::=  ( text | endOfLine )+ ;\n    \n\n    inlineText              ::=  text+ ;\n    \n    \n    anchor                  ::=  [number] ;\n    \n\n    text                    ::=  [regular-expression] \n    \n                              |  [string-literal] \n                              \n                              |  [escaped] \n                              \n                              |  [many-dashes] \n                              \n                              |  [dashes] \n                              \n                              |  [number] \n                              \n                              |  [path] \n                              \n                              |  [domain] \n                              \n                              |  [scheme] \n                              \n                              |  [identifier] \n                              \n                              |  [word] \n                              \n                              |  [special] \n                              \n                              |  [unassigned] ;\n    \n\n    url                     ::=  [scheme]? [domain] [path]? ;\n    \n\n    address                 ::=  [domain]<NO_WHITESPACE>"@"<NO_WHITESPACE>[domain] ;\n    \n\n    className               ::=  <NO_WHITESPACE>[identifier] ;\n\n\n    endOfLine               ::=  <END_OF_LINE> ;\n\n';
var _default = bnf;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXJrZG93bi9ibmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGJuZiA9IGBcblxuICAgIGRpdmlzaW9uICAgICAgICAgICAgICAgIDo6PSAgKCBwcmltYXJ5SGVhZGluZyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzZWNvbmRhcnlIZWFkaW5nIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHRlcnRpYXJ5SGVhZGluZyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxdWF0ZXJuYXJ5SGVhZGluZyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBvcmRlcmVkTGlzdCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1bm9yZGVyZWRMaXN0IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGJsb2NrTGlzdGluZyBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdGFibGUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZm9vdG5vdGUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbGluZUJyZWFrIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHBhcmFncmFwaCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB2ZXJ0aWNhbFNwYWNlIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGVycm9yICkrIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cbiAgICBcbiAgICBwcmltYXJ5SGVhZGluZyAgICAgICAgICA6Oj0gIFtzaW5nbGUtaGFzaF0gbGluZSA7XG5cblxuICAgIHNlY29uZGFyeUhlYWRpbmcgICAgICAgIDo6PSAgW2RvdWJsZS1oYXNoXSBsaW5lIDtcblxuXG4gICAgdGVydGlhcnlIZWFkaW5nICAgICAgICAgOjo9ICBbdHJpcGxlLWhhc2hdIGxpbmUgO1xuICAgIFxuICAgIFxuICAgIHF1YXRlcm5hcnlIZWFkaW5nICAgICAgIDo6PSAgW3F1YWRydXBsZS1oYXNoXSBsaW5lIDtcblxuXG4gICAgb3JkZXJlZExpc3QgICAgICAgICAgICAgOjo9ICBvcmRlcmVkTGlzdEl0ZW0rIDtcblxuXG4gICAgdW5vcmRlcmVkTGlzdCAgICAgICAgICAgOjo9ICB1bm9yZGVyZWRMaXN0SXRlbSsgO1xuXG5cbiAgICBibG9ja0xpc3RpbmcgICAgICAgICAgICA6Oj0gIGJsb2NrTGlzdGluZ1N0YXJ0IGJsb2NrVGV4dCBibG9ja0xpc3RpbmdFbmQgO1xuXG5cbiAgICBmb290bm90ZXNMaXN0ICAgICAgICAgICA6Oj0gIGZvb3Rub3RlSXRlbSsgO1xuXG5cbiAgICB0YWJsZSAgICAgICAgICAgICAgICAgICA6Oj0gIHRhYmxlSGVhZCB0YWJsZVNlcGFyYXRvciB0YWJsZUJvZHkgO1xuXG5cbiAgICBmb290bm90ZSAgICAgICAgICAgICAgICA6Oj0gIHJlZmVyZW5jZSBwYXJhZ3JhcGggO1xuXG5cbiAgICBsaW5lQnJlYWsuICAgICAgICAgICAgICA6Oj0gIFtkYXNoZXNdIGVuZE9mTGluZSA7XG5cblxuICAgIHBhcmFncmFwaCAgICAgICAgICAgICAgIDo6PSAgbGluZSsgO1xuICAgIFxuXG4gICAgdmVydGljYWxTcGFjZS4gICAgICAgICAgOjo9ICBlbmRPZkxpbmUrIDtcblxuXG4gICAgZXJyb3IuICAgICAgICAgICAgICAgICAgOjo9ICAuIDtcblxuXG4gICAgYmxvY2tMaXN0aW5nU3RhcnQgICAgICAgOjo9ICBbYmFja3RpY2tzXSBjbGFzc05hbWU/IGVuZE9mTGluZSA7XG5cblxuICAgIGJsb2NrTGlzdGluZ0VuZCAgICAgICAgIDo6PSAgW2JhY2t0aWNrc10gZW5kT2ZMaW5lIDtcblxuXG4gICAgZm9vdG5vdGVJdGVtICAgICAgICAgICAgOjo9ICBhbmNob3IgcGFyYWdyYXBoIDtcbiAgICBcbiAgICBcbiAgICBvcmRlcmVkTGlzdEl0ZW0gICAgICAgICA6Oj0gIFtudW1iZXJdPE5PX1dISVRFU1BBQ0U+XCIuXCIgbGluZSA7XG4gICAgXG4gICAgXG4gICAgdW5vcmRlcmVkTGlzdEl0ZW0gICAgICAgOjo9ICBbc2luZ2xlLWFzdGVyaXNrXSBsaW5lIDtcblxuXG4gICAgdGFibGVIZWFkICAgICAgICAgICAgICAgOjo9ICB0YWJsZUhlYWRSb3cgO1xuXG4gICAgXG4gICAgdGFibGVCb2R5ICAgICAgICAgICAgICAgOjo9ICB0YWJsZUJvZHlSb3crIDtcblxuICAgIFxuICAgIHRhYmxlU2VwYXJhdG9yLiAgICAgICAgIDo6PSAgW21hbnktZGFzaGVzXSBlbmRPZkxpbmUgO1xuXG4gICAgXG4gICAgdGFibGVIZWFkUm93ICAgICAgICAgICAgOjo9ICBbdmVydGljYWwtYmFyXSB0YWJsZUhlYWRDZWxsKyBlbmRPZkxpbmUgO1xuXG4gICAgXG4gICAgdGFibGVCb2R5Um93ICAgICAgICAgICAgOjo9ICBbdmVydGljYWwtYmFyXSB0YWJsZUJvZHlDZWxsKyBlbmRPZkxpbmUgO1xuXG5cbiAgICB0YWJsZUhlYWRDZWxsLiAgICAgICAgICA6Oj0gIGVtcHR5VGFibGVDZWxsIHwgdGFibGVDZWxsIDtcblxuXG4gICAgdGFibGVCb2R5Q2VsbC4gICAgICAgICAgOjo9ICBlbXB0eVRhYmxlQ2VsbCB8IHRhYmxlQ2VsbCA7IFxuXG5cbiAgICBlbXB0eVRhYmxlQ2VsbCAgICAgICAgICA6Oj0gIFwiLlwiIFt2ZXJ0aWNhbC1iYXJdO1xuICAgIFxuXG4gICAgdGFibGVDZWxsICAgICAgICAgICAgICAgOjo9ICAoIGxpbmsgfCBpbWFnZSB8IGh5cGVybGluayB8IG1haWxUb0xpbmsgfCBpbmxpbmVMaXN0aW5nIHwgc3Ryb25nbHlFbXBoYXNpc2VkVGV4dCB8IGVtcGhhc2lzZWRUZXh0IHwgc3Ryb25nVGV4dCB8IHRleHQgKSsgW3ZlcnRpY2FsLWJhcl0gO1xuXG5cbiAgICBsaW5lLiAgICAgICAgICAgICAgICAgICA6Oj0gICggbGluayB8IGltYWdlIHwgaHlwZXJsaW5rIHwgbWFpbFRvTGluayB8IGlubGluZUxpc3RpbmcgfCBzdHJvbmdseUVtcGhhc2lzZWRUZXh0IHwgZW1waGFzaXNlZFRleHQgfCBzdHJvbmdUZXh0IHwgdGV4dCApKyBlbmRPZkxpbmUgO1xuXG5cbiAgICBsaW5rLiAgICAgICAgICAgICAgICAgICA6Oj0gIFwiW15cIiBbaWRlbnRpZmllcl0gXCJdXCIgO1xuICAgIFxuXG4gICAgaW1hZ2UuICAgICAgICAgICAgICAgICAgOjo9ICBcIiFbXCIgaW5saW5lVGV4dC4uLiBcIl1cIjxOT19XSElURVNQQUNFPlwiKFwiIFtwYXRoXSBcIilcIiA7XG5cblxuICAgIGh5cGVybGluay4gICAgICAgICAgICAgIDo6PSAgXCJbXCIgaW5saW5lVGV4dC4uLiBcIl1cIjxOT19XSElURVNQQUNFPlwiKFwiIHVybCBcIilcIiBcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHVybFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgIG1haWxUb0xpbmsuICAgICAgICAgICAgIDo6PSAgXCJbXCIgaW5saW5lVGV4dC4uLiBcIl1cIjxOT19XSElURVNQQUNFPlwiKFwiIGFkZHJlc3MgXCIpXCIgXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBhZGRyZXNzIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG5cblxuICAgIHJlZmVyZW5jZS4gICAgICAgICAgICAgIDo6PSAgXCJbXlwiIFtpZGVudGlmaWVyXSBcIl06XCIgO1xuICAgIFxuXG4gICAgaW5saW5lTGlzdGluZyAgICAgICAgICAgOjo9ICBbYmFja3RpY2tdIGlubGluZVRleHQuLi4gW2JhY2t0aWNrXSA7XG4gICAgXG5cbiAgICBzdHJvbmdseUVtcGhhc2lzZWRUZXh0ICA6Oj0gIFt0cmlwbGUtYXN0ZXJpc2tdIGlubGluZVRleHQuLi4gW3RyaXBsZS1hc3Rlcmlza10gO1xuICAgIFxuXG4gICAgZW1waGFzaXNlZFRleHQgICAgICAgICAgOjo9ICBbc2luZ2xlLWFzdGVyaXNrXSBpbmxpbmVUZXh0Li4uIFtzaW5nbGUtYXN0ZXJpc2tdIDtcblxuXG4gICAgc3Ryb25nVGV4dCAgICAgICAgICAgICAgOjo9ICBbZG91YmxlLWFzdGVyaXNrXSBpbmxpbmVUZXh0Li4uIFtkb3VibGUtYXN0ZXJpc2tdIDtcblxuXG4gICAgYmxvY2tUZXh0LiAgICAgICAgICAgICAgOjo9ICAoIHRleHQgfCBlbmRPZkxpbmUgKSsgO1xuICAgIFxuXG4gICAgaW5saW5lVGV4dCAgICAgICAgICAgICAgOjo9ICB0ZXh0KyA7XG4gICAgXG4gICAgXG4gICAgYW5jaG9yICAgICAgICAgICAgICAgICAgOjo9ICBbbnVtYmVyXSA7XG4gICAgXG5cbiAgICB0ZXh0ICAgICAgICAgICAgICAgICAgICA6Oj0gIFtyZWd1bGFyLWV4cHJlc3Npb25dIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW3N0cmluZy1saXRlcmFsXSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW2VzY2FwZWRdIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBbbWFueS1kYXNoZXNdIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBbZGFzaGVzXSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW251bWJlcl0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIFtwYXRoXSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW2RvbWFpbl0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIFtzY2hlbWVdIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBbaWRlbnRpZmllcl0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIFt3b3JkXSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW3NwZWNpYWxdIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBbdW5hc3NpZ25lZF0gO1xuICAgIFxuXG4gICAgdXJsICAgICAgICAgICAgICAgICAgICAgOjo9ICBbc2NoZW1lXT8gW2RvbWFpbl0gW3BhdGhdPyA7XG4gICAgXG5cbiAgICBhZGRyZXNzICAgICAgICAgICAgICAgICA6Oj0gIFtkb21haW5dPE5PX1dISVRFU1BBQ0U+XCJAXCI8Tk9fV0hJVEVTUEFDRT5bZG9tYWluXSA7XG4gICAgXG5cbiAgICBjbGFzc05hbWUgICAgICAgICAgICAgICA6Oj0gIDxOT19XSElURVNQQUNFPltpZGVudGlmaWVyXSA7XG5cblxuICAgIGVuZE9mTGluZSAgICAgICAgICAgICAgIDo6PSAgPEVORF9PRl9MSU5FPiA7XG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcblxuIl0sIm5hbWVzIjpbImJuZiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBNE1BOzs7ZUFBQTs7O0FBMU1BLElBQU1BLE1BQU87SUEwTWIsV0FBZUEifQ==