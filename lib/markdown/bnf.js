"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var bnf = '\n\n    markdown                 ::=  ( division | error )+ ;\n    \n    \n    division                 ::=  ( subDivision | verticalSpace )+ ;\n    \n    \n    subDivision..            ::=  directives \n    \n                               |  primaryHeading \n\n                               |  secondaryHeading \n                                   \n                               |  tertiaryHeading \n                                   \n                               |  quaternaryHeading \n                                   \n                               |  table \n                                   \n                               |  footnote\n                                   \n                               |  orderedList \n                                   \n                               |  unorderedList \n                                   \n                               |  blockListing \n      \n                               |  paragraph \n                               \n                               ;\n\n    \n    verticalSpace            ::=  endOfLine+ ;\n\n\n    error.                   ::=  . ;\n\n\n    directives               ::=  indexDirective \n  \n                               |  ignoreDirective \n  \n                               |  contentsDirective \n  \n                               |  footnotesDirective\n                               \n                               |  pageNumberDirective \n    \n                               |  embedDirective ( endOfLine embedDirective )* \n                               \n                               |  includeDirective ( endOfLine includeDirective )* \n\n                               ; \n  \n\n    primaryHeading.          ::=  "#" line ;\n\n\n    secondaryHeading.        ::=  "##" line ;\n\n\n    tertiaryHeading.         ::=  "###" line ;\n    \n    \n    quaternaryHeading.       ::=  "####" line ;\n\n\n    table                    ::=  tableHead endOfLine tableDivider endOfLine tableBody ;\n\n\n    footnote.                ::=  reference paragraph ;\n\n\n    orderedList              ::=  orderedItem ( endOfLine orderedItem )* ;\n\n\n    unorderedList            ::=  unorderedItem ( endOfLine unorderedItem )* ;\n\n\n    blockListing             ::=  blockStart blockLine* blockEnd ;\n\n\n    paragraph                ::=  line ( endOfLine line )* ;\n    \n\n    indexDirective           ::=  "@index" ;\n\n\n    ignoreDirective          ::=  "@ignore" ;\n\n\n    embedDirective           ::=  "@embed" ( path | nonsense ) ;\n\n\n    includeDirective         ::=  "@include" ( path | nonsense ) ;\n\n\n    contentsDirective        ::=  "@contents" ;\n\n\n    footnotesDirective       ::=  "@footnotes" ;\n\n\n    pageNumberDirective      ::=  "@pageNumber" ;\n\n\n    nonsense.                ::=  ( [escaped] | [number] | [identifier] | [word] | [special] | [unassigned] )+ ;\n\n\n    tableHead                ::=  tableHeadRow ;\n    \n    \n    tableBody                ::=  tableBodyRow ( endOfLine tableBodyRow )* ;\n\n    \n    orderedItem              ::=  [marker] line ( endOfLine line )* ;\n    \n    \n    unorderedItem            ::=  [bullet] line ( endOfLine line )* ;\n\n\n    tableHeadRow             ::=  tableCellDivider tableHeadCell+ ;\n\n    \n    tableBodyRow             ::=  tableCellDivider tableBodyCell+ ;\n\n\n    tableHeadCell            ::=  emptyTableCell \n    \n                               |  tableCell \n                              \n                               ;\n\n\n    tableBodyCell            ::=  emptyTableCell \n    \n                               |  tableCell \n                              \n                               ; \n\n\n    emptyTableCell           ::=  "." tableCellDivider ;\n    \n\n    tableCell                ::=  line tableCellDivider ;\n    \n    \n    line.                    ::=  ( inlineListing \n    \n                                  | footnoteLink \n                                 \n                                  | emailLink \n                                 \n                                  | hyperlink \n                                 \n                                  | image \n                                 \n                                  | strongText \n                                 \n                                  | emphasisedText \n                                 \n                                  | stronglyEmphasisedText \n                                 \n                                  | plainText )+ ;\n    \n    \n    blockLine.               ::=  blockText* endOfLine ;\n    \n\n    emailLink                ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" [email-address] ")" \n    \n                               |  [email-address] \n                              \n                               ;\n\n\n    hyperlink                ::=  "[" inlineText... "]"<NO_WHITESPACE>"(" [url] ")" \n    \n                               |  [url]\n                              \n                               ;\n\n\n    image                    ::=  "![" inlineText... "]"<NO_WHITESPACE>"(" path ")" ;\n\n\n    strongText               ::=  "***" inlineText "***" ;\n\n\n    emphasisedText           ::=  "**" inlineText "**" ;\n\n\n    stronglyEmphasisedText   ::=  "****" inlineText "****" ;\n    \n\n    inlineText               ::=  plainText+ ;\n    \n    \n    blockStart               ::=  [backticks] className? endOfLine ;\n\n\n    blockEnd                 ::=  [backticks] ;\n\n\n    className                ::=  <NO_WHITESPACE>[identifier] ;\n    \n\n    blockText                ::=  [escaped] \n                              \n                               |  [number] \n                              \n                               |  [identifier] \n                              \n                               |  [email-address]\n                              \n                               |  [url] \n                              \n                               |  [path] \n                              \n                               |  [word] \n                              \n                               |  [special] \n                              \n                               |  [unassigned]  \n                                \n                               |  [dashes] \n \n                               |  [vertical-bar]\n                              \n                               ;\n    \n\n    plainText                ::=  [escaped] \n                              \n                               |  [number] \n                              \n                               |  [identifier] \n                              \n                               |  [email-address]\n                              \n                               |  [url] \n                              \n                               |  [path] \n                              \n                               |  [word] \n                              \n                               |  [special] \n                              \n                               |  [unassigned] \n                              \n                               ;\n    \n\n    tableCellDivider.        ::=  [vertical-bar] ;\n    \n    \n    tableDivider.            ::=  [dashes] ;\n    \n    \n    inlineListing.           ::=  [backticked-literal] ;\n    \n\n    footnoteLink             ::=  [link] ;\n    \n\n    reference                ::=  [reference] ;\n    \n\n    path                     ::=  [path] ;\n\n\n    endOfLine                ::=  <END_OF_LINE> ;\n\n';
var _default = bnf;

//# sourceMappingURL=data:application/json;base64,