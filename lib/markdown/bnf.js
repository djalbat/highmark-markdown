"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var bnf = '\n\n    document                ::=  ( blockListing | orderedList | unorderedList | table | footnote | primaryHeading | secondaryHeading | tertiaryHeading | quaternaryHeading | lineBreak | paragraph | verticalSpace | error )+ ;\n\n    \n    blockListing            ::=  blockListingStart blockText blockListingEnd ;\n\n\n    orderedList             ::=  orderedListItem+ ;\n\n\n    unorderedList           ::=  unorderedListItem+ ;\n\n\n    footnotesList           ::=  footnoteItem+ ;\n\n\n    table                   ::=  tableHead tableSeparator tableBody ;\n\n\n    footnote                ::=  reference paragraph ;\n\n\n    primaryHeading          ::=  [single-hash] line ;\n\n\n    secondaryHeading        ::=  [double-hash] line ;\n\n\n    tertiaryHeading         ::=  [triple-hash] line ;\n    \n    \n    quaternaryHeading       ::=  [quadruple-hash] line ;\n\n\n    lineBreak!              ::=  [dashes] endOfLine ;\n\n\n    paragraph               ::=  line+ ;\n    \n\n    verticalSpace!          ::=  endOfLine+ ;\n\n\n    error!                  ::=  . ;\n\n\n    blockListingStart       ::=  [backticks] className? endOfLine ;\n\n\n    blockListingEnd         ::=  [backticks] endOfLine ;\n\n\n    footnoteItem            ::=  anchor paragraph ;\n    \n    \n    orderedListItem         ::=  [number]<NO_WHITESPACE>"." line ;\n    \n    \n    unorderedListItem       ::=  [single-asterisk] line ;\n\n\n    tableHead               ::=  tableHeadRow ;\n\n    \n    tableBody               ::=  tableBodyRow+ ;\n\n    \n    tableSeparator!         ::=  [many-dashes] endOfLine ;\n\n    \n    tableHeadRow            ::=  [vertical-bar] tableHeadCell+ endOfLine ;\n\n    \n    tableBodyRow            ::=  [vertical-bar] tableBodyCell+ endOfLine ;\n\n\n    tableHeadCell!          ::=  tableCell ;\n\n\n    tableBodyCell!          ::=  tableCell ; \n\n\n    tableCell               ::=  ( link | hyperlink | inlineListing | stronglyEmphasisedText | emphasisedText | strongText | text )+ [vertical-bar] ;\n\n\n    line!                   ::=  ( link | image | hyperlink | inlineListing | stronglyEmphasisedText | emphasisedText | strongText | text )+ endOfLine ;\n\n\n    link!                   ::=  [open-square-bracket-caret] [identifier] [close-square-bracket] ;\n    \n\n    image                   ::=  [exclamation-mark-open-square-bracket] inlineText... [close-square-bracket]<NO_WHITESPACE>"(" url ")" ;\n\n\n    hyperlink               ::=  [open-square-bracket] inlineText... [close-square-bracket]<NO_WHITESPACE>"(" url ")" ;\n\n\n    reference!              ::=  [open-square-bracket-caret] [identifier] [close-square-bracket-colon] ;\n    \n\n    inlineListing           ::=  [backtick] inlineText... [backtick] ;\n    \n\n    stronglyEmphasisedText  ::=  [triple-asterisk] inlineText... [triple-asterisk] ;\n    \n\n    emphasisedText          ::=  [single-asterisk] inlineText... [single-asterisk] ;\n\n\n    strongText              ::=  [double-asterisk] inlineText... [double-asterisk] ;\n\n\n    blockText!              ::=  ( text | endOfLine )+ ;\n    \n\n    inlineText              ::=  text+ ;\n    \n    \n    anchor                  ::=  [number] ;\n    \n\n    text                    ::=  [escaped] | [number] | [path] | [domain] | [protocol] | [identifier] | [word] | [special] | [unassigned] ;\n    \n\n    url                     ::=  ( [protocol] [domain] )? [path] \n    \n                              |  [protocol] [domain]\n                              \n                              ;\n    \n\n    className               ::=  <NO_WHITESPACE>[identifier] ;\n\n\n    endOfLine               ::=  <END_OF_LINE> ;\n\n';
var _default = bnf;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXJrZG93bi9ibmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGJuZiA9IGBcblxuICAgIGRvY3VtZW50ICAgICAgICAgICAgICAgIDo6PSAgKCBibG9ja0xpc3RpbmcgfCBvcmRlcmVkTGlzdCB8IHVub3JkZXJlZExpc3QgfCB0YWJsZSB8IGZvb3Rub3RlIHwgcHJpbWFyeUhlYWRpbmcgfCBzZWNvbmRhcnlIZWFkaW5nIHwgdGVydGlhcnlIZWFkaW5nIHwgcXVhdGVybmFyeUhlYWRpbmcgfCBsaW5lQnJlYWsgfCBwYXJhZ3JhcGggfCB2ZXJ0aWNhbFNwYWNlIHwgZXJyb3IgKSsgO1xuXG4gICAgXG4gICAgYmxvY2tMaXN0aW5nICAgICAgICAgICAgOjo9ICBibG9ja0xpc3RpbmdTdGFydCBibG9ja1RleHQgYmxvY2tMaXN0aW5nRW5kIDtcblxuXG4gICAgb3JkZXJlZExpc3QgICAgICAgICAgICAgOjo9ICBvcmRlcmVkTGlzdEl0ZW0rIDtcblxuXG4gICAgdW5vcmRlcmVkTGlzdCAgICAgICAgICAgOjo9ICB1bm9yZGVyZWRMaXN0SXRlbSsgO1xuXG5cbiAgICBmb290bm90ZXNMaXN0ICAgICAgICAgICA6Oj0gIGZvb3Rub3RlSXRlbSsgO1xuXG5cbiAgICB0YWJsZSAgICAgICAgICAgICAgICAgICA6Oj0gIHRhYmxlSGVhZCB0YWJsZVNlcGFyYXRvciB0YWJsZUJvZHkgO1xuXG5cbiAgICBmb290bm90ZSAgICAgICAgICAgICAgICA6Oj0gIHJlZmVyZW5jZSBwYXJhZ3JhcGggO1xuXG5cbiAgICBwcmltYXJ5SGVhZGluZyAgICAgICAgICA6Oj0gIFtzaW5nbGUtaGFzaF0gbGluZSA7XG5cblxuICAgIHNlY29uZGFyeUhlYWRpbmcgICAgICAgIDo6PSAgW2RvdWJsZS1oYXNoXSBsaW5lIDtcblxuXG4gICAgdGVydGlhcnlIZWFkaW5nICAgICAgICAgOjo9ICBbdHJpcGxlLWhhc2hdIGxpbmUgO1xuICAgIFxuICAgIFxuICAgIHF1YXRlcm5hcnlIZWFkaW5nICAgICAgIDo6PSAgW3F1YWRydXBsZS1oYXNoXSBsaW5lIDtcblxuXG4gICAgbGluZUJyZWFrISAgICAgICAgICAgICAgOjo9ICBbZGFzaGVzXSBlbmRPZkxpbmUgO1xuXG5cbiAgICBwYXJhZ3JhcGggICAgICAgICAgICAgICA6Oj0gIGxpbmUrIDtcbiAgICBcblxuICAgIHZlcnRpY2FsU3BhY2UhICAgICAgICAgIDo6PSAgZW5kT2ZMaW5lKyA7XG5cblxuICAgIGVycm9yISAgICAgICAgICAgICAgICAgIDo6PSAgLiA7XG5cblxuICAgIGJsb2NrTGlzdGluZ1N0YXJ0ICAgICAgIDo6PSAgW2JhY2t0aWNrc10gY2xhc3NOYW1lPyBlbmRPZkxpbmUgO1xuXG5cbiAgICBibG9ja0xpc3RpbmdFbmQgICAgICAgICA6Oj0gIFtiYWNrdGlja3NdIGVuZE9mTGluZSA7XG5cblxuICAgIGZvb3Rub3RlSXRlbSAgICAgICAgICAgIDo6PSAgYW5jaG9yIHBhcmFncmFwaCA7XG4gICAgXG4gICAgXG4gICAgb3JkZXJlZExpc3RJdGVtICAgICAgICAgOjo9ICBbbnVtYmVyXTxOT19XSElURVNQQUNFPlwiLlwiIGxpbmUgO1xuICAgIFxuICAgIFxuICAgIHVub3JkZXJlZExpc3RJdGVtICAgICAgIDo6PSAgW3NpbmdsZS1hc3Rlcmlza10gbGluZSA7XG5cblxuICAgIHRhYmxlSGVhZCAgICAgICAgICAgICAgIDo6PSAgdGFibGVIZWFkUm93IDtcblxuICAgIFxuICAgIHRhYmxlQm9keSAgICAgICAgICAgICAgIDo6PSAgdGFibGVCb2R5Um93KyA7XG5cbiAgICBcbiAgICB0YWJsZVNlcGFyYXRvciEgICAgICAgICA6Oj0gIFttYW55LWRhc2hlc10gZW5kT2ZMaW5lIDtcblxuICAgIFxuICAgIHRhYmxlSGVhZFJvdyAgICAgICAgICAgIDo6PSAgW3ZlcnRpY2FsLWJhcl0gdGFibGVIZWFkQ2VsbCsgZW5kT2ZMaW5lIDtcblxuICAgIFxuICAgIHRhYmxlQm9keVJvdyAgICAgICAgICAgIDo6PSAgW3ZlcnRpY2FsLWJhcl0gdGFibGVCb2R5Q2VsbCsgZW5kT2ZMaW5lIDtcblxuXG4gICAgdGFibGVIZWFkQ2VsbCEgICAgICAgICAgOjo9ICB0YWJsZUNlbGwgO1xuXG5cbiAgICB0YWJsZUJvZHlDZWxsISAgICAgICAgICA6Oj0gIHRhYmxlQ2VsbCA7IFxuXG5cbiAgICB0YWJsZUNlbGwgICAgICAgICAgICAgICA6Oj0gICggbGluayB8IGh5cGVybGluayB8IGlubGluZUxpc3RpbmcgfCBzdHJvbmdseUVtcGhhc2lzZWRUZXh0IHwgZW1waGFzaXNlZFRleHQgfCBzdHJvbmdUZXh0IHwgdGV4dCApKyBbdmVydGljYWwtYmFyXSA7XG5cblxuICAgIGxpbmUhICAgICAgICAgICAgICAgICAgIDo6PSAgKCBsaW5rIHwgaW1hZ2UgfCBoeXBlcmxpbmsgfCBpbmxpbmVMaXN0aW5nIHwgc3Ryb25nbHlFbXBoYXNpc2VkVGV4dCB8IGVtcGhhc2lzZWRUZXh0IHwgc3Ryb25nVGV4dCB8IHRleHQgKSsgZW5kT2ZMaW5lIDtcblxuXG4gICAgbGluayEgICAgICAgICAgICAgICAgICAgOjo9ICBbb3Blbi1zcXVhcmUtYnJhY2tldC1jYXJldF0gW2lkZW50aWZpZXJdIFtjbG9zZS1zcXVhcmUtYnJhY2tldF0gO1xuICAgIFxuXG4gICAgaW1hZ2UgICAgICAgICAgICAgICAgICAgOjo9ICBbZXhjbGFtYXRpb24tbWFyay1vcGVuLXNxdWFyZS1icmFja2V0XSBpbmxpbmVUZXh0Li4uIFtjbG9zZS1zcXVhcmUtYnJhY2tldF08Tk9fV0hJVEVTUEFDRT5cIihcIiB1cmwgXCIpXCIgO1xuXG5cbiAgICBoeXBlcmxpbmsgICAgICAgICAgICAgICA6Oj0gIFtvcGVuLXNxdWFyZS1icmFja2V0XSBpbmxpbmVUZXh0Li4uIFtjbG9zZS1zcXVhcmUtYnJhY2tldF08Tk9fV0hJVEVTUEFDRT5cIihcIiB1cmwgXCIpXCIgO1xuXG5cbiAgICByZWZlcmVuY2UhICAgICAgICAgICAgICA6Oj0gIFtvcGVuLXNxdWFyZS1icmFja2V0LWNhcmV0XSBbaWRlbnRpZmllcl0gW2Nsb3NlLXNxdWFyZS1icmFja2V0LWNvbG9uXSA7XG4gICAgXG5cbiAgICBpbmxpbmVMaXN0aW5nICAgICAgICAgICA6Oj0gIFtiYWNrdGlja10gaW5saW5lVGV4dC4uLiBbYmFja3RpY2tdIDtcbiAgICBcblxuICAgIHN0cm9uZ2x5RW1waGFzaXNlZFRleHQgIDo6PSAgW3RyaXBsZS1hc3Rlcmlza10gaW5saW5lVGV4dC4uLiBbdHJpcGxlLWFzdGVyaXNrXSA7XG4gICAgXG5cbiAgICBlbXBoYXNpc2VkVGV4dCAgICAgICAgICA6Oj0gIFtzaW5nbGUtYXN0ZXJpc2tdIGlubGluZVRleHQuLi4gW3NpbmdsZS1hc3Rlcmlza10gO1xuXG5cbiAgICBzdHJvbmdUZXh0ICAgICAgICAgICAgICA6Oj0gIFtkb3VibGUtYXN0ZXJpc2tdIGlubGluZVRleHQuLi4gW2RvdWJsZS1hc3Rlcmlza10gO1xuXG5cbiAgICBibG9ja1RleHQhICAgICAgICAgICAgICA6Oj0gICggdGV4dCB8IGVuZE9mTGluZSApKyA7XG4gICAgXG5cbiAgICBpbmxpbmVUZXh0ICAgICAgICAgICAgICA6Oj0gIHRleHQrIDtcbiAgICBcbiAgICBcbiAgICBhbmNob3IgICAgICAgICAgICAgICAgICA6Oj0gIFtudW1iZXJdIDtcbiAgICBcblxuICAgIHRleHQgICAgICAgICAgICAgICAgICAgIDo6PSAgW2VzY2FwZWRdIHwgW251bWJlcl0gfCBbcGF0aF0gfCBbZG9tYWluXSB8IFtwcm90b2NvbF0gfCBbaWRlbnRpZmllcl0gfCBbd29yZF0gfCBbc3BlY2lhbF0gfCBbdW5hc3NpZ25lZF0gO1xuICAgIFxuXG4gICAgdXJsICAgICAgICAgICAgICAgICAgICAgOjo9ICAoIFtwcm90b2NvbF0gW2RvbWFpbl0gKT8gW3BhdGhdIFxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgW3Byb3RvY29sXSBbZG9tYWluXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7XG4gICAgXG5cbiAgICBjbGFzc05hbWUgICAgICAgICAgICAgICA6Oj0gIDxOT19XSElURVNQQUNFPltpZGVudGlmaWVyXSA7XG5cblxuICAgIGVuZE9mTGluZSAgICAgICAgICAgICAgIDo6PSAgPEVORF9PRl9MSU5FPiA7XG5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGJuZjtcblxuIl0sIm5hbWVzIjpbImJuZiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBNklBOzs7ZUFBQTs7O0FBM0lBLElBQU1BLE1BQU87SUEySWIsV0FBZUEifQ==